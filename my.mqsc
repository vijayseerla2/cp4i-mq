*******************************************************************************
* Script generated on 2024-03-08   at 11.13.42 
* Script generated by user 'mqm' on host 'rllq2mq.poloralphlauren.com' 
* Queue manager name: IIBA2HD01 
* Queue manager platform: UNIX 
* Queue manager command level: (930/930)   
* Command issued: dmpmqcfg -x all -t all -o mqsc -m IIBA2HD01  
*******************************************************************************
ALTER QMGR +
*  ADVCAP(ENABLED) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.46) +
   CCSID(819) +
   CERTLABL('ibmwebspheremqiiba2hd01') +
   CLWLUSEQ(LOCAL) +
*  COMMANDQ(SYSTEM.ADMIN.COMMAND.QUEUE) +
   CONNAUTH('SYSTEM.DEFAULT.AUTHINFO.IDPWOS') +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.56) +
   DEADQ('IIBA2HD01.DEAD.LETTER.QUEUE') +
   MAXMSGL(104857600) +
   MAXUMSGS(20000) +
   MONQ(LOW) +
*  QMID(IIBA2HD01_2023-02-25_00.52.56) +
   SSLCRYP(' ') +
   SSLKEYR('/var/mqm/vols/iiba2hd01/qmgr/iiba2hd01/ssl/key') +
   SUITEB(NONE) +
*  VERSION(09030003) +
   FORCE
DEFINE QLOCAL('AAL.JDA.TO.IPU.OUTPUT') +
*  ALTDATE(2023-06-13) +
*  ALTTIME(04.37.34) +
*  CRDATE(2023-06-13) +
*  CRTIME(04.37.34) +
*  CURDEPTH(214) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('ADAPT.ACE.SAP.CREATEASSET.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.46) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('ADAPT.ACE.SAP.CREATEASSET.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.46) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('ADAPT.ACE.SAP.CREATEASSET.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.46) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('ADAPT.ACE.SAP.CREATEASSET.OUT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.46) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('ADAPT.ACE.SAP.UPDATEASSET.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.46) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('ADAPT.ACE.SAP.UPDATEASSET.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.46) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('ADAPT.ACE.SAP.UPDATEASSET.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.46) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('ADAPT.ACE.SAP.UPDATEASSET.OUT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.46) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('ADAPT.ACE.SAP.XFERASSET.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.46) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('ADAPT.ACE.SAP.XFERASSET.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.46) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('ADAPT.ACE.SAP.XFERASSET.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.46) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('ADAPT.ACE.SAP.XFERASSET.OUT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.46) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('ADAPT.IIB.SAP.ARCREATEVENDOR.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.46) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('ADAPT.IIB.SAP.ARCREATEVENDOR.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.46) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('ADAPT.IIB.SAP.ARCREATEVENDOR.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.46) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('ADAPT.IIB.SAP.ARCREATEVENDOR.OUT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.46) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('ADAPT.SAP.IIB.ARUPDATEVENDOR.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.46) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('ADAPT.SAP.IIB.ARUPDATEVENDOR.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.46) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('ADAPT.SAP.IIB.ARUPDATEVENDOR.IN.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.46) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('ADAPT.SAP.IIB.EUDCINV.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.46) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('ADAPT.SAP.IIB.EUDCINV.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.46) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('ADAPT.SAP.IIB.EUDCINV.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.46) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('ADAPT.SAP.IIB.EUDCINV.IN.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.46) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('ADAPT.SAP.IIB.OMSEU.RLS.ORDERCAN.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.46) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('ADAPT.SAP.IIB.OMSEU.RLS.SHIPMENTCNF.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.47) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('ADAPT.SAP.IIB.WHDEM.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.47) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('ADAPT.SAP.IIB.WHDEM.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.47) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('ADAPT.SAP.IIB.WHDEM.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.47) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('ADAPT.SAP.IIB.WHDEM.IN.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.47) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('B2B.IIB.NUO.NOORDERACKNA.ERROR') +
*  ALTDATE(2023-10-03) +
*  ALTTIME(05.12.31) +
*  CRDATE(2023-10-03) +
*  CRTIME(05.12.31) +
*  CURDEPTH(3) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2B.IIB.NUO.NOORDERACKNA.ERROR.DETAILS') +
*  ALTDATE(2023-10-03) +
*  ALTTIME(05.11.32) +
*  CRDATE(2023-10-03) +
*  CRTIME(05.11.32) +
*  CURDEPTH(3) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2B.IIB.NUO.NOORDERACKNA.IN') +
*  ALTDATE(2023-10-03) +
*  ALTTIME(05.02.38) +
*  CRDATE(2023-10-03) +
*  CRTIME(05.02.38) +
*  CURDEPTH(2) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2B.IIB.NUO.NOORDERACKNA.OUT.LOG') +
*  ALTDATE(2023-10-03) +
*  ALTTIME(05.03.24) +
*  CRDATE(2023-10-03) +
*  CRTIME(05.03.24) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2B.IIB.SAP.NOORDERACKNA.OUT.LOG') +
*  ALTDATE(2023-09-29) +
*  ALTTIME(08.22.25) +
*  CRDATE(2023-09-29) +
*  CRTIME(08.22.25) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2B.NUO.SAP.NOPBKORDACKNA.OUT.LOG') +
*  ALTDATE(2024-01-05) +
*  ALTTIME(12.03.31) +
*  CRDATE(2024-01-05) +
*  CRTIME(12.03.31) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2B.NUO.SAP.NOPBKORDCNA.IN') +
*  ALTDATE(2024-01-05) +
*  ALTTIME(02.32.40) +
*  CRDATE(2024-01-05) +
*  CRTIME(02.32.40) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2B.NUO.SAP.NOPBKORDCNA.OUT.LOG') +
*  ALTDATE(2024-01-05) +
*  ALTTIME(02.33.19) +
*  CRDATE(2024-01-05) +
*  CRTIME(02.32.55) +
*  CURDEPTH(5) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2B.SAP.IIB.NOORDERACKNA.IN.LOG') +
*  ALTDATE(2023-09-25) +
*  ALTTIME(13.13.48) +
*  CRDATE(2023-09-25) +
*  CRTIME(07.01.51) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2B.SAP.IIB.NOSHIPMENTNA.IN.LOG') +
*  ALTDATE(2024-01-17) +
*  ALTTIME(06.35.52) +
*  CRDATE(2024-01-17) +
*  CRTIME(06.35.52) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2BEMEA.GFE.NUO.BASECURRENCY.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.47) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.47) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('B2BEMEA.GFE.NUO.INTLIDENTIFIER.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.47) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.47) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('B2BEMEA.IIB.NUO.INVDELTAFEED.ERROR') +
*  ALTDATE(2023-05-18) +
*  ALTTIME(02.57.43) +
*  CRDATE(2023-05-18) +
*  CRTIME(02.57.43) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2BEMEA.IIB.NUO.INVDELTAFEED.IN') +
*  ALTDATE(2023-05-11) +
*  ALTTIME(06.42.08) +
*  CRDATE(2023-05-11) +
*  CRTIME(06.42.08) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2BEMEA.IIB.NUO.INVDELTAFEED.OUT.LOG') +
*  ALTDATE(2024-02-16) +
*  ALTTIME(00.52.11) +
*  CRDATE(2024-02-16) +
*  CRTIME(00.52.11) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('B2BEMEA.IIB.NUO.NOORDACK.ERROR') +
*  ALTDATE(2023-04-20) +
*  ALTTIME(13.13.02) +
*  CRDATE(2023-04-20) +
*  CRTIME(13.13.02) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2BEMEA.IIB.NUO.NOORDACK.ERROR.DETAILS') +
*  ALTDATE(2023-04-20) +
*  ALTTIME(13.12.46) +
*  CRDATE(2023-04-20) +
*  CRTIME(13.12.46) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2BEMEA.IIB.NUO.NOORDACK.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.47) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2BEMEA.IIB.NUO.NOORDACK.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.47) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('B2BEMEA.IIB.NUO.NOORDACK.OUT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.47) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2BEMEA.IIB.NUO.NOORDCANCEL.ERROR') +
*  ALTDATE(2024-01-25) +
*  ALTTIME(02.17.59) +
*  CRDATE(2024-01-25) +
*  CRTIME(02.17.59) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2BEMEA.IIB.NUO.NOORDCANCEL.ERROR.DETAILS') +
*  ALTDATE(2024-01-25) +
*  ALTTIME(02.18.18) +
*  CRDATE(2024-01-25) +
*  CRTIME(02.18.18) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2BEMEA.IIB.NUO.NOORDCANCEL.IN') +
*  ALTDATE(2024-01-25) +
*  ALTTIME(02.17.21) +
*  CRDATE(2024-01-25) +
*  CRTIME(02.17.21) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2BEMEA.IIB.NUO.NOORDCANCEL.OUT.LOG') +
*  ALTDATE(2024-01-25) +
*  ALTTIME(02.17.39) +
*  CRDATE(2024-01-25) +
*  CRTIME(02.17.39) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2BEMEA.IIB.NUO.NOORDENDOFMARKET.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.47) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.47) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('B2BEMEA.IIB.NUO.NOORDENDOFMARKET.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.47) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('B2BEMEA.IIB.NUO.NOSHIPMENT.ERROR') +
*  ALTDATE(2023-09-04) +
*  ALTTIME(08.55.48) +
*  CRDATE(2023-09-04) +
*  CRTIME(08.55.48) +
*  CURDEPTH(66) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2BEMEA.IIB.NUO.NOSHIPMENT.ERROR.DETAILS') +
*  ALTDATE(2023-09-04) +
*  ALTTIME(08.56.01) +
*  CRDATE(2023-09-04) +
*  CRTIME(08.56.01) +
*  CURDEPTH(66) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2BEMEA.IIB.NUO.NOSHIPMENT.IN') +
*  ALTDATE(2023-08-08) +
*  ALTTIME(11.01.04) +
*  CRDATE(2023-08-08) +
*  CRTIME(11.01.04) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2BEMEA.IIB.NUO.NOSHIPMENT.OUT.LOG') +
*  ALTDATE(2023-09-04) +
*  ALTTIME(03.53.07) +
*  CRDATE(2023-09-04) +
*  CRTIME(03.53.07) +
*  CURDEPTH(12) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2BEMEA.IIB.NUO.NOTWAYORD.ERROR') +
*  ALTDATE(2023-06-13) +
*  ALTTIME(02.45.27) +
*  CRDATE(2023-06-13) +
*  CRTIME(02.38.12) +
*  CURDEPTH(14) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   MAXMSGL(104857599) +
   REPLACE
DEFINE QLOCAL('B2BEMEA.IIB.NUO.NOTWAYORD.ERROR.DETAILS') +
*  ALTDATE(2023-06-13) +
*  ALTTIME(02.45.16) +
*  CRDATE(2023-06-13) +
*  CRTIME(02.38.25) +
*  CURDEPTH(14) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   MAXMSGL(104857599) +
   REPLACE
DEFINE QLOCAL('B2BEMEA.IIB.NUO.NOTWAYORD.IN') +
*  ALTDATE(2023-06-13) +
*  ALTTIME(02.04.35) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.47) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   MAXMSGL(104857599) +
   REPLACE
DEFINE QLOCAL('B2BEMEA.IIB.NUO.NOTWAYORD.OUT.LOG') +
*  ALTDATE(2023-06-13) +
*  ALTTIME(02.47.37) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.47) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   MAXMSGL(104857599) +
   REPLACE
DEFINE QLOCAL('B2BEMEA.NUO.SAP.NOPBKORDC.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.47) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2BEMEA.NUO.SAP.NOPBKORDC.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.47) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2BEMEA.NUO.SAP.NOPBKORDC.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.47) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.47) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('B2BEMEA.NUO.SAP.NOPBKORDC.OUT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.47) +
*  CURDEPTH(2) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2BEMEA.SAP.IIB.NOORDACK.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.47) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('B2BEMEA.SAP.IIB.NOORDCANCEL.ERROR') +
*  ALTDATE(2024-01-25) +
*  ALTTIME(02.16.46) +
*  CRDATE(2024-01-25) +
*  CRTIME(02.16.46) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2BEMEA.SAP.IIB.NOORDCANCEL.ERROR.DETAILS') +
*  ALTDATE(2024-01-25) +
*  ALTTIME(02.17.01) +
*  CRDATE(2024-01-25) +
*  CRTIME(02.17.01) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2BEMEA.SAP.IIB.NOORDCANCEL.IN.LOG') +
*  ALTDATE(2024-01-25) +
*  ALTTIME(02.16.26) +
*  CRDATE(2024-01-25) +
*  CRTIME(02.16.26) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2BEMEA.SAP.IIB.NOSHIPMENT.ERROR') +
*  ALTDATE(2023-08-08) +
*  ALTTIME(11.01.16) +
*  CRDATE(2023-08-08) +
*  CRTIME(11.01.16) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2BEMEA.SAP.IIB.NOSHIPMENT.ERROR.DETAILS') +
*  ALTDATE(2023-08-08) +
*  ALTTIME(11.01.33) +
*  CRDATE(2023-08-08) +
*  CRTIME(11.01.33) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2BEMEA.SAP.IIB.NOSHIPMENT.IN') +
*  ALTDATE(2023-08-08) +
*  ALTTIME(10.59.49) +
*  CRDATE(2023-08-08) +
*  CRTIME(10.59.49) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2BEMEA.SAP.IIB.NOSHIPMENT.IN.LOG') +
*  ALTDATE(2023-08-08) +
*  ALTTIME(11.00.02) +
*  CRDATE(2023-08-08) +
*  CRTIME(11.00.02) +
*  CURDEPTH(2) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2BEMEA.SAP.NUO.NOORDLCKEOM.ERROR') +
*  ALTDATE(2023-07-06) +
*  ALTTIME(11.10.51) +
*  CRDATE(2023-07-06) +
*  CRTIME(11.10.51) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2BEMEA.SAP.NUO.NOORDLCKEOM.ERROR.DETAILS') +
*  ALTDATE(2023-07-06) +
*  ALTTIME(11.11.06) +
*  CRDATE(2023-07-06) +
*  CRTIME(11.11.06) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2BEMEA.SAP.NUO.NOORDLCKEOM.IN') +
*  ALTDATE(2023-07-06) +
*  ALTTIME(11.09.39) +
*  CRDATE(2023-07-06) +
*  CRTIME(11.09.39) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2BEMEA.SAP.NUO.NOORDLCKEOM.OUT.LOG') +
*  ALTDATE(2023-07-06) +
*  ALTTIME(11.10.07) +
*  CRDATE(2023-07-06) +
*  CRTIME(11.10.07) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2BNA.ANA.NUO.EXTNDMATMSTR.IN') +
*  ALTDATE(2023-12-13) +
*  ALTTIME(05.00.29) +
*  CRDATE(2023-12-13) +
*  CRTIME(05.00.29) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2BNA.ANA.NUO.EXTNDMATMSTR.OUT') +
*  ALTDATE(2023-12-13) +
*  ALTTIME(05.00.45) +
*  CRDATE(2023-12-13) +
*  CRTIME(05.00.45) +
*  CURDEPTH(2) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('CM.OMS.ZETA.ORDERNOTIFY.LOG') +
*  ALTDATE(2023-09-11) +
*  ALTTIME(10.57.22) +
*  CRDATE(2023-09-11) +
*  CRTIME(10.57.22) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('CONVEYTEST') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.47) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('DEFAULT.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.47) +
*  CURDEPTH(16143) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('DEFAULT.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.47) +
*  CURDEPTH(16143) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('DEVOPS.SAMPLE.PIPELINE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.47) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('DEVOPS.TESTING.SAMPLE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.47) +
   DISTL(NO) +
   MAXDEPTH(500) +
   REPLACE
DEFINE QLOCAL('DEVOPSTESTING') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.47) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.47) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('DPTEST.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.47) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('DPTEST.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.47) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('Duplicate') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.47) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('EAI.RL.AUDITEVENT.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.47) +
   BOQNAME('EAI.RL.AUDITEVENT.IN.BCKOUT') +
   BOTHRESH(1) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.47) +
*  CURDEPTH(5294) +
   DEFPSIST(YES) +
   DESCR('Monitoring queue') +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('EAI.RL.AUDITEVENT.IN.BCKOUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.47) +
   DEFPSIST(YES) +
   DESCR('Monitoring backout queue') +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('ESB.COMMON.HEARTBEAT.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.47) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('ESB.COMMON.HEARTBEAT.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.47) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('ESB.COMMON.HEARTBEAT.SEC.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.47) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('ESB.COMMON.HEARTBEAT.SEC.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.47) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('ESB.COMMON.HEARTBEAT.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.47) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('ESB.COMMON.IDTRACKING.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.48) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('ESB.COMMON.IDTRACKING.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.48) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('ESB.COMMON.IDTRACKING.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('Error.Q') +
*  ALTDATE(2023-05-18) +
*  ALTTIME(06.41.26) +
*  CRDATE(2023-05-18) +
*  CRTIME(06.41.26) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('Errorlog.Q') +
*  ALTDATE(2023-06-21) +
*  ALTTIME(03.58.09) +
*  CRDATE(2023-06-21) +
*  CRTIME(03.58.09) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('GTM.ACE.COMMAND') +
*  ALTDATE(2024-03-08) +
*  ALTTIME(10.02.22) +
*  CRDATE(2023-11-06) +
*  CRTIME(06.38.16) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GTM.ACE.ERROR') +
*  ALTDATE(2023-11-06) +
*  ALTTIME(06.37.45) +
*  CRDATE(2023-11-06) +
*  CRTIME(06.37.45) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GTM.ACE.LOG') +
*  ALTDATE(2024-03-08) +
*  ALTTIME(10.02.22) +
*  CRDATE(2023-11-06) +
*  CRTIME(06.37.13) +
   DISTL(NO) +
*  IPPROCS(20) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GTM.REPLY') +
*  ALTDATE(2023-11-06) +
*  ALTTIME(06.38.48) +
*  CRDATE(2023-11-06) +
*  CRTIME(06.38.48) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QREMOTE('IIBA1QM01') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.48) +
   XMITQ(' ') +
   REPLACE
DEFINE QLOCAL('IIBA2HD01.DEAD.LETTER.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.48) +
*  CURDEPTH(3655) +
   DISTL(NO) +
   MAXDEPTH(100000) +
*  OPPROCS(1) +
   REPLACE
DEFINE QLOCAL('IN') +
*  ALTDATE(2023-06-26) +
*  ALTTIME(01.15.06) +
*  CRDATE(2023-06-26) +
*  CRTIME(01.15.06) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('IN1') +
*  ALTDATE(2023-06-26) +
*  ALTTIME(01.15.45) +
*  CRDATE(2023-06-26) +
*  CRTIME(01.15.45) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('IN2') +
*  ALTDATE(2023-06-26) +
*  ALTTIME(01.16.10) +
*  CRDATE(2023-06-26) +
*  CRTIME(01.16.10) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('InputQ') +
*  ALTDATE(2023-07-05) +
*  ALTTIME(06.05.17) +
*  CRDATE(2023-07-05) +
*  CRTIME(06.05.17) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('JDA.IA.IP.ALLOCRSLT.NA.ERROR') +
*  ALTDATE(2023-06-13) +
*  ALTTIME(06.15.28) +
*  CRDATE(2023-06-13) +
*  CRTIME(06.15.28) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('JDA.IA.IP.ALLOCRSLT.NA.ERROR.DETAILS') +
*  ALTDATE(2023-06-13) +
*  ALTTIME(06.15.44) +
*  CRDATE(2023-06-13) +
*  CRTIME(06.15.44) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('JDA.IA.IP.ALLOCRSLT.NA.IN') +
*  ALTDATE(2023-06-13) +
*  ALTTIME(04.37.07) +
*  CRDATE(2023-06-13) +
*  CRTIME(04.37.07) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('JDA.IA.IP.ALLOCRSLT.NA.IN.LOG') +
*  ALTDATE(2023-06-13) +
*  ALTTIME(04.37.58) +
*  CRDATE(2023-06-13) +
*  CRTIME(04.37.58) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('JDA.IP.IA.ALLOC.INTRNST.NA.ERROR') +
*  ALTDATE(2023-06-13) +
*  ALTTIME(06.22.38) +
*  CRDATE(2023-06-13) +
*  CRTIME(06.22.38) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('JDA.IP.IA.ALLOC.INTRNST.NA.ERROR.DETAILS') +
*  ALTDATE(2023-06-13) +
*  ALTTIME(06.22.56) +
*  CRDATE(2023-06-13) +
*  CRTIME(06.22.56) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('JDA.IP.IA.ALLOC.INTRNST.NA.INTER') +
*  ALTDATE(2023-06-13) +
*  ALTTIME(04.45.35) +
*  CRDATE(2023-06-13) +
*  CRTIME(04.45.35) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('JDA.IP.IA.ALLOC.INTRNST.NA.TRIGGER') +
*  ALTDATE(2023-06-13) +
*  ALTTIME(04.45.10) +
*  CRDATE(2023-06-13) +
*  CRTIME(04.45.10) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('JDA.IP.IA.ALLOC.NA.ERROR') +
*  ALTDATE(2023-06-13) +
*  ALTTIME(06.17.32) +
*  CRDATE(2023-06-13) +
*  CRTIME(06.17.32) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('JDA.IP.IA.ALLOC.NA.ERROR.DETAILS') +
*  ALTDATE(2023-06-13) +
*  ALTTIME(06.17.48) +
*  CRDATE(2023-06-13) +
*  CRTIME(06.17.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('JDA.IP.IA.ALLOC.NA.IN') +
*  ALTDATE(2023-06-13) +
*  ALTTIME(04.39.25) +
*  CRDATE(2023-06-13) +
*  CRTIME(04.39.25) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('JDA.IP.IA.ALLOC.NA.IN.LOG') +
*  ALTDATE(2023-06-13) +
*  ALTTIME(04.40.15) +
*  CRDATE(2023-06-13) +
*  CRTIME(04.40.15) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('JDA.IP.IA.ALLOC.NA.IN1') +
*  ALTDATE(2023-06-21) +
*  ALTTIME(06.27.40) +
*  CRDATE(2023-06-21) +
*  CRTIME(06.27.40) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('JDA.IP.IA.ALLOC.ONORDR.NA.ERROR') +
*  ALTDATE(2023-06-13) +
*  ALTTIME(06.18.48) +
*  CRDATE(2023-06-13) +
*  CRTIME(06.18.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('JDA.IP.IA.ALLOC.ONORDR.NA.ERROR.DETAILS') +
*  ALTDATE(2023-06-13) +
*  ALTTIME(06.19.03) +
*  CRDATE(2023-06-13) +
*  CRTIME(06.19.03) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('JDA.IP.IA.ALLOC.ONORDR.NA.INTER') +
*  ALTDATE(2023-06-13) +
*  ALTTIME(04.46.41) +
*  CRDATE(2023-06-13) +
*  CRTIME(04.46.41) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('JDA.IP.IA.ALLOC.ONORDR.NA.TRIGGER') +
*  ALTDATE(2023-06-13) +
*  ALTTIME(04.46.14) +
*  CRDATE(2023-06-13) +
*  CRTIME(04.46.14) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('JDA.IP.IA.ALLOC.WRKLST.CYCLIC.NA.ERROR') +
*  ALTDATE(2023-06-13) +
*  ALTTIME(06.19.59) +
*  CRDATE(2023-06-13) +
*  CRTIME(06.19.59) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('JDA.IP.IA.ALLOC.WRKLST.CYCLIC.NA.ERROR.DETAILS') +
*  ALTDATE(2023-06-13) +
*  ALTTIME(06.20.19) +
*  CRDATE(2023-06-13) +
*  CRTIME(06.20.19) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('JDA.IP.IA.ALLOC.WRKLST.CYCLIC.NA.INTER') +
*  ALTDATE(2023-06-13) +
*  ALTTIME(04.49.08) +
*  CRDATE(2023-06-13) +
*  CRTIME(04.49.08) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('JDA.IP.IA.ALLOC.WRKLST.CYCLIC.NA.TRIGGER') +
*  ALTDATE(2023-06-13) +
*  ALTTIME(04.48.09) +
*  CRDATE(2023-06-13) +
*  CRTIME(04.48.09) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('JDA.IP.IA.ALLOC.WRKLST.FULL.NA.ERROR') +
*  ALTDATE(2023-06-13) +
*  ALTTIME(06.21.20) +
*  CRDATE(2023-06-13) +
*  CRTIME(06.21.20) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('JDA.IP.IA.ALLOC.WRKLST.FULL.NA.ERROR.DETAILS') +
*  ALTDATE(2023-06-13) +
*  ALTTIME(06.21.41) +
*  CRDATE(2023-06-13) +
*  CRTIME(06.21.41) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('JDA.IP.IA.ALLOC.WRKLST.FULL.NA.INTER') +
*  ALTDATE(2023-06-13) +
*  ALTTIME(04.50.42) +
*  CRDATE(2023-06-13) +
*  CRTIME(04.50.42) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('JDA.IP.IA.ALLOC.WRKLST.FULL.NA.TRIGGER') +
*  ALTDATE(2023-06-13) +
*  ALTTIME(04.49.35) +
*  CRDATE(2023-06-13) +
*  CRTIME(04.49.35) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MCOM.IIB.SAP.ADVTPROJ.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.48) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MCOM.IIB.SAP.ADVTPROJ.OUT') +
*  ALTDATE(2023-12-21) +
*  ALTTIME(02.07.39) +
*  CRDATE(2023-12-21) +
*  CRTIME(02.07.39) +
*  CURDEPTH(15) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MCOM.IIB.SAP.REPROCESS.OUT') +
*  ALTDATE(2023-12-21) +
*  ALTTIME(02.25.37) +
*  CRDATE(2023-12-21) +
*  CRTIME(02.25.37) +
*  CURDEPTH(15) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MCOM.MON.IIB.NOTIFY.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.48) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MCOM.SAP.MON.DATAFEED.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.48) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MCOM.SAP.MON.DATAFEED.OUT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.GFE.O9.PROJ.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.IIB.BI.BIPRODUCT.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.IIB.RS.ROUTETORS.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.RS.IIB.ROUTEFROMRS.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.AEM.RS.TMPTBD018.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.AEM.RS.TMPTBD018.IN.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.AEM.RS.TMPTBD018.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.AEM.RS.TMPTBD018.OUT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.AEM.RS.TMPTBD018.OUT_DEV') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.AEM.RS.TMPTBD018.OUT_TEMP') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.GLC.RS.TMPTBD022.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.GLC.RS.TMPTBD022.IN.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.GLC.RS.TMPTBD022.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.GLC.RS.TMPTBD022.OUT_DEV') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.GLC.RS.TMPTBD022.OUT_TEMP') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.ANA.MASTERDATA.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.ANA.STYLEVARIANT.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.ANA.TMPTBD019.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.ANA.TMPTBD019.IN.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.ANA.TMPTBD019.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.ANA.TMPTBD019.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.ANA.TMPTBD020.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.ANA.TMPTBD020.IN.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.ANA.TMPTBD020.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.ANA.TMPTBD020.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.BI.SKU.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.BI.SKU.IN.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.BI.SKU.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.BI.STYLEVARIANT.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.BI.STYLEVARIANT.IN.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.BI.STYLEVARIANT.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.BI.WEBSTYLE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.BI.WEBSTYLE.IN.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.BI.WEBSTYLE.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.49) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.49) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.GFE.STYLEVARIANT.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.49) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.49) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.GFE.TMPTBD026.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.49) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.49) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.GFE.TMPTBD026.IN.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.49) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.49) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.GFE.TMPTBD026.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.49) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.49) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.GFE.TMPTBD026.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.49) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.49) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.IP.SKU.EMEA.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.49) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.49) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.IP.SKU.EMEA.IN.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.49) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.49) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.IP.SKU.EMEA.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.49) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.49) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.IP.SKU.EMEA.ITEM.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.49) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.49) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.IP.SKU.EMEA.PRICE.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.49) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.49) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.IP.SKU.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.49) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.49) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.IP.SKU.NA.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.49) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.49) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.IP.SKU.NA.IN.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.49) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.49) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.IP.SKU.NA.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.49) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.49) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.IP.SKU.NA.ITEM.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.49) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.49) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.IP.SKU.NA.PRICE.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.49) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.49) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.IP.SKUIPM.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.49) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.49) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.IP.SKUIPM.NA.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.49) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.49) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.IP.SKUIPM.NA.IN.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.49) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.49) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.IP.SKUIPM.NA.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.49) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.49) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.IP.SKUIPM.NA.ITEM.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.49) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.49) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.IP.SKUIPM.NA.PREPACK.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.49) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.49) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.IP.SKUIPM.NA.PRICE.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.49) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.49) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.IP.STYLEVARIPM.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.49) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.49) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.IP.STYLEVARIPM.NA.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.49) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.49) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.IP.STYLEVARIPM.NA.IN.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.49) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.49) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.IP.TMPTBD003EU.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.49) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.49) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.IP.TMPTBD003IPMNA.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.49) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.49) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.IP.TMPTBD003NA.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.49) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.49) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.O9.SKU.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.49) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.49) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.O9.STYLEVARIANT.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.49) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.49) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.O9.TMPTBD015.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.49) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.49) +
   DISTL(NO) +
   MAXDEPTH(5000000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.O9.TMPTBD015.IN.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.49) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.49) +
   DISTL(NO) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.O9.TMPTBD015.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.49) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.49) +
   DISTL(NO) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.O9.TMPTBD015.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.49) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.49) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.O9.TMPTBD017.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.49) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.49) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.O9.TMPTBD017.OUT_DEV') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.49) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.49) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.O9.TMPTBD017.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.49) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.49) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.OMS.SKU.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.49) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.49) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.OMS.TMPTBD014.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.49) +
   BOQNAME('MDM.TMP.ND.IIB.OMS.TMPTBD014.IN_BOQ') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.49) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.OMS.TMPTBD014.IN.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.49) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.49) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.OMS.TMPTBD014.IN_BOQ') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.49) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.49) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.OMS.TMPTBD014.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.49) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.49) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.OMS.TMPTBD014.OUT_TEMP') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.49) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.49) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.RS.TMPTBD001A.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.50) +
   BOQNAME('MDM.TMP.ND.IIB.RS.TMPTBD001A.IN_BOQ') +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.50) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.RS.TMPTBD001A.IN_BOQ') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.50) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.50) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.RS.TMPTBD001A.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.50) +
   BOQNAME('MDM.TMP.ND.IIB.RS.TMPTBD001A.OUT_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.50) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.RS.TMPTBD001A.OUT_DEV') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.50) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.50) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.RS.TMPTBD001B.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.50) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.50) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.RS.TMPTBD001B.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.50) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.50) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.RS.TMPTBD001B.OUT.RS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.50) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.50) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.RS.TMPTBD001B.OUT_DEV') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.50) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.50) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.RS.TMPTBD016.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.50) +
   BOQNAME('MDM.TMP.ND.IIB.RS.TMPTBD016.IN_BOQ') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.50) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.RS.TMPTBD016.IN.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.50) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.50) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.RS.TMPTBD016.IN.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.50) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.50) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.RS.TMPTBD016.IN.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.50) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.50) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.RS.TMPTBD016.IN.LOG1') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.50) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.50) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.RS.TMPTBD016.IN_BOQ') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.50) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.50) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.RS.TMPTBD016.IN_TMP2') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.50) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.50) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SAP.MASTERDATA.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.50) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.50) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SAP.SKU.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.50) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.50) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SAP.STYLEVARIANT.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.50) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.50) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SAP.TMPTBD005.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.50) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.50) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SAP.TMPTBD006.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.50) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.50) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SAP.TMPTBD007.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.50) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.50) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SAP.TMPTBD008.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.50) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.50) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SAP.TMPTBD009.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.50) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.50) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.SKU.NA.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.50) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.50) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD011MFG.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.50) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.50) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD011MFG.IN.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.50) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.50) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD011MFG.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.50) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.50) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD011MFG.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.50) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.50) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD011MFG.T.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.50) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.50) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD011MFG.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.50) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.50) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD011SKU.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.50) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.50) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD011SKU.IN.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.50) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.50) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD011SKU.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.51) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.51) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD011SKU.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.51) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.51) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD012.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.51) +
   BOQNAME('MDM.TMP.ND.IIB.SFCC.TMPTBD012.IN_BOQ') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.51) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD012.IN.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.51) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.51) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD012.IN_BOQ') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.51) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.51) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD012.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.51) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.51) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD012.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.51) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.51) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD013.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.51) +
   BOQNAME('MDM.TMP.ND.IIB.SFCC.TMPTBD013.IN_BOQ') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.51) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD013.IN.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.51) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.51) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD013.IN_BOQ') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.51) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.51) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD013.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.51) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.51) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD013.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.51) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.51) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD021.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.51) +
   BOQNAME('MDM.TMP.ND.IIB.SFCC.TMPTBD021.IN_BOQ') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.51) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD021.IN.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.51) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.51) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD021.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.51) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.51) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD021.IN_BOQ') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.51) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.51) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD021.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.51) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.51) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD021.T.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.51) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.51) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD021.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.51) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.51) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD035.IN') +
*  ALTDATE(2023-06-26) +
*  ALTTIME(10.28.26) +
*  CRDATE(2023-06-26) +
*  CRTIME(10.28.26) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD035.IN.LOG') +
*  ALTDATE(2023-06-26) +
*  ALTTIME(10.28.57) +
*  CRDATE(2023-06-26) +
*  CRTIME(10.28.57) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD035.INTER') +
*  ALTDATE(2023-06-26) +
*  ALTTIME(10.29.18) +
*  CRDATE(2023-06-26) +
*  CRTIME(10.29.18) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD035.TRIGGER') +
*  ALTDATE(2023-06-26) +
*  ALTTIME(10.29.49) +
*  CRDATE(2023-06-26) +
*  CRTIME(10.29.49) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.WEBSTYLE.NA.ASSET.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.51) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.51) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.WEBSTYLE.NA.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.51) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.51) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IP.IIB.TMPTBD004.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.51) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.51) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IP.IIB.TMPTBD004.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.51) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.51) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IP.IIB.TMPTBD004.OUT_DEV') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.51) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.51) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IP.IIB.TMPTBD004.SFCC.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.51) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.51) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IP.IIB.TMPTBD004.SFCC.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.51) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.51) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IP.IIB.TMPTBD004IPM.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.51) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.51) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IP.IIB.TMPTBD004IPM.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.51) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.51) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.PLM.O9.TMPTBD024COSB.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.51) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.51) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.PLM.O9.TMPTBD024COSB.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.51) +
   BOQNAME('MDM.TMP.ND.PLM.O9.TMPTBD024COSB.TRIGGER_BOQ') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.51) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.PLM.O9.TMPTBD024COSB.TRIGGER_BOQ') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.51) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.51) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.PLM.RS.TMPTBD023.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.51) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.51) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.PLM.RS.TMPTBD023.IN.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.52) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.52) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.PLM.RS.TMPTBD023.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.52) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.52) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.PLM.RS.TMPTBD025.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.52) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.52) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.PMC.RS.TMPTBD030.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.52) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.52) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.PMC.RS.TMPTBD030.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.52) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.52) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.PMC.RS.TMPTBD030.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.52) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.52) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.PMC.RS.TMPTBD030.OUT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.52) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.52) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.PMC.RS.TMPTBD030.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.52) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.52) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.RS.IIB.ROUTING.E2E.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.52) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.52) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.RS.IIB.ROUTING.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.52) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.52) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.SAP.IIB.TMPTBD010.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.52) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.52) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.SAP.IIB.TMPTBD010.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.52) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.52) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.SAP.IIB.TMPTBD010.OUT_DEV') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.52) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.52) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.SAP.IIB.TMPTBD010.OUT_TEMP') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.52) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.52) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.VMS.BI.SUPPL.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.52) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.52) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.VMS.O9.SUPPL.CORP.ASS.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.52) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.52) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.VMS.O9.SUPPL.CORP.ASS.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.52) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.52) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.VMS.O9.SUPPL.FACT.ASS.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.52) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.52) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.VMS.O9.SUPPL.FACT.ASS.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.52) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.52) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.VMS.O9.SUPPL.FACT.ATT.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.52) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.52) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.VMS.O9.SUPPL.FACT.ATT.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.52) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.52) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.VMS.O9.SUPPL.FACT.DLRY.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.52) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.52) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.VMS.O9.SUPPL.FACT.DLRY.OUT2') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.52) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.52) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.VMS.O9.SUPPL.FACT.DLRY.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.52) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.52) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.VMS.O9.SUPPL.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.52) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.52) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.VMS.PLM.RM.SUPPL.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.52) +
   BOQNAME('MDM.TMP.ND.VMS.PLM.RM.SUPPL.IN_BOQ') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.52) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.VMS.PLM.RM.SUPPL.IN_BOQ') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.52) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.52) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.VMS.PLM.RM.SUPPL.OUT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.52) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.52) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.VMS.SAP.ALL.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.52) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.52) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.VMS.BI.SUPPLIER.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.52) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.52) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MONGODB.DAILY.DATA') +
*  ALTDATE(2023-12-11) +
*  ALTTIME(10.02.25) +
*  CRDATE(2023-12-11) +
*  CRTIME(10.02.25) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MONGODB.DAILY.ERROR') +
*  ALTDATE(2023-12-12) +
*  ALTTIME(06.02.10) +
*  CRDATE(2023-12-12) +
*  CRTIME(06.02.10) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MQHA.WMQFTEDATA.MDM.TMPTBD004.IP.BOQ') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.52) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.52) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MQHA.WMQFTEDATA.MDM.TMPTBD004.IP.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.52) +
   BOQNAME('MQHA.WMQFTEDATA.MDM.TMPTBD004.IP.IN_BOQ') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.52) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MQHA.WMQFTEDATA.MDM.TMPTBD004.IP.IN_BOQ') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.52) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.52) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MQHA.WMQFTEDATA.MDM.TMPTBD004.IP.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.52) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.52) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.CSR.ORDERNOTIFY.ERROR') +
*  ALTDATE(2024-03-07) +
*  ALTTIME(10.13.07) +
*  CRDATE(2024-03-07) +
*  CRTIME(10.13.07) +
*  CURDEPTH(7) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.CSR.ORDERNOTIFY.ERROR.DETAILS') +
*  ALTDATE(2024-03-07) +
*  ALTTIME(10.12.43) +
*  CRDATE(2024-03-07) +
*  CRTIME(10.12.43) +
*  CURDEPTH(7) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.MADMB.ORDUPDATE.IN') +
*  ALTDATE(2024-03-07) +
*  ALTTIME(10.12.02) +
*  CRDATE(2024-03-07) +
*  CRTIME(10.12.02) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSEU.IIB.OMS.ORDERCAN.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.52) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.52) +
*  CURDEPTH(88) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('OMSEU.IIB.OMS.RLS.SHIPCNF.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.52) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.52) +
*  CURDEPTH(43) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('OMSEU.JDA.OMS.DEMALLOC.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.52) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.52) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSEU.JDA.OMS.DEMALLOC.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.52) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.52) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSEU.LGS.SAP.SHIPCONFIRM.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.52) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.52) +
*  CURDEPTH(13) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('OMSEU.LGS.SAP.SHIPCONFIRM.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.52) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.52) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('OMSEU.MICROS.OMS.POSINVDAILY.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.52) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.52) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSEU.MICROS.OMS.POSINVDAILY.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.53) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.53) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSEU.MICROS.OMS.POSINVDAILY.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.53) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.53) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('OMSEU.MICROS.OMS.POSINVDAILY.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.53) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.53) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('OMSEU.MICROS.OMS.POSINVDELTA.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.53) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.53) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSEU.MICROS.OMS.POSINVDELTA.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.53) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.53) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSEU.MICROS.OMS.POSINVDELTA.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.53) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.53) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('OMSEU.MICROS.OMS.POSINVDELTA.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.53) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.53) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('OMSEU.MICROS.OMS.POSINVFULL.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.53) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.53) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSEU.MICROS.OMS.POSINVFULL.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.53) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.53) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSEU.MICROS.OMS.POSINVFULL.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.53) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.53) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('OMSEU.MICROS.OMS.POSINVFULL.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.53) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.53) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('OMSEU.OMS.BI.PROTECTSTOCK.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.53) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.53) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('OMSEU.OMS.BI.PROTECTSTOCK.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.53) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.53) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('OMSEU.OMS.IA.DELTAINV.IN') +
*  ALTDATE(2023-10-19) +
*  ALTTIME(05.01.43) +
*  CRDATE(2023-10-19) +
*  CRTIME(05.01.43) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSEU.OMS.IA.DELTAINV.IN.LOG') +
*  ALTDATE(2023-10-19) +
*  ALTTIME(05.02.18) +
*  CRDATE(2023-10-19) +
*  CRTIME(05.02.18) +
*  CURDEPTH(2) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSEU.OMS.IA.DELTAINV.INTER') +
*  ALTDATE(2023-10-19) +
*  ALTTIME(05.02.46) +
*  CRDATE(2023-10-19) +
*  CRTIME(05.02.46) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSEU.OMS.IA.DELTAINV.TRIGGER') +
*  ALTDATE(2023-10-19) +
*  ALTTIME(05.03.16) +
*  CRDATE(2023-10-19) +
*  CRTIME(05.03.16) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSEU.OMS.IA.FULLINV.ERROR') +
*  ALTDATE(2024-01-08) +
*  ALTTIME(08.08.05) +
*  CRDATE(2024-01-08) +
*  CRTIME(05.10.26) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSEU.OMS.IA.FULLINV.ERROR.DETAILS') +
*  ALTDATE(2024-01-08) +
*  ALTTIME(08.08.20) +
*  CRDATE(2024-01-08) +
*  CRTIME(05.10.03) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSEU.OMS.IA.FULLINV.IN') +
*  ALTDATE(2024-01-08) +
*  ALTTIME(08.08.44) +
*  CRDATE(2023-10-18) +
*  CRTIME(08.45.05) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSEU.OMS.IA.FULLINV.IN.LOG') +
*  ALTDATE(2024-01-08) +
*  ALTTIME(08.09.01) +
*  CRDATE(2023-10-18) +
*  CRTIME(08.46.01) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSEU.OMS.IA.FULLINV.OUT.TEST') +
*  ALTDATE(2024-01-08) +
*  ALTTIME(03.48.37) +
*  CRDATE(2024-01-08) +
*  CRTIME(03.48.37) +
*  CURDEPTH(142705) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSEU.OMS.JDA.DAINVDUP.IN') +
*  ALTDATE(2023-10-19) +
*  ALTTIME(04.58.58) +
*  CRDATE(2023-10-19) +
*  CRTIME(04.58.58) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSEU.OMS.JDA.DAINVDUP.IN.LOG') +
*  ALTDATE(2023-10-26) +
*  ALTTIME(02.34.01) +
*  CRDATE(2023-10-26) +
*  CRTIME(02.34.01) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSEU.OMS.JDA.DELTAINV.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.53) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.53) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSEU.OMS.JDA.FLINVDUP.IN') +
*  ALTDATE(2024-01-08) +
*  ALTTIME(08.09.35) +
*  CRDATE(2023-10-18) +
*  CRTIME(08.44.16) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSEU.OMS.JDA.FLINVDUP.IN.LOG') +
*  ALTDATE(2024-01-08) +
*  ALTTIME(08.09.51) +
*  CRDATE(2023-10-18) +
*  CRTIME(08.45.28) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSEU.OMS.JDA.FULLINV.ERROR') +
*  ALTDATE(2024-01-08) +
*  ALTTIME(08.05.54) +
*  CRDATE(2024-01-08) +
*  CRTIME(05.04.27) +
*  CURDEPTH(142709) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSEU.OMS.JDA.FULLINV.ERROR.DETAILS') +
*  ALTDATE(2024-01-08) +
*  ALTTIME(08.06.16) +
*  CRDATE(2024-01-08) +
*  CRTIME(05.03.52) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSEU.OMS.JDA.FULLINV.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.53) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.53) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('OMSEU.OMS.JDA.FULLINV.IN.LOG') +
*  ALTDATE(2024-01-08) +
*  ALTTIME(08.12.33) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.53) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('OMSEU.OMS.SAP.RLEDEM.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.53) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.53) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('OMSEU.OMS.SAP.RLEDEM.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.53) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.53) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('OMSEU.OMS.SAP.RLEDEM.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.53) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.53) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('OMSEU.OMS.SAP.RLEDEM.IN.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.53) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.53) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('OMSEU.OMS.SAP.RLEDEM.OUT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.54) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.54) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('OMSEU.PMC.OMS.CBSPRICESHEET.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.54) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.54) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSEU.PMC.OMS.CBSPRICESHEET.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.54) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.54) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSEU.PMC.OMS.CBSPRICESHEET.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.54) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.54) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('OMSEU.PMC.OMS.CBSPRICESHEET.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.54) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.54) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSEU.PMC.OMS.CBSPRICESHEET.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.54) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.54) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(1000000) +
   REPLACE
DEFINE QLOCAL('OMSEU.SAP.OMS.CBSMARGIN.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.54) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.54) +
*  CURDEPTH(3) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSEU.SAP.OMS.CBSMARGIN.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.54) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.54) +
*  CURDEPTH(3) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSEU.SAP.OMS.CBSMARGIN.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.54) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.54) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSEU.SAP.OMS.CBSMARGIN.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.54) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.54) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSEU.SAP.OMS.CBSVAT.ERROR') +
*  ALTDATE(2024-03-01) +
*  ALTTIME(04.53.38) +
*  CRDATE(2024-03-01) +
*  CRTIME(04.53.38) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSEU.SAP.OMS.CBSVAT.ERROR.DETAILS') +
*  ALTDATE(2024-03-01) +
*  ALTTIME(04.54.09) +
*  CRDATE(2024-03-01) +
*  CRTIME(04.54.09) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSEU.SAP.OMS.CBSVAT.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.54) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.54) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSEU.SAP.OMS.CBSVAT.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.54) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.54) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSEU.TEST') +
*  ALTDATE(2024-01-19) +
*  ALTTIME(02.14.40) +
*  CRDATE(2024-01-19) +
*  CRTIME(02.14.40) +
*  CURDEPTH(2) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.IA.OMS.DEMALLOC.ERROR') +
*  ALTDATE(2023-06-05) +
*  ALTTIME(12.46.16) +
*  CRDATE(2023-06-05) +
*  CRTIME(12.46.16) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.IA.OMS.DEMALLOC.ERROR.DETAILS') +
*  ALTDATE(2023-06-05) +
*  ALTTIME(12.46.01) +
*  CRDATE(2023-06-05) +
*  CRTIME(12.46.01) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.IA.OMS.DEMALLOC.IN') +
*  ALTDATE(2023-04-21) +
*  ALTTIME(06.34.03) +
*  CRDATE(2023-04-21) +
*  CRTIME(06.34.03) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.IA.OMS.DEMALLOC.IN.LOG') +
*  ALTDATE(2023-05-11) +
*  ALTTIME(12.44.25) +
*  CRDATE(2023-05-11) +
*  CRTIME(12.44.25) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.JDA.OMS.DEMALLOC.ERROR') +
*  ALTDATE(2023-05-11) +
*  ALTTIME(12.14.29) +
*  CRDATE(2023-05-11) +
*  CRTIME(12.14.29) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.JDA.OMS.DEMALLOC.ERROR.DETAILS') +
*  ALTDATE(2023-05-11) +
*  ALTTIME(12.15.01) +
*  CRDATE(2023-05-11) +
*  CRTIME(12.15.01) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.JDA.OMS.DEMALLOC.OUT') +
*  ALTDATE(2023-05-11) +
*  ALTTIME(12.13.24) +
*  CRDATE(2023-05-11) +
*  CRTIME(12.13.24) +
*  CURDEPTH(39) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.JDA.OMS.DEMALLOC.OUT.LOG') +
*  ALTDATE(2023-05-11) +
*  ALTTIME(12.13.51) +
*  CRDATE(2023-05-11) +
*  CRTIME(12.13.51) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.JDA.OMS.DEMALLOC.TRIGGER') +
*  ALTDATE(2023-05-11) +
*  ALTTIME(12.12.51) +
*  CRDATE(2023-05-11) +
*  CRTIME(12.12.51) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.MICROS.OMS.POSINVDAILY.IN') +
*  ALTDATE(2023-05-24) +
*  ALTTIME(11.32.47) +
*  CRDATE(2023-05-24) +
*  CRTIME(11.32.47) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.MICROS.OMS.POSINVDAILY.OUT') +
*  ALTDATE(2023-05-24) +
*  ALTTIME(11.40.37) +
*  CRDATE(2023-05-24) +
*  CRTIME(11.40.37) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.MICROS.OMS.POSINVDAILY.PFS.OUT') +
*  ALTDATE(2023-05-24) +
*  ALTTIME(11.41.05) +
*  CRDATE(2023-05-24) +
*  CRTIME(11.41.05) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.MICROS.OMS.POSINVDELTA.IN') +
*  ALTDATE(2023-05-24) +
*  ALTTIME(12.10.30) +
*  CRDATE(2023-05-24) +
*  CRTIME(12.10.30) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.MICROS.OMS.POSINVDELTA.OUT') +
*  ALTDATE(2023-05-24) +
*  ALTTIME(12.11.04) +
*  CRDATE(2023-05-24) +
*  CRTIME(12.11.04) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.MICROS.OMS.POSINVDELTA.PFS.OUT') +
*  ALTDATE(2023-05-24) +
*  ALTTIME(12.11.45) +
*  CRDATE(2023-05-24) +
*  CRTIME(12.11.45) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.MICROS.OMS.POSINVFULL.IN') +
*  ALTDATE(2023-05-25) +
*  ALTTIME(07.57.56) +
*  CRDATE(2023-05-25) +
*  CRTIME(07.57.56) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.MICROS.OMS.POSINVFULL.OUT') +
*  ALTDATE(2023-05-25) +
*  ALTTIME(07.51.43) +
*  CRDATE(2023-05-25) +
*  CRTIME(07.51.43) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.MICROS.OMS.POSINVFULL.PFS.OUT') +
*  ALTDATE(2023-05-25) +
*  ALTTIME(07.52.17) +
*  CRDATE(2023-05-25) +
*  CRTIME(07.52.17) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.NXTDAY') +
*  ALTDATE(2023-05-09) +
*  ALTTIME(11.21.51) +
*  CRDATE(2023-05-09) +
*  CRTIME(11.21.51) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.IA.DELTAINV.ERROR') +
*  ALTDATE(2023-06-08) +
*  ALTTIME(12.54.20) +
*  CRDATE(2023-06-08) +
*  CRTIME(12.54.20) +
*  CURDEPTH(4) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.IA.DELTAINV.ERROR.DETAILS') +
*  ALTDATE(2023-05-24) +
*  ALTTIME(11.28.24) +
*  CRDATE(2023-05-24) +
*  CRTIME(11.28.24) +
*  CURDEPTH(4) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.IA.DELTAINV.IN') +
*  ALTDATE(2023-05-23) +
*  ALTTIME(12.04.07) +
*  CRDATE(2023-05-23) +
*  CRTIME(12.04.07) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.IA.DELTAINV.IN.LOG') +
*  ALTDATE(2023-05-24) +
*  ALTTIME(13.14.29) +
*  CRDATE(2023-05-24) +
*  CRTIME(13.14.29) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.IA.DELTAINV.IN1') +
*  ALTDATE(2023-05-24) +
*  ALTTIME(13.09.35) +
*  CRDATE(2023-05-24) +
*  CRTIME(13.09.35) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.IA.DELTAINV.INTER') +
*  ALTDATE(2023-05-23) +
*  ALTTIME(12.04.44) +
*  CRDATE(2023-05-23) +
*  CRTIME(12.04.44) +
*  CURDEPTH(2) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.IA.DELTAINV.LOG') +
*  ALTDATE(2023-04-24) +
*  ALTTIME(03.18.37) +
*  CRDATE(2023-04-24) +
*  CRTIME(03.18.37) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.IA.DELTAINV.OUT') +
*  ALTDATE(2023-04-24) +
*  ALTTIME(01.56.53) +
*  CRDATE(2023-04-24) +
*  CRTIME(01.56.53) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.IA.DELTAINV.TRIGGER') +
*  ALTDATE(2023-04-24) +
*  ALTTIME(01.55.46) +
*  CRDATE(2023-04-24) +
*  CRTIME(01.55.46) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.IA.FULLINV.ERROR') +
*  ALTDATE(2023-05-24) +
*  ALTTIME(11.27.21) +
*  CRDATE(2023-05-24) +
*  CRTIME(11.27.21) +
*  CURDEPTH(4) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.IA.FULLINV.ERROR.DETAILS') +
*  ALTDATE(2023-06-05) +
*  ALTTIME(07.36.29) +
*  CRDATE(2023-06-05) +
*  CRTIME(07.36.29) +
*  CURDEPTH(4) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.IA.FULLINV.IN') +
*  ALTDATE(2023-06-05) +
*  ALTTIME(07.36.56) +
*  CRDATE(2023-06-05) +
*  CRTIME(07.36.56) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.IA.FULLINV.IN.LOG') +
*  ALTDATE(2023-06-05) +
*  ALTTIME(07.35.11) +
*  CRDATE(2023-06-05) +
*  CRTIME(07.35.11) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.IA.FULLINV.INTER') +
*  ALTDATE(2023-06-05) +
*  ALTTIME(07.35.38) +
*  CRDATE(2023-06-05) +
*  CRTIME(07.35.38) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.IA.FULLINV.TRIGGER') +
*  ALTDATE(2023-06-05) +
*  ALTTIME(07.36.05) +
*  CRDATE(2023-06-05) +
*  CRTIME(07.36.05) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.JDA.FLINVDUP.IN') +
*  ALTDATE(2023-06-05) +
*  ALTTIME(12.14.19) +
*  CRDATE(2023-06-05) +
*  CRTIME(12.14.19) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.JDA.FLINVDUP.IN.LOG') +
*  ALTDATE(2023-06-05) +
*  ALTTIME(12.13.07) +
*  CRDATE(2023-06-05) +
*  CRTIME(12.13.07) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.JDA.FULLINV.ERROR') +
*  ALTDATE(2023-06-05) +
*  ALTTIME(12.21.52) +
*  CRDATE(2023-06-05) +
*  CRTIME(12.21.52) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.JDA.FULLINV.ERROR.DETAILS') +
*  ALTDATE(2023-06-05) +
*  ALTTIME(12.18.56) +
*  CRDATE(2023-06-05) +
*  CRTIME(12.18.56) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.JDA.FULLINV.IN') +
*  ALTDATE(2023-06-05) +
*  ALTTIME(07.34.16) +
*  CRDATE(2023-06-05) +
*  CRTIME(07.34.16) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.MICROS.FULLINV.IN') +
*  ALTDATE(2023-06-05) +
*  ALTTIME(12.13.32) +
*  CRDATE(2023-06-05) +
*  CRTIME(12.13.32) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.MICROS.FULLINV.OUT') +
*  ALTDATE(2023-06-05) +
*  ALTTIME(12.14.53) +
*  CRDATE(2023-06-05) +
*  CRTIME(12.14.53) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.PKMS.OMS.FULLINV.OUT.DUP') +
*  ALTDATE(2023-06-05) +
*  ALTTIME(12.15.20) +
*  CRDATE(2023-06-05) +
*  CRTIME(12.15.20) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.SAP.OMS.DEMALLOC.IN') +
*  ALTDATE(2023-05-11) +
*  ALTTIME(11.04.25) +
*  CRDATE(2023-05-11) +
*  CRTIME(11.04.25) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.SAP.OMS.DEMALLOC.OUT') +
*  ALTDATE(2023-05-11) +
*  ALTTIME(11.05.05) +
*  CRDATE(2023-05-11) +
*  CRTIME(11.05.05) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.AFTERSHIP.CREATEORDER.IN') +
*  ALTDATE(2023-12-28) +
*  ALTTIME(07.23.37) +
*  CRDATE(2023-12-28) +
*  CRTIME(07.23.37) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.AFTERSHIP.RETURNSHIPMT.IN') +
*  ALTDATE(2024-01-02) +
*  ALTTIME(04.45.47) +
*  CRDATE(2024-01-02) +
*  CRTIME(04.45.47) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BANKPRO.ORDERUPLOAD.IN') +
*  ALTDATE(2024-01-02) +
*  ALTTIME(05.45.19) +
*  CRDATE(2024-01-02) +
*  CRTIME(05.45.19) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BI.ORDERUPDATE.IN') +
*  ALTDATE(2024-03-06) +
*  ALTTIME(11.06.36) +
*  CRDATE(2024-03-06) +
*  CRTIME(11.06.36) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BI.ORDERUPDATE.INTER') +
*  ALTDATE(2024-03-06) +
*  ALTTIME(11.06.47) +
*  CRDATE(2024-03-06) +
*  CRTIME(11.06.47) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BI.ORDERUPDATE.OUT') +
*  ALTDATE(2024-03-06) +
*  ALTTIME(11.06.57) +
*  CRDATE(2024-03-06) +
*  CRTIME(11.06.57) +
*  CURDEPTH(2) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BI.ORDERUPDATE.TRIGGER') +
*  ALTDATE(2024-03-06) +
*  ALTTIME(11.07.05) +
*  CRDATE(2024-03-06) +
*  CRTIME(11.07.05) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BI.REPORD.OUT') +
*  ALTDATE(2024-01-03) +
*  ALTTIME(05.53.28) +
*  CRDATE(2024-01-03) +
*  CRTIME(05.53.28) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.FORTER.SHIPUPDATE.IN') +
*  ALTDATE(2024-01-02) +
*  ALTTIME(06.36.19) +
*  CRDATE(2024-01-02) +
*  CRTIME(06.36.19) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.GIVEX.VGCACT.IN') +
*  ALTDATE(2024-01-03) +
*  ALTTIME(05.30.48) +
*  CRDATE(2024-01-03) +
*  CRTIME(05.30.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.GIVEX.VGCACT.INTER') +
*  ALTDATE(2024-01-03) +
*  ALTTIME(05.35.35) +
*  CRDATE(2024-01-03) +
*  CRTIME(05.35.35) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.GIVEX.VGCACT.OUT') +
*  ALTDATE(2024-01-03) +
*  ALTTIME(05.56.50) +
*  CRDATE(2024-01-03) +
*  CRTIME(05.56.50) +
*  CURDEPTH(3) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.GIVEX.VGCACT.OUT.LOG') +
*  ALTDATE(2024-01-03) +
*  ALTTIME(05.56.20) +
*  CRDATE(2024-01-03) +
*  CRTIME(05.56.20) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.RELATE.FINPOST.IN') +
*  ALTDATE(2024-01-02) +
*  ALTTIME(06.54.56) +
*  CRDATE(2024-01-02) +
*  CRTIME(06.54.56) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.ZETA.ORDNOTIFYEMAIL.IN') +
*  ALTDATE(2024-01-03) +
*  ALTTIME(04.53.34) +
*  CRDATE(2024-01-03) +
*  CRTIME(04.53.34) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.ZETA.ORDNOTIFYEMAIL.LOG') +
*  ALTDATE(2024-01-03) +
*  ALTTIME(05.19.55) +
*  CRDATE(2024-01-03) +
*  CRTIME(05.19.55) +
*  CURDEPTH(2) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.SFCC.RELATE.RETRYCUST.IN') +
*  ALTDATE(2024-01-03) +
*  ALTTIME(06.01.15) +
*  CRDATE(2024-01-03) +
*  CRTIME(06.01.15) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.SFCC.RELATE.UPDATECUST.IN') +
*  ALTDATE(2024-01-02) +
*  ALTTIME(07.19.29) +
*  CRDATE(2024-01-02) +
*  CRTIME(07.19.29) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLCA.OMS.BI.REPORD.OUT') +
*  ALTDATE(2023-04-20) +
*  ALTTIME(05.12.24) +
*  CRDATE(2023-04-20) +
*  CRTIME(05.12.24) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLCA.OMS.IP.FINPOST.CA.TRIGGER') +
*  ALTDATE(2023-07-07) +
*  ALTTIME(09.44.05) +
*  CRDATE(2023-07-07) +
*  CRTIME(09.44.05) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLCA.OMS.SFCC.RTAM.DEL.CA.IN') +
*  ALTDATE(2023-04-24) +
*  ALTTIME(04.26.48) +
*  CRDATE(2023-04-24) +
*  CRTIME(04.26.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLCA.OMS.SFCC.RTAM.DEL.CA.OUT') +
*  ALTDATE(2023-04-24) +
*  ALTTIME(04.27.28) +
*  CRDATE(2023-04-24) +
*  CRTIME(04.27.28) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLCA.OMS.SFCC.RTAM.DEL.CA.TEMPIN') +
*  ALTDATE(2023-04-24) +
*  ALTTIME(04.28.02) +
*  CRDATE(2023-04-24) +
*  CRTIME(04.28.02) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLCA.OMS.SFCC.RTAM.DEL.CA.TRIGGER') +
*  ALTDATE(2023-04-24) +
*  ALTTIME(04.26.19) +
*  CRDATE(2023-04-24) +
*  CRTIME(04.26.19) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLCA.OMS.SFCC.RTAM.DELTA.CA.ERROR.DETAILS') +
*  ALTDATE(2023-04-24) +
*  ALTTIME(04.29.39) +
*  CRDATE(2023-04-24) +
*  CRTIME(04.29.39) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLCA.OMS.SFCC.RTAM.EOD.CA.ERROR') +
*  ALTDATE(2023-04-24) +
*  ALTTIME(04.32.58) +
*  CRDATE(2023-04-24) +
*  CRTIME(04.32.58) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLCA.OMS.SFCC.RTAM.EOD.CA.ERROR.DETAILS') +
*  ALTDATE(2023-04-24) +
*  ALTTIME(04.32.33) +
*  CRDATE(2023-04-24) +
*  CRTIME(04.32.33) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLCA.OMS.SFCC.RTAM.EOD.CA.IN') +
*  ALTDATE(2023-04-21) +
*  ALTTIME(13.33.17) +
*  CRDATE(2023-04-21) +
*  CRTIME(13.33.17) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLCA.OMS.SFCC.RTAM.EOD.CA.INTER') +
*  ALTDATE(2023-04-21) +
*  ALTTIME(13.34.58) +
*  CRDATE(2023-04-21) +
*  CRTIME(13.34.58) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLCA.OMS.SFCC.RTAM.EOD.CA.INTER.DATA') +
*  ALTDATE(2023-04-21) +
*  ALTTIME(13.36.09) +
*  CRDATE(2023-04-21) +
*  CRTIME(13.36.09) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLCA.OMS.SFCC.RTAM.EOD.CA.OUT') +
*  ALTDATE(2023-04-21) +
*  ALTTIME(13.37.03) +
*  CRDATE(2023-04-21) +
*  CRTIME(13.37.03) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLCA.OMS.SFCC.RTAM.EOD.CA.TEMPIN') +
*  ALTDATE(2023-04-21) +
*  ALTTIME(13.37.41) +
*  CRDATE(2023-04-21) +
*  CRTIME(13.37.41) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLCA.OMS.WMS.SHIPREQDUP.IN') +
*  ALTDATE(2023-04-20) +
*  ALTTIME(05.11.54) +
*  CRDATE(2023-04-20) +
*  CRTIME(05.11.54) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLCA.OMS.WMS.SHIPREQUEST.ERROR') +
*  ALTDATE(2023-04-26) +
*  ALTTIME(14.33.51) +
*  CRDATE(2023-04-26) +
*  CRTIME(14.33.51) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLCA.OMS.WMS.SHIPREQUEST.ERRORDETAILS') +
*  ALTDATE(2023-04-26) +
*  ALTTIME(14.33.20) +
*  CRDATE(2023-04-26) +
*  CRTIME(14.33.20) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLCA.OMS.WMS.SHIPREQUEST.IN.ACE') +
*  ALTDATE(2023-04-20) +
*  ALTTIME(05.13.08) +
*  CRDATE(2023-04-20) +
*  CRTIME(05.13.08) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLCA.OMS.WMS.SHIPREQUEST.LOG.DUP') +
*  ALTDATE(2023-04-20) +
*  ALTTIME(05.14.09) +
*  CRDATE(2023-04-20) +
*  CRTIME(05.14.09) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLCA.OMS.WMS.SHIPREQUEST.OUT.ACE') +
*  ALTDATE(2023-04-27) +
*  ALTTIME(06.32.28) +
*  CRDATE(2023-04-27) +
*  CRTIME(06.32.28) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLCA.OMS.WMS.SHIPREQUEST.TRIGGER.DUP') +
*  ALTDATE(2023-04-20) +
*  ALTTIME(05.13.34) +
*  CRDATE(2023-04-20) +
*  CRTIME(05.13.34) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLCA.SFCC.BI.ORDERCREATE.ERROR') +
*  ALTDATE(2023-04-18) +
*  ALTTIME(09.08.21) +
*  CRDATE(2023-04-18) +
*  CRTIME(09.08.21) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLCA.SFCC.BI.ORDERCREATE.ERROR.DETAILS') +
*  ALTDATE(2023-04-18) +
*  ALTTIME(09.31.23) +
*  CRDATE(2023-04-18) +
*  CRTIME(09.31.23) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLCA.SFCC.BI.ORDERCREATE.IN') +
*  ALTDATE(2023-04-18) +
*  ALTTIME(09.33.42) +
*  CRDATE(2023-04-18) +
*  CRTIME(09.33.42) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLCA.SFCC.BI.ORDERCREATE.INTER') +
*  ALTDATE(2023-04-18) +
*  ALTTIME(09.34.14) +
*  CRDATE(2023-04-18) +
*  CRTIME(09.34.14) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLCA.SFCC.BI.ORDERCREATE.TRIGGER') +
*  ALTDATE(2023-04-18) +
*  ALTTIME(09.34.00) +
*  CRDATE(2023-04-18) +
*  CRTIME(09.34.00) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLCA.SFCC.OMS.ORDCREDUP.ERROR') +
*  ALTDATE(2023-04-18) +
*  ALTTIME(09.32.35) +
*  CRDATE(2023-04-18) +
*  CRTIME(09.32.35) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLCA.SFCC.OMS.ORDCREDUP.ERROR.DETAILS') +
*  ALTDATE(2023-04-18) +
*  ALTTIME(09.32.23) +
*  CRDATE(2023-04-18) +
*  CRTIME(09.32.23) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLCA.SFCC.OMS.ORDCREDUP.IN') +
*  ALTDATE(2023-04-18) +
*  ALTTIME(09.33.00) +
*  CRDATE(2023-04-18) +
*  CRTIME(09.33.00) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLCA.SFCC.OMS.ORDERCREATE.ERROR') +
*  ALTDATE(2023-04-18) +
*  ALTTIME(09.31.42) +
*  CRDATE(2023-04-18) +
*  CRTIME(09.31.42) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLCA.SFCC.OMS.ORDERCREATE.ERROR.DETAILS') +
*  ALTDATE(2023-04-18) +
*  ALTTIME(09.31.57) +
*  CRDATE(2023-04-18) +
*  CRTIME(09.31.57) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLCA.SFCC.OMS.ORDERCREATE.IN') +
*  ALTDATE(2023-04-20) +
*  ALTTIME(12.17.29) +
*  CRDATE(2023-04-18) +
*  CRTIME(09.33.18) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLCA.SFCC.OMS.ORDERCREATE.OUT') +
*  ALTDATE(2023-04-20) +
*  ALTTIME(12.17.15) +
*  CRDATE(2023-04-20) +
*  CRTIME(12.17.15) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLCA.WMS.OMS.SHIPCONFIRM.ERROR') +
*  ALTDATE(2023-04-26) +
*  ALTTIME(23.59.07) +
*  CRDATE(2023-04-26) +
*  CRTIME(23.59.07) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLCA.WMS.OMS.SHIPCONFIRM.ERROR.DETAILS') +
*  ALTDATE(2023-04-26) +
*  ALTTIME(23.59.32) +
*  CRDATE(2023-04-26) +
*  CRTIME(23.59.32) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLCA.WMS.OMS.SHIPCONFIRM.GET.TEST.DUP') +
*  ALTDATE(2023-04-20) +
*  ALTTIME(13.01.47) +
*  CRDATE(2023-04-20) +
*  CRTIME(13.01.47) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLCA.WMS.OMS.SHIPCONFIRM.OUT.DUP') +
*  ALTDATE(2023-04-20) +
*  ALTTIME(05.46.25) +
*  CRDATE(2023-04-20) +
*  CRTIME(05.46.25) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLCA.WMS.OMS.SHIPCONFIRM.TRIGGER.DUP') +
*  ALTDATE(2023-04-24) +
*  ALTTIME(07.22.09) +
*  CRDATE(2023-04-24) +
*  CRTIME(07.22.09) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.FF.OMS.CANCELORDER.ERROR') +
*  ALTDATE(2023-04-24) +
*  ALTTIME(10.57.03) +
*  CRDATE(2023-04-24) +
*  CRTIME(10.57.03) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.FF.OMS.CANCELORDER.ERROR.DETAILS') +
*  ALTDATE(2023-04-24) +
*  ALTTIME(10.57.45) +
*  CRDATE(2023-04-24) +
*  CRTIME(10.57.45) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.FF.OMS.CANCELORDER.IN') +
*  ALTDATE(2023-04-24) +
*  ALTTIME(10.56.10) +
*  CRDATE(2023-04-24) +
*  CRTIME(10.56.10) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.FF.OMS.CANCELORDER.OUT') +
*  ALTDATE(2023-04-24) +
*  ALTTIME(10.56.40) +
*  CRDATE(2023-04-24) +
*  CRTIME(10.56.40) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.FF.OMS.CONFIRMSHIP.ERROR') +
*  ALTDATE(2023-04-26) +
*  ALTTIME(07.52.46) +
*  CRDATE(2023-04-26) +
*  CRTIME(07.52.46) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.FF.OMS.CONFIRMSHIP.ERROR.DETAILS') +
*  ALTDATE(2023-04-26) +
*  ALTTIME(07.53.21) +
*  CRDATE(2023-04-26) +
*  CRTIME(07.53.21) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.FF.OMS.CONFIRMSHIP.IN') +
*  ALTDATE(2023-04-26) +
*  ALTTIME(07.51.44) +
*  CRDATE(2023-04-26) +
*  CRTIME(07.51.44) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.FF.OMS.CONFIRMSHIP.OUT') +
*  ALTDATE(2023-04-26) +
*  ALTTIME(07.52.14) +
*  CRDATE(2023-04-26) +
*  CRTIME(07.52.14) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.FF.OMS.CREATEORDER.ERROR') +
*  ALTDATE(2023-04-26) +
*  ALTTIME(07.50.16) +
*  CRDATE(2023-04-26) +
*  CRTIME(07.50.16) +
*  CURDEPTH(3) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.FF.OMS.CREATEORDER.ERROR.DETAILS') +
*  ALTDATE(2023-04-26) +
*  ALTTIME(07.50.52) +
*  CRDATE(2023-04-26) +
*  CRTIME(07.50.52) +
*  CURDEPTH(3) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.FF.OMS.CREATEORDER.IN') +
*  ALTDATE(2023-04-26) +
*  ALTTIME(07.47.34) +
*  CRDATE(2023-04-26) +
*  CRTIME(07.47.34) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.FF.OMS.CREATEORDER.LOG') +
*  ALTDATE(2023-04-26) +
*  ALTTIME(07.48.01) +
*  CRDATE(2023-04-26) +
*  CRTIME(07.48.01) +
*  CURDEPTH(15) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.FF.OMS.CREATEORDER.OUT') +
*  ALTDATE(2023-04-26) +
*  ALTTIME(07.49.50) +
*  CRDATE(2023-04-26) +
*  CRTIME(07.49.50) +
*  CURDEPTH(10) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.FF.OMS.ORDERCANCEL.ERROR') +
*  ALTDATE(2023-06-08) +
*  ALTTIME(02.32.46) +
*  CRDATE(2023-06-08) +
*  CRTIME(02.32.46) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.FF.OMS.ORDERCANCEL.ERROR.DETAILS') +
*  ALTDATE(2023-06-08) +
*  ALTTIME(02.32.32) +
*  CRDATE(2023-06-08) +
*  CRTIME(02.32.32) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.FF.OMS.ORDERCANCEL.IN') +
*  ALTDATE(2023-06-08) +
*  ALTTIME(02.30.55) +
*  CRDATE(2023-06-08) +
*  CRTIME(02.30.55) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.FF.OMS.ORDERCANCEL.OUT') +
*  ALTDATE(2023-06-08) +
*  ALTTIME(02.31.09) +
*  CRDATE(2023-06-08) +
*  CRTIME(02.31.09) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.FF.OMS.ORDERCREATE.ERROR') +
*  ALTDATE(2023-04-24) +
*  ALTTIME(08.46.24) +
*  CRDATE(2023-04-24) +
*  CRTIME(08.46.24) +
*  CURDEPTH(4) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.FF.OMS.ORDERCREATE.ERROR.DETAILS') +
*  ALTDATE(2023-04-24) +
*  ALTTIME(08.47.43) +
*  CRDATE(2023-04-24) +
*  CRTIME(08.47.43) +
*  CURDEPTH(4) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.FF.OMS.ORDERCREATE.IN') +
*  ALTDATE(2023-04-24) +
*  ALTTIME(08.44.48) +
*  CRDATE(2023-04-24) +
*  CRTIME(08.44.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.FF.OMS.ORDERCREATE.LOG') +
*  ALTDATE(2023-04-24) +
*  ALTTIME(08.45.41) +
*  CRDATE(2023-04-24) +
*  CRTIME(08.45.41) +
*  CURDEPTH(12) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.FF.OMS.ORDERCREATE.OUT') +
*  ALTDATE(2023-04-24) +
*  ALTTIME(08.45.03) +
*  CRDATE(2023-04-24) +
*  CRTIME(08.45.03) +
*  CURDEPTH(11) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.FF.OMS.ORDERRETURN.ERROR') +
*  ALTDATE(2023-06-13) +
*  ALTTIME(05.34.56) +
*  CRDATE(2023-06-13) +
*  CRTIME(05.34.56) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.FF.OMS.ORDERRETURN.ERROR.DETAILS') +
*  ALTDATE(2023-06-13) +
*  ALTTIME(05.34.32) +
*  CRDATE(2023-06-13) +
*  CRTIME(05.34.32) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.FF.OMS.ORDERRETURN.IN') +
*  ALTDATE(2023-06-13) +
*  ALTTIME(05.35.36) +
*  CRDATE(2023-06-13) +
*  CRTIME(05.35.36) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.FF.OMS.ORDERRETURN.LOG') +
*  ALTDATE(2023-06-13) +
*  ALTTIME(05.36.27) +
*  CRDATE(2023-06-13) +
*  CRTIME(05.36.27) +
*  CURDEPTH(6) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.FF.OMS.ORDERRETURN.OUT') +
*  ALTDATE(2023-06-13) +
*  ALTTIME(05.36.01) +
*  CRDATE(2023-06-13) +
*  CRTIME(05.36.01) +
*  CURDEPTH(6) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.FF.OMS.RETURNORDER.ERROR') +
*  ALTDATE(2023-04-26) +
*  ALTTIME(07.55.06) +
*  CRDATE(2023-04-26) +
*  CRTIME(07.55.06) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.FF.OMS.RETURNORDER.ERROR.DETAILS') +
*  ALTDATE(2023-04-26) +
*  ALTTIME(07.55.32) +
*  CRDATE(2023-04-26) +
*  CRTIME(07.55.32) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.FF.OMS.RETURNORDER.IN') +
*  ALTDATE(2023-04-26) +
*  ALTTIME(07.54.13) +
*  CRDATE(2023-04-26) +
*  CRTIME(07.54.13) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.FF.OMS.RETURNORDER.LOG') +
*  ALTDATE(2023-05-03) +
*  ALTTIME(08.37.07) +
*  CRDATE(2023-05-03) +
*  CRTIME(08.37.07) +
*  CURDEPTH(27) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.FF.OMS.RETURNORDER.OUT') +
*  ALTDATE(2023-04-26) +
*  ALTTIME(07.54.39) +
*  CRDATE(2023-04-26) +
*  CRTIME(07.54.39) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.FF.OMS.SHIPCONFIRM.ERROR') +
*  ALTDATE(2024-02-19) +
*  ALTTIME(01.14.29) +
*  CRDATE(2024-02-19) +
*  CRTIME(01.14.29) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.FF.OMS.SHIPCONFIRM.ERROR.DETAILS') +
*  ALTDATE(2024-02-19) +
*  ALTTIME(01.14.44) +
*  CRDATE(2024-02-19) +
*  CRTIME(01.14.44) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.FF.OMS.SHIPCONFIRM.IN') +
*  ALTDATE(2024-02-19) +
*  ALTTIME(01.13.58) +
*  CRDATE(2024-02-19) +
*  CRTIME(01.13.58) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.FF.OMS.SHIPCONFIRM.OUT') +
*  ALTDATE(2024-02-19) +
*  ALTTIME(01.14.12) +
*  CRDATE(2024-02-19) +
*  CRTIME(01.14.12) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.GE.OMS.GERETURN.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.54) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.54) +
*  CURDEPTH(3) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.GE.OMS.GERETURN.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.54) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.54) +
*  CURDEPTH(3) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.GE.OMS.GERETURN.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.54) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.54) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.GE.OMS.GERETURN.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.54) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.54) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.GE.OMS.GERETURNME.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.54) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.54) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.HDC.OMS.GEDCINVDELTA.ERROR') +
*  ALTDATE(2024-02-19) +
*  ALTTIME(00.03.30) +
*  CRDATE(2024-02-19) +
*  CRTIME(00.03.30) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.HDC.OMS.GEDCINVDELTA.ERROR.DETAILS') +
*  ALTDATE(2024-02-19) +
*  ALTTIME(00.03.51) +
*  CRDATE(2024-02-19) +
*  CRTIME(00.03.51) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.HDC.OMS.GEDCINVDELTA.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.54) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.54) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.HDC.OMS.GEDCINVDELTA.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.54) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.54) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.HDC.OMS.GEDCINVFULL.ERROR') +
*  ALTDATE(2024-02-19) +
*  ALTTIME(00.07.49) +
*  CRDATE(2024-02-19) +
*  CRTIME(00.07.49) +
*  CURDEPTH(6) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.HDC.OMS.GEDCINVFULL.ERROR.DETAILS') +
*  ALTDATE(2024-02-19) +
*  ALTTIME(00.07.19) +
*  CRDATE(2024-02-19) +
*  CRTIME(00.07.19) +
*  CURDEPTH(6) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.HDC.OMS.GEDCINVFULL.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.54) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.54) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.HDC.OMS.GEDCINVFULL.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.54) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.54) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.HDC.OMS.GERETURNRCV.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.54) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.54) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.HDC.OMS.GERETURNRCV.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.54) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.54) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.HDC.OMS.GESHIPCANC.ERROR') +
*  ALTDATE(2024-02-19) +
*  ALTTIME(00.27.14) +
*  CRDATE(2024-02-19) +
*  CRTIME(00.26.39) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.HDC.OMS.GESHIPCANC.ERROR.DETAILS') +
*  ALTDATE(2024-02-19) +
*  ALTTIME(00.26.58) +
*  CRDATE(2024-02-19) +
*  CRTIME(00.26.58) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.HDC.OMS.GESHIPCANC.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.54) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.54) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.HDC.OMS.GESHIPCANC.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.54) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.54) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.HDC.OMS.GESHIPCONF.ERROR') +
*  ALTDATE(2024-02-19) +
*  ALTTIME(00.33.27) +
*  CRDATE(2024-02-19) +
*  CRTIME(00.33.27) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.HDC.OMS.GESHIPCONF.ERROR.DETAILS') +
*  ALTDATE(2024-02-19) +
*  ALTTIME(00.33.48) +
*  CRDATE(2024-02-19) +
*  CRTIME(00.33.48) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.HDC.OMS.GESHIPCONF.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.54) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.54) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.HDC.OMS.GESHIPCONF.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.54) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.54) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.HDC.OMS.HDCINVFULL.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.55) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.55) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.LGS.OMS.SHIPCANCEL.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.55) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.55) +
*  CURDEPTH(2) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.LGS.OMS.SHIPCANCEL.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.55) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.55) +
*  CURDEPTH(2) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.LGS.OMS.SHIPCANCEL.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.55) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.55) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.LGS.OMS.SHIPCANCEL.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.55) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.55) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.LGS.OMS.SHIPCANCEL.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.55) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.55) +
*  CURDEPTH(4) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.LGS.OMS.SHIPCONFIRM.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.55) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.55) +
*  CURDEPTH(5) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.LGS.OMS.SHIPCONFIRM.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.55) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.55) +
*  CURDEPTH(5) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.LGS.OMS.SHIPCONFIRM.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.55) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.55) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.LGS.OMS.SHIPCONFIRM.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.55) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.55) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.LGS.OMS.SHIPCONFIRM.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.55) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.55) +
*  CURDEPTH(13) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.LGS.SAP.SHIPCANCEL.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.55) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.55) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.BI.ORDERUPDATE.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.55) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.55) +
*  CURDEPTH(16) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.BI.ORDERUPDATE.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.55) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.55) +
*  CURDEPTH(16) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.BI.ORDERUPDATE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.55) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.55) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.BI.ORDERUPDATE.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.55) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.55) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.BI.ORDERUPDATE.NXTDAY') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.55) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.55) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.BI.ORDERUPDATE.NXTDAY.ERROR') +
*  ALTDATE(2024-02-15) +
*  ALTTIME(05.03.17) +
*  CRDATE(2024-02-15) +
*  CRTIME(05.03.17) +
*  CURDEPTH(3) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.BI.ORDERUPDATE.NXTDAY.ERROR.DETAILS') +
*  ALTDATE(2024-02-15) +
*  ALTTIME(05.03.38) +
*  CRDATE(2024-02-15) +
*  CRTIME(05.03.38) +
*  CURDEPTH(3) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.BI.ORDERUPDATE.NXTDAY.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.55) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.55) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.BI.ORDERUPDATE.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.55) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.55) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.BI.REPORD.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.55) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.55) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.BI.REPORD.PK.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.55) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.55) +
*  CURDEPTH(5819) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.BI.REPORD.PK.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.55) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.55) +
*  CURDEPTH(5819) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.BI.REPORD.PK.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.55) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.55) +
*  CURDEPTH(52088) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.FF.DEL.RTAM.ERROR') +
*  ALTDATE(2023-04-24) +
*  ALTTIME(10.55.19) +
*  CRDATE(2023-04-24) +
*  CRTIME(10.55.19) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.FF.DEL.RTAM.ERROR.DETAILS') +
*  ALTDATE(2023-04-24) +
*  ALTTIME(10.55.41) +
*  CRDATE(2023-04-24) +
*  CRTIME(10.55.41) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.FF.DEL.RTAM.IN') +
*  ALTDATE(2023-04-24) +
*  ALTTIME(10.53.26) +
*  CRDATE(2023-04-24) +
*  CRTIME(10.53.26) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.FF.DEL.RTAM.IN.LOG') +
*  ALTDATE(2023-04-24) +
*  ALTTIME(10.54.01) +
*  CRDATE(2023-04-24) +
*  CRTIME(10.54.01) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.FF.DEL.RTAM.TEMPIN') +
*  ALTDATE(2023-04-24) +
*  ALTTIME(10.54.56) +
*  CRDATE(2023-04-24) +
*  CRTIME(10.54.56) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.FF.DEL.RTAM.TRIGGER') +
*  ALTDATE(2023-04-24) +
*  ALTTIME(10.54.22) +
*  CRDATE(2023-04-24) +
*  CRTIME(10.54.22) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.FF.EOD.RTAM.ERROR') +
*  ALTDATE(2023-04-24) +
*  ALTTIME(10.52.10) +
*  CRDATE(2023-04-24) +
*  CRTIME(10.52.10) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.FF.EOD.RTAM.ERROR.DETAILS') +
*  ALTDATE(2023-04-24) +
*  ALTTIME(10.52.37) +
*  CRDATE(2023-04-24) +
*  CRTIME(10.52.37) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.FF.EOD.RTAM.IN') +
*  ALTDATE(2023-04-24) +
*  ALTTIME(10.51.20) +
*  CRDATE(2023-04-24) +
*  CRTIME(10.51.20) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.FF.EOD.RTAM.IN.LOG') +
*  ALTDATE(2023-04-24) +
*  ALTTIME(10.51.41) +
*  CRDATE(2023-04-24) +
*  CRTIME(10.51.41) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.FF.EOD.RTAM.OUT') +
*  ALTDATE(2023-05-04) +
*  ALTTIME(03.11.39) +
*  CRDATE(2023-05-04) +
*  CRTIME(03.11.39) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.FF.EOD.RTAM.TEMPIN') +
*  ALTDATE(2023-05-04) +
*  ALTTIME(03.08.23) +
*  CRDATE(2023-05-04) +
*  CRTIME(03.08.23) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.FF.EOD.RTAM.TRIGGER') +
*  ALTDATE(2023-04-24) +
*  ALTTIME(10.50.53) +
*  CRDATE(2023-04-24) +
*  CRTIME(10.50.53) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.FF.RTAM.DEL.ERROR') +
*  ALTDATE(2023-08-08) +
*  ALTTIME(05.15.44) +
*  CRDATE(2023-08-08) +
*  CRTIME(05.15.44) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.FF.RTAM.DEL.ERROR.DETAILS') +
*  ALTDATE(2023-08-08) +
*  ALTTIME(05.16.18) +
*  CRDATE(2023-08-08) +
*  CRTIME(05.16.18) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.FF.RTAM.DEL.IN') +
*  ALTDATE(2023-08-08) +
*  ALTTIME(05.14.52) +
*  CRDATE(2023-08-08) +
*  CRTIME(05.14.31) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.FF.RTAM.DEL.OUT') +
*  ALTDATE(2023-08-08) +
*  ALTTIME(05.15.18) +
*  CRDATE(2023-08-08) +
*  CRTIME(05.15.18) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.FF.RTAM.DEL.TEMPIN') +
*  ALTDATE(2023-08-08) +
*  ALTTIME(05.17.22) +
*  CRDATE(2023-08-08) +
*  CRTIME(05.17.22) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.FF.RTAM.DEL.TRIGGER') +
*  ALTDATE(2023-08-08) +
*  ALTTIME(05.16.53) +
*  CRDATE(2023-08-08) +
*  CRTIME(05.16.53) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.FF.RTAM.EOD.ERROR') +
*  ALTDATE(2023-05-09) +
*  ALTTIME(04.15.15) +
*  CRDATE(2023-05-09) +
*  CRTIME(04.15.15) +
*  CURDEPTH(2) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.FF.RTAM.EOD.ERROR.DETAILS') +
*  ALTDATE(2023-05-09) +
*  ALTTIME(04.15.35) +
*  CRDATE(2023-05-09) +
*  CRTIME(04.15.35) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.FF.RTAM.EOD.IN') +
*  ALTDATE(2023-05-09) +
*  ALTTIME(04.12.28) +
*  CRDATE(2023-05-09) +
*  CRTIME(04.12.28) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.FF.RTAM.EOD.OUT') +
*  ALTDATE(2023-05-09) +
*  ALTTIME(04.14.37) +
*  CRDATE(2023-05-09) +
*  CRTIME(04.14.37) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.FF.RTAM.EOD.TEMPIN') +
*  ALTDATE(2023-05-09) +
*  ALTTIME(04.13.07) +
*  CRDATE(2023-05-09) +
*  CRTIME(04.13.07) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.FF.RTAM.EOD.TRIGGER') +
*  ALTDATE(2023-05-09) +
*  ALTTIME(04.13.37) +
*  CRDATE(2023-05-09) +
*  CRTIME(04.13.37) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.FORTER.ORDUPDATE.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.55) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.55) +
*  CURDEPTH(559) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.FORTER.ORDUPDATE.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.55) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.55) +
*  CURDEPTH(559) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.FORTER.ORDUPDATE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.55) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.55) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.GCD.ORDCRTUPD.BUYER.INTER') +
*  ALTDATE(2023-11-22) +
*  ALTTIME(07.16.38) +
*  CRDATE(2023-11-22) +
*  CRTIME(07.16.38) +
*  CURDEPTH(6) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.GCD.ORDCRTUPD.ERROR') +
*  ALTDATE(2023-11-22) +
*  ALTTIME(07.26.37) +
*  CRDATE(2023-11-22) +
*  CRTIME(07.26.37) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.GCD.ORDCRTUPD.ERROR.DETAILS') +
*  ALTDATE(2023-11-22) +
*  ALTTIME(07.28.07) +
*  CRDATE(2023-11-22) +
*  CRTIME(07.28.07) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.GCD.ORDCRTUPD.IN') +
*  ALTDATE(2023-11-22) +
*  ALTTIME(07.16.10) +
*  CRDATE(2023-11-22) +
*  CRTIME(07.16.10) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.GCD.ORDCRTUPD.NXTDAY') +
*  ALTDATE(2023-11-22) +
*  ALTTIME(13.28.35) +
*  CRDATE(2023-11-22) +
*  CRTIME(13.28.35) +
*  CURDEPTH(10) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.GCD.ORDCRTUPD.NXTDAY.ERROR') +
*  ALTDATE(2023-11-28) +
*  ALTTIME(06.49.51) +
*  CRDATE(2023-11-28) +
*  CRTIME(06.49.51) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.GCD.ORDCRTUPD.NXTDAY.ERROR.DETAILS') +
*  ALTDATE(2023-11-28) +
*  ALTTIME(06.49.31) +
*  CRDATE(2023-11-28) +
*  CRTIME(06.49.31) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.GCD.ORDCRTUPD.NXTDAY.TRIGGER') +
*  ALTDATE(2023-11-22) +
*  ALTTIME(13.39.51) +
*  CRDATE(2023-11-22) +
*  CRTIME(13.39.51) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.GCD.ORDCRTUPD.ORDER.INTER') +
*  ALTDATE(2023-11-22) +
*  ALTTIME(07.17.55) +
*  CRDATE(2023-11-22) +
*  CRTIME(07.17.55) +
*  CURDEPTH(6) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.GCD.ORDCRTUPD.OUT') +
*  ALTDATE(2023-11-22) +
*  ALTTIME(13.39.15) +
*  CRDATE(2023-11-22) +
*  CRTIME(13.39.15) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.GCD.ORDCRTUPD.TRIGGER') +
*  ALTDATE(2023-11-22) +
*  ALTTIME(13.27.57) +
*  CRDATE(2023-11-22) +
*  CRTIME(13.27.57) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.GE.GECANCEL.ERROR') +
*  ALTDATE(2024-02-19) +
*  ALTTIME(00.48.10) +
*  CRDATE(2024-02-19) +
*  CRTIME(00.48.10) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.GE.GECANCEL.ERROR.DETAILS') +
*  ALTDATE(2024-02-19) +
*  ALTTIME(00.47.49) +
*  CRDATE(2024-02-19) +
*  CRTIME(00.47.49) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.GE.GECANCEL.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.55) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.55) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.GE.GEREFUND.ERROR') +
*  ALTDATE(2024-02-19) +
*  ALTTIME(00.45.01) +
*  CRDATE(2024-02-19) +
*  CRTIME(00.45.01) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.GE.GEREFUND.ERROR.DETAILS') +
*  ALTDATE(2024-02-19) +
*  ALTTIME(00.45.23) +
*  CRDATE(2024-02-19) +
*  CRTIME(00.45.23) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.GE.GEREFUND.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.55) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.55) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.GE.GESHIPCONF.ERROR') +
*  ALTDATE(2024-02-19) +
*  ALTTIME(00.35.57) +
*  CRDATE(2024-02-19) +
*  CRTIME(00.35.57) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.GE.GESHIPCONF.ERROR.DETAILS') +
*  ALTDATE(2024-02-19) +
*  ALTTIME(00.35.34) +
*  CRDATE(2024-02-19) +
*  CRTIME(00.35.34) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.GE.GESHIPCONF.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.55) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.55) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.GESAP.FINPOST.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.55) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.55) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.HDC.GERETURNREQ.ERROR') +
*  ALTDATE(2024-02-19) +
*  ALTTIME(00.13.41) +
*  CRDATE(2024-02-19) +
*  CRTIME(00.13.41) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.HDC.GERETURNREQ.ERROR.DETAILS') +
*  ALTDATE(2024-02-19) +
*  ALTTIME(00.14.04) +
*  CRDATE(2024-02-19) +
*  CRTIME(00.14.04) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.HDC.GERETURNREQ.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.55) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.55) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.HDC.GERETURNREQ.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.55) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.55) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.HDC.GESHIPREQ.ERROR') +
*  ALTDATE(2024-03-05) +
*  ALTTIME(04.17.44) +
*  CRDATE(2024-03-05) +
*  CRTIME(04.17.44) +
*  CURDEPTH(10) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.HDC.GESHIPREQ.ERROR.DETAILS') +
*  ALTDATE(2024-03-05) +
*  ALTTIME(04.18.03) +
*  CRDATE(2024-03-05) +
*  CRTIME(04.18.03) +
*  CURDEPTH(11) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.HDC.GESHIPREQ.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.55) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.55) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.HDC.GESHIPREQ.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.55) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.55) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IIB.ORDEREVENT.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.55) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.55) +
*  CURDEPTH(3) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IIB.ORDEREVENT.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.55) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.55) +
*  CURDEPTH(3) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IIB.ORDEREVENT.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.56) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.56) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IIB.ORDEREVENT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.56) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.56) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IIB.ORDEVTDUP.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.56) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.56) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IIB.ORDEVTDUP.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.56) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.56) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IIB.ORDEVTDUP.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.56) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.56) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IP.FEEDRTV.ERROR') +
*  ALTDATE(2023-05-05) +
*  ALTTIME(04.24.24) +
*  CRDATE(2023-05-05) +
*  CRTIME(04.24.24) +
*  CURDEPTH(5) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IP.FEEDRTV.ERROR.DETAILS') +
*  ALTDATE(2023-05-05) +
*  ALTTIME(04.24.51) +
*  CRDATE(2023-05-05) +
*  CRTIME(04.24.51) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IP.FEEDRTV.IN') +
*  ALTDATE(2023-05-05) +
*  ALTTIME(04.19.51) +
*  CRDATE(2023-05-05) +
*  CRTIME(04.19.51) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IP.FEEDRTV.INTER') +
*  ALTDATE(2023-05-05) +
*  ALTTIME(04.21.10) +
*  CRDATE(2023-05-05) +
*  CRTIME(04.21.10) +
*  CURDEPTH(2) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IP.FEEDRTV.LOG') +
*  ALTDATE(2023-05-05) +
*  ALTTIME(04.21.44) +
*  CRDATE(2023-05-05) +
*  CRTIME(04.21.44) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IP.FEEDRTV.OUT') +
*  ALTDATE(2023-05-09) +
*  ALTTIME(06.38.44) +
*  CRDATE(2023-05-09) +
*  CRTIME(06.38.44) +
*  CURDEPTH(2) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IP.FEEDRTV.TRIGGER') +
*  ALTDATE(2023-05-05) +
*  ALTTIME(04.22.27) +
*  CRDATE(2023-05-05) +
*  CRTIME(04.22.27) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IP.FF.FEEDRTV.INTER') +
*  ALTDATE(2023-05-05) +
*  ALTTIME(04.23.55) +
*  CRDATE(2023-05-05) +
*  CRTIME(04.23.55) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IP.FF.FEEDRTV.OUT') +
*  ALTDATE(2023-05-09) +
*  ALTTIME(06.38.27) +
*  CRDATE(2023-05-09) +
*  CRTIME(06.38.27) +
*  CURDEPTH(3) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IP.FF.RTVFEED.INTER') +
*  ALTDATE(2023-06-07) +
*  ALTTIME(11.45.57) +
*  CRDATE(2023-04-20) +
*  CRTIME(14.22.41) +
*  CURDEPTH(8) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IP.FF.RTVFEED.NXTDAY') +
*  ALTDATE(2023-06-07) +
*  ALTTIME(11.45.44) +
*  CRDATE(2023-06-07) +
*  CRTIME(11.45.44) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IP.FF.RTVFEED.OUT') +
*  ALTDATE(2023-06-07) +
*  ALTTIME(11.46.06) +
*  CRDATE(2023-04-20) +
*  CRTIME(14.25.53) +
*  CURDEPTH(13) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IP.FINPOST.EA.ERROR') +
*  ALTDATE(2024-02-13) +
*  ALTTIME(03.59.06) +
*  CRDATE(2024-02-13) +
*  CRTIME(03.59.06) +
*  CURDEPTH(7) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IP.FINPOST.EA.ERROR.DETAILS') +
*  ALTDATE(2024-02-13) +
*  ALTTIME(03.58.49) +
*  CRDATE(2024-02-13) +
*  CRTIME(03.58.49) +
*  CURDEPTH(7) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IP.FINPOST.EA.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.56) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.56) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IP.FINPOST.EA.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.56) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.56) +
*  CURDEPTH(45) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IP.FINPOST.EA.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.56) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.56) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IP.LRD.RTVFEED.INTER') +
*  ALTDATE(2023-06-09) +
*  ALTTIME(06.35.12) +
*  CRDATE(2023-06-09) +
*  CRTIME(06.35.12) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IP.LRD.RTVFEED.NXTDAY') +
*  ALTDATE(2023-06-13) +
*  ALTTIME(03.52.39) +
*  CRDATE(2023-06-13) +
*  CRTIME(03.52.39) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IP.RTVFEED.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.56) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.56) +
*  CURDEPTH(93) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IP.RTVFEED.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.56) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.56) +
*  CURDEPTH(84) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IP.RTVFEED.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.56) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.56) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IP.RTVFEED.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.56) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.56) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IP.RTVFEED.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.56) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.56) +
*  CURDEPTH(3) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IP.RTVFEED.NXTDAY') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.56) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.56) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IP.RTVFEED.NXTDAY.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.56) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.56) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IP.RTVFEED.OUT') +
*  ALTDATE(2023-06-07) +
*  ALTTIME(11.50.49) +
*  CRDATE(2023-06-07) +
*  CRTIME(11.50.49) +
*  CURDEPTH(26) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IP.RTVFEED.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.56) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.56) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.LGS.CANCORDER.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.56) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.56) +
*  CURDEPTH(6) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.LGS.CANCORDER.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.56) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.56) +
*  CURDEPTH(6) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.LGS.CANCORDER.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.56) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.56) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.LGS.CANCORDER.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.56) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.56) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.LGS.CANCORDER.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.56) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.56) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.LGS.FEEDRTV.ERROR') +
*  ALTDATE(2023-05-05) +
*  ALTTIME(04.25.22) +
*  CRDATE(2023-05-05) +
*  CRTIME(04.25.22) +
*  CURDEPTH(4) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.LGS.FEEDRTV.ERROR.DETAILS') +
*  ALTDATE(2023-05-05) +
*  ALTTIME(04.25.57) +
*  CRDATE(2023-05-05) +
*  CRTIME(04.25.57) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.LGS.FEEDRTV.IN') +
*  ALTDATE(2023-05-05) +
*  ALTTIME(04.23.00) +
*  CRDATE(2023-05-05) +
*  CRTIME(04.23.00) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.LGS.FEEDRTV.LOG') +
*  ALTDATE(2023-05-05) +
*  ALTTIME(04.23.27) +
*  CRDATE(2023-05-05) +
*  CRTIME(04.23.27) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.LGS.FEEDRTV.OUT') +
*  ALTDATE(2023-05-09) +
*  ALTTIME(10.42.10) +
*  CRDATE(2023-05-09) +
*  CRTIME(10.42.10) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.LGS.RETORDER.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.56) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.56) +
*  CURDEPTH(6) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.LGS.RETORDER.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.56) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.56) +
*  CURDEPTH(6) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.LGS.RETORDER.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.56) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.56) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.LGS.RETORDER.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.56) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.56) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.LGS.RETORDER.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.56) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.56) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.LGS.RTV.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.56) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.56) +
*  CURDEPTH(96) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.LGS.RTV.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.56) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.56) +
*  CURDEPTH(78) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.LGS.RTV.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.56) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.56) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.LGS.RTV.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.56) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.56) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.LGS.RTV.OUT') +
*  ALTDATE(2023-05-29) +
*  ALTTIME(07.17.00) +
*  CRDATE(2023-05-29) +
*  CRTIME(07.17.00) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.LGS.RTV.TESTIN') +
*  ALTDATE(2023-06-16) +
*  ALTTIME(11.58.09) +
*  CRDATE(2023-06-16) +
*  CRTIME(11.58.09) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.LGS.RTV.TESTOUT') +
*  ALTDATE(2023-06-16) +
*  ALTTIME(12.04.15) +
*  CRDATE(2023-06-16) +
*  CRTIME(12.04.15) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.LGS.SHIPREQDUP.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.56) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.56) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.LGS.SHIPREQDUP.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.56) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.56) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.LGS.SHIPREQDUP.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.56) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.56) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.LGS.SHIPREQUEST.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.56) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.56) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.LGS.SHIPREQUEST.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.56) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.56) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.LGS.SHIPREQUEST.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.57) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.57) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.LGS.SHIPREQUEST.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.57) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.57) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.LGS.SHIPREQUEST.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.57) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.57) +
*  CURDEPTH(11) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.NARVAR.ORDCRTUPD.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.57) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.57) +
*  CURDEPTH(2) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.NARVAR.ORDCRTUPD.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.57) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.57) +
*  CURDEPTH(2) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.NARVAR.ORDCRTUPD.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.57) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.57) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.NARVAR.ORDCRTUPD.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.57) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.57) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.NARVAR.ORDSTATUS.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.57) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.57) +
*  CURDEPTH(3) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.NARVAR.ORDSTATUS.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.57) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.57) +
*  CURDEPTH(3) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.NARVAR.ORDSTATUS.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.57) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.57) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FF.FINANCIALPOST.ERROR') +
*  ALTDATE(2023-05-05) +
*  ALTTIME(04.29.48) +
*  CRDATE(2023-05-05) +
*  CRTIME(04.29.48) +
*  CURDEPTH(6) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FF.FINANCIALPOST.ERROR.DETAILS') +
*  ALTDATE(2023-05-05) +
*  ALTTIME(04.29.20) +
*  CRDATE(2023-05-05) +
*  CRTIME(04.29.20) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FF.FINANCIALPOST.IN') +
*  ALTDATE(2023-05-05) +
*  ALTTIME(04.26.31) +
*  CRDATE(2023-05-05) +
*  CRTIME(04.26.31) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FF.FINANCIALPOST.INTER') +
*  ALTDATE(2023-05-09) +
*  ALTTIME(10.31.30) +
*  CRDATE(2023-05-09) +
*  CRTIME(10.31.30) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FF.FINANCIALPOST.LOG') +
*  ALTDATE(2023-05-05) +
*  ALTTIME(04.27.24) +
*  CRDATE(2023-05-05) +
*  CRTIME(04.27.24) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FF.FINANCIALPOST.NXTDAY') +
*  ALTDATE(2023-05-05) +
*  ALTTIME(04.28.51) +
*  CRDATE(2023-05-05) +
*  CRTIME(04.28.51) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FF.FINANCIALPOST.NXTDAY.TRIGGER') +
*  ALTDATE(2023-05-05) +
*  ALTTIME(04.28.22) +
*  CRDATE(2023-05-05) +
*  CRTIME(04.28.22) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FF.FINANCIALPOST.OMSRL.NXTDAY') +
*  ALTDATE(2023-05-10) +
*  ALTTIME(01.15.37) +
*  CRDATE(2023-05-10) +
*  CRTIME(01.15.37) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FF.FINANCIALPOST.TRIGGER') +
*  ALTDATE(2023-05-05) +
*  ALTTIME(04.27.54) +
*  CRDATE(2023-05-05) +
*  CRTIME(04.27.54) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FF.FINPOST.ERROR') +
*  ALTDATE(2023-04-20) +
*  ALTTIME(09.37.11) +
*  CRDATE(2023-04-20) +
*  CRTIME(09.37.11) +
*  CURDEPTH(139) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FF.FINPOST.ERROR.DETAILS') +
*  ALTDATE(2023-04-20) +
*  ALTTIME(09.36.49) +
*  CRDATE(2023-04-20) +
*  CRTIME(09.36.49) +
*  CURDEPTH(139) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FF.FINPOST.IN') +
*  ALTDATE(2023-04-20) +
*  ALTTIME(09.33.19) +
*  CRDATE(2023-04-20) +
*  CRTIME(09.33.19) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FF.FINPOST.INTER') +
*  ALTDATE(2023-04-20) +
*  ALTTIME(09.33.54) +
*  CRDATE(2023-04-20) +
*  CRTIME(09.33.54) +
*  CURDEPTH(5) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FF.FINPOST.LOG') +
*  ALTDATE(2023-04-20) +
*  ALTTIME(09.34.29) +
*  CRDATE(2023-04-20) +
*  CRTIME(09.34.29) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FF.FINPOST.NXTDAY') +
*  ALTDATE(2023-04-20) +
*  ALTTIME(09.36.14) +
*  CRDATE(2023-04-20) +
*  CRTIME(09.36.14) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FF.FINPOST.NXTDAY.TRIGGER') +
*  ALTDATE(2023-04-20) +
*  ALTTIME(09.35.37) +
*  CRDATE(2023-04-20) +
*  CRTIME(09.35.37) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FF.FINPOST.TRIGGER') +
*  ALTDATE(2023-04-20) +
*  ALTTIME(09.35.04) +
*  CRDATE(2023-04-20) +
*  CRTIME(09.35.04) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FINANCIALPOSTDUP.IN') +
*  ALTDATE(2023-11-20) +
*  ALTTIME(07.06.15) +
*  CRDATE(2023-05-09) +
*  CRTIME(07.09.52) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FINPOST.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.57) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.57) +
*  CURDEPTH(4) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FINPOST.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.57) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.57) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FINPOST.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.57) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.57) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FINPOST.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.57) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.57) +
*  CURDEPTH(25) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FINPOST.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.57) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.57) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FINPOST.LOG.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.57) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.57) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FINPOST.LOG.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.57) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.57) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FINPOST.LOG.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.57) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.57) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FINPOST.NXTDAY') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.57) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.57) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FINPOST.NXTDAY.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.57) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.57) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FINPOST.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.57) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.57) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FINPOSTDUP.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.57) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.57) +
*  CURDEPTH(5) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FINPOSTDUP.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.57) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.57) +
*  CURDEPTH(2) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FINPOSTDUP.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.57) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.57) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.GEFINPOST.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.57) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.57) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.GEFINPOST.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.57) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.57) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.GEFINPOST.INTER1') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.57) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.57) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.GEFINPOST.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.57) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.57) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.GEFINPOST.NXTDAY') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.58) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.58) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.GEFINPOST.NXTDAY.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.58) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.58) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.GEFINPOST.OUT1') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.58) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.58) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.GEFINPOST.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.58) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.58) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.GEFINPOSTME.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.58) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.58) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.GEFINPOSTME.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.58) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.58) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.GEFINPOSTME.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.58) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.58) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.GEFINPOSTME.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.58) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.58) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.GEFINPOSTME.NXTDAY') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.58) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.58) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.GEFINPOSTME.NXTDAY.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.58) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.58) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.GEFINPOSTME.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.58) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.58) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAVVY.ACTGC.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.58) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.58) +
*  CURDEPTH(60) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAVVY.ACTGC.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.58) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.58) +
*  CURDEPTH(60) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAVVY.ACTGC.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.58) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.58) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAVVY.ACTGC.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.58) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.58) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAVVY.ACTGC.VGC.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.58) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.58) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAVVY.ACTGC.VGC.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.58) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.58) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAVVY.AGCDUP.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.58) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.58) +
*  CURDEPTH(12) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAVVY.AGCDUP.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.58) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.58) +
*  CURDEPTH(12) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAVVY.AGCDUP.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.58) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.58) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SFCC.RTAM.DEL.EU.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.58) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.58) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SFCC.RTAM.DEL.EU.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.58) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.58) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SFCC.RTAM.DEL.EU.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.58) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.58) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SFCC.RTAM.DEL.EU.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.58) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.58) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SFCC.RTAM.DEL.EU.INTER.DATA') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.58) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.58) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SFCC.RTAM.DEL.EU.TEMPIN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.58) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.58) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SFCC.RTAM.DEL.EU.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.58) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.58) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SFCC.RTAM.DEL.NONEU.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.58) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.58) +
*  CURDEPTH(7) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SFCC.RTAM.DEL.NONEU.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.58) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.58) +
*  CURDEPTH(10) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SFCC.RTAM.DEL.NONEU.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.58) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.58) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SFCC.RTAM.DEL.NONEU.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.58) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.58) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SFCC.RTAM.DEL.NONEU.INTER.DATA') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.58) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.58) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SFCC.RTAM.DEL.NONEU.TEMPIN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.58) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.58) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SFCC.RTAM.DEL.NONEU.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.58) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.58) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SFCC.RTAM.DEL.UK.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.58) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.58) +
*  CURDEPTH(3) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SFCC.RTAM.DEL.UK.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.58) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.58) +
*  CURDEPTH(3) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SFCC.RTAM.DEL.UK.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.58) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.58) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SFCC.RTAM.DEL.UK.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.58) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.58) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SFCC.RTAM.DEL.UK.INTER.DATA') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.58) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.58) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SFCC.RTAM.DEL.UK.TEMPIN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.58) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.58) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SFCC.RTAM.DEL.UK.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.59) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.59) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SFCC.RTAM.EOD.EU.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.59) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.59) +
*  CURDEPTH(14) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SFCC.RTAM.EOD.EU.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.59) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.59) +
*  CURDEPTH(14) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SFCC.RTAM.EOD.EU.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.59) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.59) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SFCC.RTAM.EOD.EU.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.59) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.59) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SFCC.RTAM.EOD.EU.INTER.DATA') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.59) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.59) +
*  CURDEPTH(2) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SFCC.RTAM.EOD.EU.TEMPIN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.59) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.59) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SFCC.RTAM.EOD.EU.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.59) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.59) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SFCC.RTAM.EOD.ME.ERROR') +
*  ALTDATE(2024-02-16) +
*  ALTTIME(00.51.11) +
*  CRDATE(2024-02-16) +
*  CRTIME(00.51.11) +
*  CURDEPTH(2) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SFCC.RTAM.EOD.ME.ERROR.DETAILS') +
*  ALTDATE(2024-02-16) +
*  ALTTIME(00.51.34) +
*  CRDATE(2024-02-16) +
*  CRTIME(00.51.34) +
*  CURDEPTH(2) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SFCC.RTAM.EOD.ME.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.59) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.59) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SFCC.RTAM.EOD.ME.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.59) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.59) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SFCC.RTAM.EOD.ME.INTER.DATA') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.59) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.59) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SFCC.RTAM.EOD.ME.TEMPIN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.59) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.59) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SFCC.RTAM.EOD.ME.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.59) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.59) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SFCC.RTAM.EOD.NONEU.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.59) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.59) +
*  CURDEPTH(2) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SFCC.RTAM.EOD.NONEU.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.59) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.59) +
*  CURDEPTH(2) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SFCC.RTAM.EOD.NONEU.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.59) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.59) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SFCC.RTAM.EOD.NONEU.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.59) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.59) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SFCC.RTAM.EOD.NONEU.INTER.DATA') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.59) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.59) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SFCC.RTAM.EOD.NONEU.TEMPIN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.59) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.59) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SFCC.RTAM.EOD.NONEU.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.59) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.59) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SFCC.RTAM.EOD.UK.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.59) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.59) +
*  CURDEPTH(2) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SFCC.RTAM.EOD.UK.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.59) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.59) +
*  CURDEPTH(2) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SFCC.RTAM.EOD.UK.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.59) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.59) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SFCC.RTAM.EOD.UK.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.59) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.59) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SFCC.RTAM.EOD.UK.INTER.DATA') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.59) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.59) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SFCC.RTAM.EOD.UK.TEMPIN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.59) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.59) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SFCC.RTAM.EOD.UK.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.59) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.59) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SSHEET.SHIPUPD.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.59) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.59) +
*  CURDEPTH(7) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SSHEET.SHIPUPD.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.59) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.59) +
*  CURDEPTH(7) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SSHEET.SHIPUPD.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.59) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.59) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
*  OPPROCS(1) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SSHEET.SHIPUPD.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.59) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.59) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.TEST.FINPOST.INTER') +
*  ALTDATE(2023-05-09) +
*  ALTTIME(10.22.38) +
*  CRDATE(2023-05-09) +
*  CRTIME(10.22.38) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.ZETA.DUPORDNTFY.IN') +
*  ALTDATE(2023-05-19) +
*  ALTTIME(10.18.41) +
*  CRDATE(2023-05-19) +
*  CRTIME(10.18.41) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.ZETA.ORDERNOTIFY.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.59) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.59) +
*  CURDEPTH(15) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.ZETA.ORDERNOTIFY.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.59) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.59) +
*  CURDEPTH(15) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.ZETA.ORDERNOTIFY.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.59) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.59) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.ZETA.ORDERNOTIFY.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.59) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.59) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.ZETA.ORDERNOTIFY.OUT') +
*  ALTDATE(2023-12-05) +
*  ALTTIME(05.12.06) +
*  CRDATE(2023-12-05) +
*  CRTIME(05.12.06) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.ZETA.ORDNFYVAT.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.59) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.59) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.ZETA.ORDNFYVAT.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.59) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.59) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.ZETA.ORDNFYVAT.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.59) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.59) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.ZETA.ORDNFYVAT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.50.59) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.50.59) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.ZETA.ORDNTFYDUP.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.00) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.00) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.ZETA.ORDNTFYDUP.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.00) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.00) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.ZETA.ORDNTFYDUP.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.00) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.00) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.ZETA.ORDNTFYMS.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.00) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.00) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SAP.OMS.CURCONV.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.00) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.00) +
*  CURDEPTH(5) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SAP.OMS.CURCONV.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.00) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.00) +
*  CURDEPTH(5) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SAP.OMS.CURCONV.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.00) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.00) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SAP.OMS.CURCONV.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.00) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.00) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SAP.OMS.CURCONV.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.00) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.00) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.AWS.ORDERCREATE.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.00) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.00) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.AWS.ORDERCREATE.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.00) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.00) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.AWS.ORDERCREATE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.00) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.00) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.AWS.ORDERCREATE.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.00) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.00) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.BI.ORDERCREATE.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.00) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.00) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.BI.ORDERCREATE.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.00) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.00) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.BI.ORDERCREATE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.00) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.00) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.BI.ORDERCREATE.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.00) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.00) +
*  CURDEPTH(19) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.BI.ORDERCREATE.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.00) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.00) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.OMS.EDDORDERCREATE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.00) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.00) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.OMS.EDDORDERCREATE.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.00) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.00) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.OMS.ORDCREDUP.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.00) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.00) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.OMS.ORDCREDUP.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.00) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.00) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.OMS.ORDCREDUP.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.00) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.00) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.OMS.ORDCREDUP.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.00) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.00) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.OMS.ORDERCREATE.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.00) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.00) +
*  CURDEPTH(33) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.OMS.ORDERCREATE.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.01) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.01) +
*  CURDEPTH(33) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.OMS.ORDERCREATE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.01) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.01) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.OMS.ORDERCREATE.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.01) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.01) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.OMS.ORDERCREATE.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.01) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.01) +
*  CURDEPTH(36) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.OMS.ORDERCREATEOUT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.01) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.01) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.OPP.ORDERCREATE.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.01) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.01) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.OPP.ORDERCREATE.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.01) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.01) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.OPP.ORDERCREATE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.01) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.01) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.OPP.ORDERCREATE.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.01) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.01) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.OPP.ORDERCREATE.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.01) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.01) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.OPP.ORDERCREATEOUT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.01) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.01) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.OQ4.ORDERCREATE.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.01) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.01) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.OQ4.ORDERCREATE.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.01) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.01) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.OQ4.ORDERCREATE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.01) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.01) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.OQ4.ORDERCREATE.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.01) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.01) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.OQ4.ORDERCREATE.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.01) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.01) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.OQ4.ORDERCREATEOUT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.01) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.01) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.OQA.ORDERCREATE.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.01) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.01) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.OQA.ORDERCREATE.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.01) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.01) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.OQA.ORDERCREATE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.01) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.01) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.OQA.ORDERCREATE.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.01) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.01) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.OQA.ORDERCREATE.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.01) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.01) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.OQA.ORDERCREATEOUT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.01) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.01) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.UPS.ZETA.STOREHRS.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.01) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.01) +
*  CURDEPTH(4) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(10000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.UPS.ZETA.STOREHRS.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.01) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.01) +
*  CURDEPTH(4) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(10000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.UPS.ZETA.STOREHRS.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.01) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.01) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.UPS.ZETA.STOREHRS.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.01) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.01) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(10000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.ADN.RCNET.PAYMENT.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.01) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.01) +
*  CURDEPTH(36) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.ADN.RCNET.PAYMENT.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.01) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.01) +
*  CURDEPTH(36) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.ADN.RCNET.PAYMENT.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.01) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.01) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.ADN.RCNET.PAYMENT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.01) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.01) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.BLUJ.CONVEY.REGSHIP.ERROR') +
*  ALTDATE(2024-02-14) +
*  ALTTIME(03.18.44) +
*  CRDATE(2024-02-14) +
*  CRTIME(03.18.44) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.BLUJ.CONVEY.REGSHIP.ERROR.DETAILS') +
*  ALTDATE(2024-02-14) +
*  ALTTIME(03.18.29) +
*  CRDATE(2024-02-14) +
*  CRTIME(03.18.29) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.BLUJ.CONVEY.REGSHIP.IN') +
*  ALTDATE(2024-01-04) +
*  ALTTIME(11.18.12) +
*  CRDATE(2024-01-04) +
*  CRTIME(11.18.12) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.CHUB.OMS.ORDFFLMCONF.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.01) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.01) +
*  CURDEPTH(12) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.CHUB.OMS.ORDFFLMCONF.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.01) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.01) +
*  CURDEPTH(11) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.CHUB.OMS.ORDFFLMCONF.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.01) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.01) +
   DISTL(NO) +
*  IPPROCS(3) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.CHUB.OMS.ORDFFLMCONF.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.01) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.01) +
*  CURDEPTH(38) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.CHUB.OMS.ORDFFLMCONF.TEST.IN') +
*  ALTDATE(2024-01-09) +
*  ALTTIME(02.37.44) +
*  CRDATE(2024-01-09) +
*  CRTIME(02.37.44) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.CHUB.OMS.ORDFFLMCONF.TEST.OUT') +
*  ALTDATE(2024-01-09) +
*  ALTTIME(02.38.40) +
*  CRDATE(2024-01-09) +
*  CRTIME(02.38.40) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.CHUB.OMS.POFNCTNLACK.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.01) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.01) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.CHUB.OMS.POFNCTNLACK.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.02) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.02) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.CHUB.OMS.POFNCTNLACK.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.02) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.02) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.CHUB.OMS.POFNCTNLACK.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.02) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.02) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.CHUB.OMS.RETURNNTFCN.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.02) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.02) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.CHUB.OMS.RETURNNTFCN.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.02) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.02) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.CHUB.OMS.RETURNNTFCN.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.02) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.02) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.CHUB.OMS.RETURNNTFCN.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.02) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.02) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.CHUB.OMS.VNDRINVADJ.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.02) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.02) +
*  CURDEPTH(4) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.CHUB.OMS.VNDRINVADJ.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.02) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.02) +
*  CURDEPTH(4) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.CHUB.OMS.VNDRINVADJ.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.02) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.02) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.CHUB.OMS.VNDRINVADJ.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.02) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.02) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.CHUB.OMS.VNDRINVFULL.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.02) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.02) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.CHUB.OMS.VNDRINVFULL.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.02) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.02) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.CHUB.OMS.VNDRINVFULL.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.02) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.02) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.CHUB.OMS.VNDRINVFULL.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.02) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.02) +
*  CURDEPTH(2) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.CHUB.OMS.VNDRUNITCST.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.02) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.02) +
*  CURDEPTH(5) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   MAXMSGL(100000000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.CHUB.OMS.VNDRUNITCST.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.02) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.02) +
*  CURDEPTH(5) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   MAXMSGL(100000000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.CHUB.OMS.VNDRUNITCST.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.02) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.02) +
*  CURDEPTH(31) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.CHUB.SFCC.VNDRINVFULL.ERROR') +
*  ALTDATE(2024-02-14) +
*  ALTTIME(06.40.06) +
*  CRDATE(2024-02-14) +
*  CRTIME(06.40.06) +
*  CURDEPTH(4) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.CHUB.SFCC.VNDRINVFULL.ERROR.DETAILS') +
*  ALTDATE(2024-02-14) +
*  ALTTIME(06.39.47) +
*  CRDATE(2024-02-14) +
*  CRTIME(06.39.47) +
*  CURDEPTH(4) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.CHUB.SFCC.VNDRINVFULL.IN') +
*  ALTDATE(2023-04-27) +
*  ALTTIME(09.56.23) +
*  CRDATE(2023-04-27) +
*  CRTIME(09.56.23) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.CHUB.SFCC.VNDRINVFULL.OUT') +
*  ALTDATE(2024-02-29) +
*  ALTTIME(13.41.29) +
*  CRDATE(2024-02-29) +
*  CRTIME(13.41.29) +
*  CURDEPTH(30) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.DD.MM.SDDLVNOTIF.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.02) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.02) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.DD.OMS.SDDLVNOTIF.ERROR') +
*  ALTDATE(2024-02-14) +
*  ALTTIME(04.58.29) +
*  CRDATE(2024-02-14) +
*  CRTIME(04.58.29) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.DD.OMS.SDDLVNOTIF.ERROR.DETAILS') +
*  ALTDATE(2024-02-14) +
*  ALTTIME(04.58.12) +
*  CRDATE(2024-02-14) +
*  CRTIME(04.58.12) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.DD.OMS.SDDLVNOTIF.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.02) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.02) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.DD.OMS.SDDLVNOTIF.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.02) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.02) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.DD.OMS.SDDLVNOTIFDUP.ERROR') +
*  ALTDATE(2024-02-14) +
*  ALTTIME(04.54.53) +
*  CRDATE(2024-02-14) +
*  CRTIME(04.54.53) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.DD.OMS.SDDLVNOTIFDUP.ERROR.DETAILS') +
*  ALTDATE(2024-02-14) +
*  ALTTIME(04.54.40) +
*  CRDATE(2024-02-14) +
*  CRTIME(04.54.40) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.DD.OMS.SDDLVNOTIFDUP.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.02) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.02) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.ERROR') +
*  ALTDATE(2023-08-08) +
*  ALTTIME(09.00.43) +
*  CRDATE(2023-08-08) +
*  CRTIME(09.00.43) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.FB.OMS.ORDACK.RESP.CM.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.02) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.02) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.FB.OMS.ORDACK.RESP.RL.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.02) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.02) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.FB.OMS.ORDCREATE.CM.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.02) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.02) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.FB.OMS.ORDCREATE.CM.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.03) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.03) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.FB.OMS.ORDCREATE.CM.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.03) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.03) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.FB.OMS.ORDCREATE.CM.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.03) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.03) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.FB.OMS.ORDCREATE.OMSREQ.CM.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.03) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.03) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.FB.OMS.ORDCREATE.OMSREQ.RL.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.03) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.03) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.FB.OMS.ORDCREATE.RL.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.03) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.03) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.FB.OMS.ORDCREATE.RL.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.03) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.03) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.FB.OMS.ORDCREATE.RL.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.03) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.03) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.FB.OMS.ORDCREATE.RL.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.03) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.03) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.FB.OMS.TAXUPDATE.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.03) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.03) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.FB.OMS.TAXUPDATE.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.03) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.03) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.FB.OMS.TAXUPDATE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.03) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.03) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.FB.OMS.TAXUPDATE.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.03) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.03) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.FB.OMS.TAXUPDATE.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.03) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.03) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.FB.OMS.TAXUPDATE.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.03) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.03) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.GLADLY.OMS.ORDINF.ERROR') +
*  ALTDATE(2023-11-09) +
*  ALTTIME(09.51.57) +
*  CRDATE(2023-11-09) +
*  CRTIME(09.51.57) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.GLADLY.OMS.ORDINF.ERROR.DETAILS') +
*  ALTDATE(2023-11-09) +
*  ALTTIME(09.51.37) +
*  CRDATE(2023-11-09) +
*  CRTIME(09.51.37) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.GLADLY.OMS.ORDINF.IN') +
*  ALTDATE(2023-11-09) +
*  ALTTIME(10.16.02) +
*  CRDATE(2023-11-09) +
*  CRTIME(10.16.02) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.GLADLY.OMS.ORDINF.IN.LOG') +
*  ALTDATE(2023-11-09) +
*  ALTTIME(08.28.32) +
*  CRDATE(2023-11-09) +
*  CRTIME(08.28.32) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.IIB.OMS.OUT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.03) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.03) +
*  CURDEPTH(11) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.ORDERUPDATE.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.03) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.03) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.ORDERUPDATE.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.03) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.03) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.ORDERUPDATE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.03) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.03) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.ORDERUPDATE.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.04) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.04) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.ORDERUPDATE.NXTDAY') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.04) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.04) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.ORDERUPDATE.NXTDAY.ERROR') +
*  ALTDATE(2024-02-15) +
*  ALTTIME(08.41.57) +
*  CRDATE(2024-02-15) +
*  CRTIME(08.41.57) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.ORDERUPDATE.NXTDAY.ERROR.DETAILS') +
*  ALTDATE(2024-02-15) +
*  ALTTIME(08.42.16) +
*  CRDATE(2024-02-15) +
*  CRTIME(08.42.16) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.ORDERUPDATE.NXTDAY.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.04) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.04) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.ORDERUPDATE.OUT.TMP') +
*  ALTDATE(2023-06-16) +
*  ALTTIME(15.00.22) +
*  CRDATE(2023-06-16) +
*  CRTIME(15.00.22) +
*  CURDEPTH(3) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.ORDERUPDATE.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.04) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.04) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPBACKORD.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.04) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.04) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPBACKORD.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.04) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.04) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPBACKORD.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.04) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.04) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPBACKORD.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.04) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.04) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPCAPCTYSTS.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.04) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.04) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPCAPCTYSTS.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.04) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.04) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPCAPCTYSTS.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.04) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.04) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPCAPCTYSTS.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.04) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.04) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPDONUNMDRLS.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.04) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.04) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPDONUNMDRLS.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.04) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.04) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPDONUNMDRLS.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.04) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.04) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPDONUNMDRLS.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.04) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.04) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPHOLDORD.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.04) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.04) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPHOLDORD.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.04) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.04) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPHOLDORD.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.04) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.04) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPHOLDORD.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.04) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.04) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPINVNDCTL.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.04) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.04) +
*  CURDEPTH(9) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPINVNDCTL.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.04) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.04) +
*  CURDEPTH(9) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPINVNDCTL.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.04) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.04) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPINVNDCTL.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.04) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.04) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPMNGDSTRULE.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.04) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.04) +
*  CURDEPTH(2) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPMNGDSTRULE.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.04) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.04) +
*  CURDEPTH(2) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPMNGDSTRULE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.04) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.04) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPMNGDSTRULE.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.04) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.04) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPORD.AP.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.04) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.04) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPORD.AP.PK.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.05) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.05) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPORD.AP.PK.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.05) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.05) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPORD.AP.PK.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.05) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.05) +
*  CURDEPTH(3) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPORD.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.05) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.05) +
*  CURDEPTH(169) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPORD.OUT1') +
*  ALTDATE(2023-05-31) +
*  ALTTIME(06.58.57) +
*  CRDATE(2023-05-31) +
*  CRTIME(06.58.57) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPORD.PK.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.05) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.05) +
*  CURDEPTH(11) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPORD.PK.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.05) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.05) +
*  CURDEPTH(11) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPORD.PK.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.05) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.05) +
*  CURDEPTH(6235) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPORDAPMT.ERROR') +
*  ALTDATE(2024-02-13) +
*  ALTTIME(11.46.13) +
*  CRDATE(2024-02-13) +
*  CRTIME(11.46.13) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPORDAPMT.ERROR.DETAILS') +
*  ALTDATE(2024-02-13) +
*  ALTTIME(11.45.57) +
*  CRDATE(2024-02-13) +
*  CRTIME(11.45.57) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPORDAPMT.IN') +
*  ALTDATE(2024-02-13) +
*  ALTTIME(11.45.22) +
*  CRDATE(2024-02-13) +
*  CRTIME(11.45.22) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPORDSHPREC.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.05) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.05) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPORDSHPREC.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.05) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.05) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPORDSHPREC.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.05) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.05) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPORDSHPREC.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.05) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.05) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPPMTCOLL.ERROR') +
*  ALTDATE(2024-02-13) +
*  ALTTIME(12.28.06) +
*  CRDATE(2024-02-13) +
*  CRTIME(12.28.06) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPPMTCOLL.ERROR.DETAILS') +
*  ALTDATE(2024-02-13) +
*  ALTTIME(12.27.53) +
*  CRDATE(2024-02-13) +
*  CRTIME(12.27.53) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPPMTCOLL.IN') +
*  ALTDATE(2024-02-13) +
*  ALTTIME(12.27.09) +
*  CRDATE(2024-02-13) +
*  CRTIME(12.27.09) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPPUBINVCE.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.05) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.05) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPPUBINVCE.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.05) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.05) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPPUBINVCE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.05) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.05) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPPUBINVCE.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.05) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.05) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPRCPTSTATUS.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.05) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.05) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPRCPTSTATUS.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.05) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.05) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPRCPTSTATUS.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.05) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.05) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPRCPTSTATUS.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.05) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.05) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPRDYSHIPSTS.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.05) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.05) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPRDYSHIPSTS.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.05) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.05) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPRDYSHIPSTS.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.05) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.05) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPRDYSHIPSTS.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.05) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.05) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPRMVSHIPMT.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.05) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.05) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPRMVSHIPMT.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.05) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.05) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPRMVSHIPMT.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.05) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.05) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPRMVSHIPMT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.05) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.05) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPSCHDLORD.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.05) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.05) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPSCHDLORD.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.05) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.05) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPSCHDLORD.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.05) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.05) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPSCHDLORD.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.05) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.05) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPSHIPMTSTS.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.05) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.05) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPSHIPMTSTS.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.05) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.05) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPSHIPMTSTS.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.05) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.05) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPSHIPMTSTS.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.05) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.05) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPSTORERLS.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.06) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.06) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPSTORERLS.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.06) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.06) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.SDSTRINV.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.06) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.06) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.SDSTRINV.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.06) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.06) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.SDSTRINV.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.06) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.06) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.SDSTRINV.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.06) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.06) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BLUJ.PO.ERROR') +
*  ALTDATE(2024-02-14) +
*  ALTTIME(03.12.44) +
*  CRDATE(2024-02-14) +
*  CRTIME(03.12.44) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BLUJ.PO.ERROR.DETAILS') +
*  ALTDATE(2024-02-14) +
*  ALTTIME(03.12.30) +
*  CRDATE(2024-02-14) +
*  CRTIME(03.12.30) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BLUJ.PO.IN') +
*  ALTDATE(2024-02-14) +
*  ALTTIME(03.10.38) +
*  CRDATE(2024-02-14) +
*  CRTIME(03.10.38) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BLUJ.PO.OUT') +
*  ALTDATE(2024-02-14) +
*  ALTTIME(03.13.42) +
*  CRDATE(2024-02-14) +
*  CRTIME(03.13.42) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.CHUB.PO.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.06) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.06) +
*  CURDEPTH(2) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.CHUB.PO.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.06) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.06) +
*  CURDEPTH(2) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.CHUB.PO.IN') +
*  ALTDATE(2023-11-02) +
*  ALTTIME(15.08.06) +
*  CRDATE(2023-11-02) +
*  CRTIME(15.08.06) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.CHUB.PO.LOG') +
*  ALTDATE(2023-11-02) +
*  ALTTIME(15.08.21) +
*  CRDATE(2023-11-02) +
*  CRTIME(15.08.21) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.CHUB.PO.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.06) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.06) +
*  CURDEPTH(2) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.CHUB.PODUP.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.06) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.06) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.CHUB.PODUP.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.06) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.06) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.CHUB.PODUP.IN') +
*  ALTDATE(2024-02-13) +
*  ALTTIME(06.54.24) +
*  CRDATE(2024-02-13) +
*  CRTIME(06.54.24) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.CONVEY.INVUPD.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.06) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.06) +
*  CURDEPTH(802) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.CONVEY.INVUPD.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.06) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.06) +
*  CURDEPTH(802) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.CONVEY.INVUPD.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.06) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.06) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.CONVEY.INVUPD.OUT') +
*  ALTDATE(2023-11-23) +
*  ALTTIME(03.17.54) +
*  CRDATE(2023-11-23) +
*  CRTIME(03.17.54) +
*  CURDEPTH(5) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.CONVEY.PO.ERROR') +
*  ALTDATE(2024-02-14) +
*  ALTTIME(03.25.49) +
*  CRDATE(2024-02-14) +
*  CRTIME(03.25.49) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.CONVEY.PO.ERROR.DETAILS') +
*  ALTDATE(2024-02-14) +
*  ALTTIME(03.25.35) +
*  CRDATE(2024-02-14) +
*  CRTIME(03.25.35) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.CONVEY.PO.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.06) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.06) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.DD.SDORDREQ.ERROR') +
*  ALTDATE(2023-12-27) +
*  ALTTIME(05.50.19) +
*  CRDATE(2023-12-27) +
*  CRTIME(05.50.19) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.DD.SDORDREQ.ERROR.DETAILS') +
*  ALTDATE(2023-12-27) +
*  ALTTIME(05.49.53) +
*  CRDATE(2023-12-27) +
*  CRTIME(05.49.53) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.DD.SDORDREQ.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.06) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.06) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.DD.SDORDREQ.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.06) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.06) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.INVD.CM.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.06) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.06) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.INVD.CM.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.06) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.06) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.INVD.CM.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.06) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.06) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.INVD.CM.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.06) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.06) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.INVD.CM.INTER.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.06) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.06) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.INVD.CM.INTER.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.06) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.06) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.INVD.CM.TEMPIN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.06) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.06) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.INVD.CM.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.06) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.06) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.INVD.RL.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.06) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.06) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.INVD.RL.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.06) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.06) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.INVD.RL.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.06) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.06) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.INVD.RL.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.06) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.06) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.INVD.RL.INTER.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.06) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.06) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.INVD.RL.INTER.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.06) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.06) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.INVD.RL.TEMPIN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.06) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.06) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.INVD.RL.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.06) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.06) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.INVDSTS.CM.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.06) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.06) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.INVDSTS.CM.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.06) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.06) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.INVDSTS.CM.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.06) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.06) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.INVDSTS.CM.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.06) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.06) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.INVDSTS.RL.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.06) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.06) +
*  CURDEPTH(4) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.INVDSTS.RL.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.06) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.06) +
*  CURDEPTH(4) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.INVDSTS.RL.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.06) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.06) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.INVDSTS.RL.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.06) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.06) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.INVF.CM.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.06) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.06) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.INVF.CM.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.07) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.07) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.INVF.CM.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.07) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.07) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.INVF.CM.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.07) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.07) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.INVF.CM.INTER.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.07) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.07) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.INVF.CM.INTER.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.07) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.07) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.INVF.CM.INTER.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.07) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.07) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.INVF.CM.TEMPIN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.07) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.07) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.INVF.RL.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.07) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.07) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.INVF.RL.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.07) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.07) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.INVF.RL.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.07) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.07) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.INVF.RL.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.07) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.07) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.INVF.RL.INTER.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.07) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.07) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.INVF.RL.INTER.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.07) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.07) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.INVF.RL.INTER.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.07) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.07) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.INVF.RL.TEMPIN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.07) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.07) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.INVFSTS.CM.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.07) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.07) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.INVFSTS.CM.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.07) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.07) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.INVFSTS.CM.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.07) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.07) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.INVFSTS.CM.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.07) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.07) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.INVFSTS.RL.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.07) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.07) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.INVFSTS.RL.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.07) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.07) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.INVFSTS.RL.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.07) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.07) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.INVFSTS.RL.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.07) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.07) +
*  CURDEPTH(5) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.ORDACK.CM.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.07) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.07) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.ORDACK.FBREQ.CM.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.07) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.07) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.ORDACK.FBREQ.RL.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.07) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.07) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.ORDACK.OMSREQ.CM.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.07) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.07) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.ORDACK.OMSREQ.RL.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.07) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.07) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.ORDACK.REQ.CM.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.07) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.07) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.ORDACK.REQ.CM.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.07) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.07) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.ORDACK.REQ.CM.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.07) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.07) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.ORDACK.REQ.RL.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.07) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.07) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.ORDACK.REQ.RL.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.07) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.07) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.ORDACK.REQ.RL.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.07) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.07) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.ORDACK.RL.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.07) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.07) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.ORDCANCEL.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.07) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.07) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.ORDCANCEL.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.07) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.07) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.ORDCANCEL.FBREQ.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.07) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.07) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.ORDCANCEL.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.07) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.07) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.ORDCANCEL.OMSREQ.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.07) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.07) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.ORDRETURN.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.07) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.07) +
*  CURDEPTH(9) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.ORDRETURN.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.07) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.07) +
*  CURDEPTH(9) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.ORDRETURN.FBREQ.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.08) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.08) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.ORDRETURN.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.08) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.08) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.ORDRETURN.OMSREQ.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.08) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.08) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.SHIPUPD.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.08) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.08) +
*  CURDEPTH(130) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.SHIPUPD.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.08) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.08) +
*  CURDEPTH(130) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.SHIPUPD.FBREQ.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.08) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.08) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.SHIPUPD.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.08) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.08) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FB.SHIPUPD.OMSREQ.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.08) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.08) +
*  CURDEPTH(134) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FIRSTDATA.ACTGC.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.08) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.08) +
*  CURDEPTH(9) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FIRSTDATA.ACTGC.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.08) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.08) +
*  CURDEPTH(9) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FIRSTDATA.ACTGC.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.08) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.08) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FIRSTDATA.ACTGC.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.08) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.08) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FIRSTDATA.ACTGC.PGC.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.08) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.08) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FIRSTDATA.ACTGC.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.08) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.08) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FIRSTDATA.ACTGC.VGC.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.08) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.08) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FIRSTDATA.AGCDUP.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.08) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.08) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FIRSTDATA.AGCDUP.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.08) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.08) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FIRSTDATA.AGCDUP.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.08) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.08) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FORTER.ORDUPDATE.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.08) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.08) +
*  CURDEPTH(11) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FORTER.ORDUPDATE.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.08) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.08) +
*  CURDEPTH(11) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FORTER.ORDUPDATE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.08) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.08) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.GCD.ORDCRTUPD.BUYER.INTER') +
*  ALTDATE(2023-06-22) +
*  ALTTIME(17.19.36) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.08) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.GCD.ORDCRTUPD.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.08) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.08) +
*  CURDEPTH(7) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.GCD.ORDCRTUPD.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.08) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.08) +
*  CURDEPTH(7) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.GCD.ORDCRTUPD.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.08) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.08) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.GCD.ORDCRTUPD.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.08) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.08) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.GCD.ORDCRTUPD.NXTDAY') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.08) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.08) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.GCD.ORDCRTUPD.NXTDAY.ERROR') +
*  ALTDATE(2024-02-15) +
*  ALTTIME(06.59.27) +
*  CRDATE(2024-02-15) +
*  CRTIME(06.59.27) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.GCD.ORDCRTUPD.NXTDAY.ERROR.DETAILS') +
*  ALTDATE(2024-02-15) +
*  ALTTIME(06.59.06) +
*  CRDATE(2024-02-15) +
*  CRTIME(06.59.06) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.GCD.ORDCRTUPD.NXTDAY.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.08) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.08) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.GCD.ORDCRTUPD.ORDER.INTER') +
*  ALTDATE(2023-06-22) +
*  ALTTIME(17.19.52) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.08) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.GCD.ORDCRTUPD.OUT') +
*  ALTDATE(2024-02-08) +
*  ALTTIME(07.04.25) +
*  CRDATE(2024-02-08) +
*  CRTIME(07.04.25) +
*  CURDEPTH(8) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.GCD.ORDCRTUPD.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.08) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.08) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IIB.ORDEREVENT.ERROR') +
*  ALTDATE(2024-02-15) +
*  ALTTIME(09.39.43) +
*  CRDATE(2024-02-15) +
*  CRTIME(09.39.43) +
*  CURDEPTH(3) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IIB.ORDEREVENT.ERROR.DETAILS') +
*  ALTDATE(2024-02-15) +
*  ALTTIME(09.39.27) +
*  CRDATE(2024-02-15) +
*  CRTIME(09.39.27) +
*  CURDEPTH(3) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IIB.ORDEREVENT.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.08) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.08) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IIB.ORDEREVENT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.08) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.08) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IIB.ORDEVTDUP.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.08) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.08) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IIB.ORDEVTDUP.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.08) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.08) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IIB.ORDEVTDUP.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.08) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.08) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IP.CHUBINVPURCH.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.09) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.09) +
*  CURDEPTH(16) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IP.CHUBINVPURCH.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.09) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.09) +
*  CURDEPTH(16) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IP.CHUBINVPURCH.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.09) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.09) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IP.CHUBINVPURCH.LOG') +
*  ALTDATE(2023-11-14) +
*  ALTTIME(04.12.12) +
*  CRDATE(2023-11-14) +
*  CRTIME(04.12.12) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IP.CHUBINVPURCH.OUT') +
*  ALTDATE(2023-11-02) +
*  ALTTIME(04.38.35) +
*  CRDATE(2023-11-02) +
*  CRTIME(04.38.35) +
*  CURDEPTH(27) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IP.CHUBINVPURCH.TESTQUEUE') +
*  ALTDATE(2023-12-01) +
*  ALTTIME(08.52.12) +
*  CRDATE(2023-12-01) +
*  CRTIME(08.52.12) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IP.CHUBINVPURCH.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.09) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.09) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IP.FINPOST.CA.INTER') +
*  ALTDATE(2023-07-07) +
*  ALTTIME(09.45.04) +
*  CRDATE(2023-07-07) +
*  CRTIME(09.45.04) +
*  CURDEPTH(3560) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IP.FINPOST.CA.NXTDAY') +
*  ALTDATE(2023-07-07) +
*  ALTTIME(09.54.13) +
*  CRDATE(2023-07-07) +
*  CRTIME(09.54.13) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IP.FINPOST.CA.OUT') +
*  ALTDATE(2023-07-07) +
*  ALTTIME(09.52.51) +
*  CRDATE(2023-07-07) +
*  CRTIME(09.52.51) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IP.FINPOST.CA.TRIGGER') +
*  ALTDATE(2023-07-07) +
*  ALTTIME(09.44.41) +
*  CRDATE(2023-07-07) +
*  CRTIME(09.44.41) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IP.FINPOST.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.09) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.09) +
*  CURDEPTH(20) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IP.FINPOST.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.09) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.09) +
*  CURDEPTH(20) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IP.FINPOST.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.09) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.09) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IP.FINPOST.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.09) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.09) +
*  CURDEPTH(10) +
   DISTL(NO) +
   MAXDEPTH(1000000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IP.FINPOST.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.09) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.09) +
*  CURDEPTH(5) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IP.FINPOST.NXTDAY') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.09) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.09) +
   DISTL(NO) +
   MAXDEPTH(1000000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IP.FINPOST.NXTDAY.CA.TRIGGER') +
*  ALTDATE(2023-07-07) +
*  ALTTIME(09.53.32) +
*  CRDATE(2023-07-07) +
*  CRTIME(09.53.32) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IP.FINPOST.NXTDAY.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.09) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.09) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IP.FINPOST.OUT') +
*  ALTDATE(2023-09-14) +
*  ALTTIME(08.12.35) +
*  CRDATE(2023-09-14) +
*  CRTIME(08.12.35) +
*  CURDEPTH(34) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IP.FINPOST.OUT.DUP') +
*  ALTDATE(2023-05-19) +
*  ALTTIME(11.43.49) +
*  CRDATE(2023-05-19) +
*  CRTIME(11.43.49) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IP.FINPOST.OUT.TMP') +
*  ALTDATE(2023-06-13) +
*  ALTTIME(09.23.56) +
*  CRDATE(2023-06-13) +
*  CRTIME(09.23.56) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IP.FINPOST.TEST.IN') +
*  ALTDATE(2023-06-16) +
*  ALTTIME(08.01.04) +
*  CRDATE(2023-06-16) +
*  CRTIME(08.01.04) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IP.FINPOST.TEST.INTER') +
*  ALTDATE(2023-06-16) +
*  ALTTIME(08.01.27) +
*  CRDATE(2023-06-16) +
*  CRTIME(08.01.27) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IP.FINPOST.TEST.OUT.TMP') +
*  ALTDATE(2023-06-16) +
*  ALTTIME(08.01.54) +
*  CRDATE(2023-06-16) +
*  CRTIME(08.01.54) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IP.FINPOST.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.09) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.09) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IP.FINPOSTDUP.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.09) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.09) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IP.FINPOSTDUP.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.09) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.09) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IP.FINPOSTDUP.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.09) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.09) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IP.FINPOST_CA.INTER') +
*  ALTDATE(2023-07-07) +
*  ALTTIME(09.43.39) +
*  CRDATE(2023-07-07) +
*  CRTIME(09.43.39) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.MM.SDSLAALERT.ERROR') +
*  ALTDATE(2024-02-14) +
*  ALTTIME(04.32.43) +
*  CRDATE(2024-02-14) +
*  CRTIME(04.32.43) +
*  CURDEPTH(2) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.MM.SDSLAALERT.ERROR.DETAILS') +
*  ALTDATE(2024-02-14) +
*  ALTTIME(04.32.26) +
*  CRDATE(2024-02-14) +
*  CRTIME(04.32.26) +
*  CURDEPTH(2) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.MM.SDSLAALERT.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.09) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.09) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.MSOFT.ORDERNOTIFY.ERROR') +
*  ALTDATE(2024-02-13) +
*  ALTTIME(10.38.02) +
*  CRDATE(2024-02-13) +
*  CRTIME(10.38.02) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.MSOFT.ORDERNOTIFY.ERROR.DETAILS') +
*  ALTDATE(2024-02-13) +
*  ALTTIME(10.37.46) +
*  CRDATE(2024-02-13) +
*  CRTIME(10.37.46) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.MSOFT.ORDERNOTIFY.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.09) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.09) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.NARVAR.ORDCRTUPD.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.09) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.09) +
*  CURDEPTH(4336) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.NARVAR.ORDCRTUPD.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.09) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.09) +
*  CURDEPTH(8) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.NARVAR.ORDCRTUPD.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.09) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.09) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.NARVAR.ORDCRTUPD.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.09) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.09) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.NARVAR.ORDCUDUP.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.09) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.09) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.NARVAR.ORDCUDUP.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.09) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.09) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.NARVAR.ORDCUDUP.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.09) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.09) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.NARVAR.ORDSTATUS.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.09) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.09) +
*  CURDEPTH(2) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.NARVAR.ORDSTATUS.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.09) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.09) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.NARVAR.ORDSTATUS.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.09) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.09) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.SFCC.ORDERACK.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.09) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.09) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.SFCC.ORDERACK.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.09) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.09) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.SFCC.ORDERACK.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.09) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.09) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.SFCC.ORDERACK.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.09) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.09) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.SFCC.PRICEBOOK.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.09) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.09) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.SFCC.PRICEBOOK.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.09) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.09) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.SFCC.PRICEBOOK.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.09) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.09) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.SFCC.RTAM.DEL.CA.ERROR') +
*  ALTDATE(2023-07-26) +
*  ALTTIME(03.58.09) +
*  CRDATE(2023-07-26) +
*  CRTIME(03.58.09) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.SFCC.RTAM.DEL.CA.ERROR.DETAILS') +
*  ALTDATE(2023-07-26) +
*  ALTTIME(03.58.53) +
*  CRDATE(2023-07-26) +
*  CRTIME(03.58.53) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.SFCC.RTAM.DEL.CA.IN') +
*  ALTDATE(2023-07-26) +
*  ALTTIME(03.57.15) +
*  CRDATE(2023-07-26) +
*  CRTIME(03.57.15) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.SFCC.RTAM.DEL.CA.OUT') +
*  ALTDATE(2023-07-26) +
*  ALTTIME(03.59.12) +
*  CRDATE(2023-07-26) +
*  CRTIME(03.59.12) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.SFCC.RTAM.DEL.CA.TEMPIN') +
*  ALTDATE(2023-07-26) +
*  ALTTIME(03.57.47) +
*  CRDATE(2023-07-26) +
*  CRTIME(03.57.47) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.SFCC.RTAM.DEL.CA.TRIGGER') +
*  ALTDATE(2023-07-26) +
*  ALTTIME(03.56.56) +
*  CRDATE(2023-07-26) +
*  CRTIME(03.56.56) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.SFCC.RTAM.DEL.US.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.10) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.10) +
*  CURDEPTH(17) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.SFCC.RTAM.DEL.US.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.10) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.10) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.SFCC.RTAM.DEL.US.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.10) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.10) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.SFCC.RTAM.DEL.US.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.10) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.10) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.SFCC.RTAM.DEL.US.OUT') +
*  ALTDATE(2023-05-05) +
*  ALTTIME(06.04.30) +
*  CRDATE(2023-05-05) +
*  CRTIME(06.04.30) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.SFCC.RTAM.DEL.US.TEMPIN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.10) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.10) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.SFCC.RTAM.DEL.US.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.10) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.10) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.SFCC.RTAM.EOD.CA.ERROR') +
*  ALTDATE(2023-07-26) +
*  ALTTIME(03.55.46) +
*  CRDATE(2023-07-26) +
*  CRTIME(03.55.46) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.SFCC.RTAM.EOD.CA.ERROR.DETAILS') +
*  ALTDATE(2023-07-26) +
*  ALTTIME(03.56.09) +
*  CRDATE(2023-07-26) +
*  CRTIME(03.56.09) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.SFCC.RTAM.EOD.CA.IN') +
*  ALTDATE(2023-07-26) +
*  ALTTIME(03.54.20) +
*  CRDATE(2023-07-26) +
*  CRTIME(03.54.20) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.SFCC.RTAM.EOD.CA.INTER') +
*  ALTDATE(2023-07-26) +
*  ALTTIME(03.55.08) +
*  CRDATE(2023-07-26) +
*  CRTIME(03.55.08) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.SFCC.RTAM.EOD.CA.INTER.DATA') +
*  ALTDATE(2023-07-26) +
*  ALTTIME(03.55.26) +
*  CRDATE(2023-07-26) +
*  CRTIME(03.55.26) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.SFCC.RTAM.EOD.CA.OUT') +
*  ALTDATE(2023-07-26) +
*  ALTTIME(03.56.36) +
*  CRDATE(2023-07-26) +
*  CRTIME(03.56.36) +
*  CURDEPTH(3) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.SFCC.RTAM.EOD.CA.TEMPIN') +
*  ALTDATE(2023-07-26) +
*  ALTTIME(03.54.48) +
*  CRDATE(2023-07-26) +
*  CRTIME(03.54.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.SFCC.RTAM.EOD.US.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.10) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.10) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.SFCC.RTAM.EOD.US.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.10) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.10) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.SFCC.RTAM.EOD.US.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.10) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.10) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.SFCC.RTAM.EOD.US.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.10) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.10) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.SFCC.RTAM.EOD.US.INTER.DATA') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.10) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.10) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.SFCC.RTAM.EOD.US.OUT') +
*  ALTDATE(2023-05-10) +
*  ALTTIME(08.53.07) +
*  CRDATE(2023-05-10) +
*  CRTIME(08.53.07) +
*  CURDEPTH(3) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.SFCC.RTAM.EOD.US.TEMPIN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.10) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.10) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.SFCC.RTAM.EOD.US.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.10) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.10) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.SFCC.SDSTRINV.DEFAULT.ERROR') +
*  ALTDATE(2024-02-13) +
*  ALTTIME(10.09.00) +
*  CRDATE(2024-02-13) +
*  CRTIME(10.09.00) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.SFCC.SDSTRINV.DEFAULT.ERROR.DETAILS') +
*  ALTDATE(2024-02-13) +
*  ALTTIME(10.09.32) +
*  CRDATE(2024-02-13) +
*  CRTIME(10.09.32) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.SFCC.SDSTRINV.ERROR') +
*  ALTDATE(2024-02-28) +
*  ALTTIME(06.00.04) +
*  CRDATE(2024-02-28) +
*  CRTIME(06.00.04) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.SFCC.SDSTRINV.ERROR.DETAILS') +
*  ALTDATE(2024-02-28) +
*  ALTTIME(06.00.20) +
*  CRDATE(2024-02-28) +
*  CRTIME(06.00.20) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.SFCC.SDSTRINV.IN') +
*  ALTDATE(2024-02-13) +
*  ALTTIME(10.07.37) +
*  CRDATE(2024-02-13) +
*  CRTIME(10.07.37) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.SFCC.SDSTRINV.OUT') +
*  ALTDATE(2024-02-13) +
*  ALTTIME(10.08.10) +
*  CRDATE(2024-02-13) +
*  CRTIME(10.08.10) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.SSHEET.SHIPUPD.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.10) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.10) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.SSHEET.SHIPUPD.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.10) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.10) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.SSHEET.SHIPUPD.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.10) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.10) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(3) +
   MAXDEPTH(50000) +
*  OPPROCS(1) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.SSHEET.SHIPUPD.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.10) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.10) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.UNMADE.ORDERCRT.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.10) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.10) +
*  CURDEPTH(3) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.UNMADE.ORDERCRT.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.10) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.10) +
*  CURDEPTH(3) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.UNMADE.ORDERCRT.IN') +
*  ALTDATE(2024-02-14) +
*  ALTTIME(10.29.01) +
*  CRDATE(2024-02-14) +
*  CRTIME(10.29.01) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.UNMADE.ORDERCRT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.10) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.10) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.UNMADE.ORDERRET.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.10) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.10) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.UNMADE.ORDERRET.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.10) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.10) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.UNMADE.ORDERRET.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.10) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.10) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.WMS.RETURNASN.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.10) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.10) +
*  CURDEPTH(4348) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.WMS.RETURNASN.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.10) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.10) +
*  CURDEPTH(4348) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.WMS.RETURNASN.IN.ACE') +
*  ALTDATE(2024-02-13) +
*  ALTTIME(09.26.22) +
*  CRDATE(2024-02-13) +
*  CRTIME(09.26.22) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.WMS.RETURNASN.IN.DUP') +
*  ALTDATE(2023-06-12) +
*  ALTTIME(07.44.50) +
*  CRDATE(2023-06-12) +
*  CRTIME(07.44.50) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.WMS.RETURNASN.LOG.DUP') +
*  ALTDATE(2023-06-12) +
*  ALTTIME(07.45.18) +
*  CRDATE(2023-06-12) +
*  CRTIME(07.45.18) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.WMS.RETURNASN.SAMPLE.OUT') +
*  ALTDATE(2023-06-12) +
*  ALTTIME(07.43.19) +
*  CRDATE(2023-06-12) +
*  CRTIME(07.43.19) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.WMS.RETURNASN.TRIGGER') +
*  ALTDATE(2023-06-12) +
*  ALTTIME(07.52.57) +
*  CRDATE(2023-06-12) +
*  CRTIME(07.52.57) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.WMS.RETURNASN.TRIGGER.DUP') +
*  ALTDATE(2023-06-12) +
*  ALTTIME(07.44.25) +
*  CRDATE(2023-06-12) +
*  CRTIME(07.44.25) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.WMS.SHIPREQDUP.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.10) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.10) +
*  CURDEPTH(43) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.WMS.SHIPREQDUP.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.10) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.10) +
*  CURDEPTH(43) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.WMS.SHIPREQDUP.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.10) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.10) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.WMS.SHIPREQUEST.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.10) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.10) +
*  CURDEPTH(93) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.WMS.SHIPREQUEST.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.10) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.10) +
*  CURDEPTH(93) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.WMS.SHIPREQUEST.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.10) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.10) +
*  CURDEPTH(5) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.WMS.SHIPREQUEST.IN.ACE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.10) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.10) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.WMS.SHIPREQUEST.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.10) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.10) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.WMS.SHIPREQUEST.LOG.DUP') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.10) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.10) +
*  CURDEPTH(19) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.WMS.SHIPREQUEST.OUT') +
*  ALTDATE(2024-02-06) +
*  ALTTIME(06.03.57) +
*  CRDATE(2024-02-06) +
*  CRTIME(06.03.57) +
*  CURDEPTH(31) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.WMS.SHIPREQUEST.SAMPLE.OUT') +
*  ALTDATE(2023-05-19) +
*  ALTTIME(07.43.19) +
*  CRDATE(2023-05-19) +
*  CRTIME(07.43.19) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.WMS.SHIPREQUEST.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.10) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.10) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.WMS.SHIPREQUEST.TRIGGER.DUP') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.10) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.10) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.ZETA.ORDERNOTIFY.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.10) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.10) +
*  CURDEPTH(76) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.ZETA.ORDERNOTIFY.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.10) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.10) +
*  CURDEPTH(76) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.ZETA.ORDERNOTIFY.IN') +
*  ALTDATE(2024-01-12) +
*  ALTTIME(18.52.33) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.10) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.ZETA.ORDERNOTIFY.IN1') +
*  ALTDATE(2024-01-12) +
*  ALTTIME(18.53.11) +
*  CRDATE(2024-01-12) +
*  CRTIME(18.53.11) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.ZETA.ORDERNOTIFY.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.10) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.10) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.ZETA.ORDNTFYDUP.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.10) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.10) +
*  CURDEPTH(4) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.ZETA.ORDNTFYDUP.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.10) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.10) +
*  CURDEPTH(4) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.ZETA.ORDNTFYDUP.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.11) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.11) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.AWS.ORDERCREATE.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.11) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.11) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.AWS.ORDERCREATE.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.11) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.11) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.AWS.ORDERCREATE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.11) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.11) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.AWS.ORDERCREATE.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.11) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.11) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.BI.ORDERCREATE.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.11) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.11) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.BI.ORDERCREATE.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.11) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.11) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.BI.ORDERCREATE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.11) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.11) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(3) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.BI.ORDERCREATE.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.11) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.11) +
*  CURDEPTH(2) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.BI.ORDERCREATE.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.11) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.11) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(3) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.CODE.ORDERFEED.BUYER.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.11) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.11) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.CODE.ORDERFEED.CONTROL.OUT') +
*  ALTDATE(2023-12-04) +
*  ALTTIME(10.21.43) +
*  CRDATE(2023-12-04) +
*  CRTIME(10.21.43) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.CODE.ORDERFEED.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.11) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.11) +
*  CURDEPTH(3) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.CODE.ORDERFEED.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.11) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.11) +
*  CURDEPTH(19) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.CODE.ORDERFEED.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.11) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.11) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.CODE.ORDERFEED.ORDER.IN') +
*  ALTDATE(2023-12-04) +
*  ALTTIME(11.28.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.11) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   MAXMSGL(50000000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.CODE.ORDERFEED.OUT') +
*  ALTDATE(2023-12-04) +
*  ALTTIME(10.21.22) +
*  CRDATE(2023-12-04) +
*  CRTIME(10.21.22) +
*  CURDEPTH(6) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.OMS.ORDCREDUP.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.11) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.11) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.OMS.ORDCREDUP.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.11) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.11) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.OMS.ORDCREDUP.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.11) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.11) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(3) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.OMS.ORDCREDUP.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.11) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.11) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.OMS.ORDERCREATE.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.11) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.11) +
*  CURDEPTH(69) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.OMS.ORDERCREATE.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.11) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.11) +
*  CURDEPTH(69) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.OMS.ORDERCREATE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.11) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.11) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(3) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.OMS.ORDERCREATE.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.11) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.11) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.OMS.ORDERCREATE.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.11) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.11) +
*  CURDEPTH(48) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.OPP.ORDERCREATE.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.11) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.11) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.OPP.ORDERCREATE.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.11) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.11) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.OPP.ORDERCREATE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.11) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.11) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.OPP.ORDERCREATE.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.11) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.11) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.OPP.ORDERCREATE.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.11) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.11) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.OPP.ORDERCREATEOUT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.11) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.11) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.OQ4.ORDERCREATE.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.11) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.11) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.OQ4.ORDERCREATE.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.11) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.11) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.OQ4.ORDERCREATE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.11) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.11) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.OQ4.ORDERCREATE.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.11) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.11) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.OQ4.ORDERCREATE.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.11) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.11) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.OQ4.ORDERCREATEOUT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.11) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.11) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.OQA.ORDERCREATE.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.11) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.11) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.OQA.ORDERCREATE.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.11) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.11) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.OQA.ORDERCREATE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.12) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.12) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.OQA.ORDERCREATE.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.12) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.12) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.OQA.ORDERCREATE.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.12) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.12) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.OQA.ORDERCREATEOUT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.12) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.12) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.TNKFUL.OMS.ORDINF.ERROR') +
*  ALTDATE(2024-02-14) +
*  ALTTIME(11.03.56) +
*  CRDATE(2024-02-14) +
*  CRTIME(11.03.56) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.TNKFUL.OMS.ORDINF.ERROR.DETAILS') +
*  ALTDATE(2024-02-14) +
*  ALTTIME(11.03.44) +
*  CRDATE(2024-02-14) +
*  CRTIME(11.03.44) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.TNKFUL.OMS.ORDINF.IN.LOG') +
*  ALTDATE(2024-02-14) +
*  ALTTIME(11.04.22) +
*  CRDATE(2024-02-14) +
*  CRTIME(11.04.22) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.TNKFUL.OMS.ORDINF.OUT.LOG') +
*  ALTDATE(2024-02-14) +
*  ALTTIME(11.04.38) +
*  CRDATE(2024-02-14) +
*  CRTIME(11.04.38) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.UPS.OMS.EDISHPTRACK.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.12) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.12) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.UPS.OMS.EDISHPTRACK.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.12) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.12) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.UPS.OMS.EDISHPTRACK.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.12) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.12) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.UPS.OMS.EDISHPTRACK.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.12) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.12) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.UPS.OMS.EDISHPTRACK.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.12) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.12) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.UPS.ZETA.STOREHRS.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.12) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.12) +
*  CURDEPTH(56) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(10000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.UPS.ZETA.STOREHRS.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.12) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.12) +
*  CURDEPTH(22) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(10000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.UPS.ZETA.STOREHRS.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.12) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.12) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(10000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.UPS.ZETA.STOREHRS.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.12) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.12) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(10000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.WMS.OMS.SHIPCONFIRM.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.12) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.12) +
*  CURDEPTH(3) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.WMS.OMS.SHIPCONFIRM.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.12) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.12) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.WMS.OMS.SHIPCONFIRM.ESBERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.12) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.12) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.WMS.OMS.SHIPCONFIRM.ESBERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.12) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.12) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.WMS.OMS.SHIPCONFIRM.ESBOUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.12) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.12) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.WMS.OMS.SHIPCONFIRM.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.12) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.12) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.WMS.OMS.SHIPCONFIRM.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.12) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.12) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.WMS.OMS.SHIPCONFIRM.OUT.DUP') +
*  ALTDATE(2023-05-17) +
*  ALTTIME(15.36.04) +
*  CRDATE(2023-05-17) +
*  CRTIME(15.36.04) +
*  CURDEPTH(6) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.WMS.OMS.SHIPCONFIRM.SAMPLE.GET') +
*  ALTDATE(2023-05-18) +
*  ALTTIME(06.28.10) +
*  CRDATE(2023-05-18) +
*  CRTIME(06.28.10) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.WMS.OMS.SHIPCONFIRM.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.12) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.12) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.WMS.OMS.SHIPCONFIRM.TRIGGER.DUP') +
*  ALTDATE(2023-05-17) +
*  ALTTIME(15.27.42) +
*  CRDATE(2023-05-17) +
*  CRTIME(15.27.42) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.YEXT.IIB.STRINFDUP.ERROR') +
*  ALTDATE(2023-06-07) +
*  ALTTIME(07.02.03) +
*  CRDATE(2023-06-07) +
*  CRTIME(07.02.03) +
*  CURDEPTH(14) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.YEXT.IIB.STRINFDUP.ERROR.DETAILS') +
*  ALTDATE(2023-06-07) +
*  ALTTIME(07.01.34) +
*  CRDATE(2023-06-07) +
*  CRTIME(07.01.34) +
*  CURDEPTH(14) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.YEXT.IIB.STRINFDUP.IN') +
*  ALTDATE(2023-12-11) +
*  ALTTIME(07.06.51) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.12) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(5000) +
   MAXMSGL(5948000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.YEXT.IIB.STRINFDUP.LOG') +
*  ALTDATE(2023-06-07) +
*  ALTTIME(06.52.28) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.12) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.YEXT.IIB.STRINFDUP.OUT') +
*  ALTDATE(2023-07-25) +
*  ALTTIME(06.57.32) +
*  CRDATE(2023-07-25) +
*  CRTIME(06.57.32) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.YEXT.SFCC.STRINF.ERROR') +
*  ALTDATE(2023-06-02) +
*  ALTTIME(09.57.06) +
*  CRDATE(2023-06-02) +
*  CRTIME(09.57.06) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.YEXT.SFCC.STRINF.ERROR.DETAILS') +
*  ALTDATE(2023-06-02) +
*  ALTTIME(09.56.48) +
*  CRDATE(2023-06-02) +
*  CRTIME(09.56.48) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.YEXT.SFCC.STRINF.IN') +
*  ALTDATE(2023-12-11) +
*  ALTTIME(07.01.19) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.12) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   MAXMSGL(5948000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.YEXT.SFCC.STRINF.OUT') +
*  ALTDATE(2023-08-02) +
*  ALTTIME(09.59.27) +
*  CRDATE(2023-08-02) +
*  CRTIME(09.59.27) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.YEXT.SFCC.STRINF.OUT.DUP') +
*  ALTDATE(2023-08-02) +
*  ALTTIME(10.10.28) +
*  CRDATE(2023-08-02) +
*  CRTIME(10.10.28) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.YEXT.SFCC.STRINF.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.12) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.12) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.YEXT.ZETA.STRINF.ERROR') +
*  ALTDATE(2024-02-13) +
*  ALTTIME(09.33.22) +
*  CRDATE(2024-02-13) +
*  CRTIME(09.33.22) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.YEXT.ZETA.STRINF.ERROR.DETAILS') +
*  ALTDATE(2024-02-13) +
*  ALTTIME(09.33.08) +
*  CRDATE(2024-02-13) +
*  CRTIME(09.33.08) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.YEXT.ZETA.STRINF.IN') +
*  ALTDATE(2024-02-13) +
*  ALTTIME(09.32.47) +
*  CRDATE(2024-02-13) +
*  CRTIME(09.32.47) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.YEXT.ZETA.STRINF.TRIGGER') +
*  ALTDATE(2024-02-13) +
*  ALTTIME(09.34.01) +
*  CRDATE(2024-02-13) +
*  CRTIME(09.34.01) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSSAP.IIB.BI.EUDCINV.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.12) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.12) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('OMSSAP.IIB.OMS.EUDCINV.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.12) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.12) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSSAP.IIB.OMS.EUDCINV.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.12) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.12) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSSAP.IIB.OMS.EUDCINV.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.12) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.12) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSSAP.IIB.OMS.EUDCINVDAILY.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.12) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.12) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSSAP.IIB.OMS.EUDCINVDELTA.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.12) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.12) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSSAP.IIB.OMS.EUDCINVFULL.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.12) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.12) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSSAP.IIB.OMS.WHDEM.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.12) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.12) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSSAP.IIB.OMS.WHDEM.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.12) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.12) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSSAP.IIB.OMS.WHDEM.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.12) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.12) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSSAP.IIB.OMS.WHDEMDAILY.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.12) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.12) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSSAP.IIB.OMS.WHDEMDELTA.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.12) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.12) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSSAP.IIB.OMS.WHDEMFULL.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.12) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.12) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSTesting1.queue') +
*  ALTDATE(2024-02-12) +
*  ALTTIME(04.55.00) +
*  CRDATE(2024-02-12) +
*  CRTIME(04.55.00) +
   DISTL(NO) +
   MAXDEPTH(100000) +
   REPLACE
DEFINE QLOCAL('OPTORO.BI.OPT.ITEMFEED.ERROR') +
*  ALTDATE(2023-06-15) +
*  ALTTIME(06.58.54) +
*  CRDATE(2023-06-15) +
*  CRTIME(06.58.54) +
*  CURDEPTH(15) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.BI.OPT.ITEMFEED.ERROR.DETAILS') +
*  ALTDATE(2023-06-15) +
*  ALTTIME(06.58.33) +
*  CRDATE(2023-06-15) +
*  CRTIME(06.58.33) +
*  CURDEPTH(15) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.BI.OPT.ITEMFEED.IN') +
*  ALTDATE(2023-06-15) +
*  ALTTIME(07.00.04) +
*  CRDATE(2023-06-15) +
*  CRTIME(07.00.04) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.BI.OPT.ITEMFEED.INTER') +
*  ALTDATE(2023-06-15) +
*  ALTTIME(06.58.14) +
*  CRDATE(2023-06-15) +
*  CRTIME(06.58.14) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.BI.OPT.ITEMFEED.INTER.ERROR') +
*  ALTDATE(2023-06-15) +
*  ALTTIME(06.59.35) +
*  CRDATE(2023-06-15) +
*  CRTIME(06.59.35) +
*  CURDEPTH(33) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.BI.OPT.ITEMFEED.INTER.ERROR.DETAILS') +
*  ALTDATE(2023-06-15) +
*  ALTTIME(06.59.13) +
*  CRDATE(2023-06-15) +
*  CRTIME(06.59.13) +
*  CURDEPTH(33) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.ERROR') +
*  ALTDATE(2023-06-06) +
*  ALTTIME(03.32.46) +
*  CRDATE(2023-06-06) +
*  CRTIME(03.32.46) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.ERROR.DETAILS') +
*  ALTDATE(2023-06-06) +
*  ALTTIME(03.32.14) +
*  CRDATE(2023-06-06) +
*  CRTIME(03.32.14) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.OMS.OPT.INBOUNDASN.ERROR') +
*  ALTDATE(2023-06-15) +
*  ALTTIME(06.57.11) +
*  CRDATE(2023-06-15) +
*  CRTIME(06.57.11) +
*  CURDEPTH(14) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.OMS.OPT.INBOUNDASN.ERROR.DETAILS') +
*  ALTDATE(2023-06-15) +
*  ALTTIME(06.57.30) +
*  CRDATE(2023-06-15) +
*  CRTIME(06.57.30) +
*  CURDEPTH(14) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.OMS.OPT.INBOUNDASN.IN') +
*  ALTDATE(2023-06-15) +
*  ALTTIME(06.56.19) +
*  CRDATE(2023-06-15) +
*  CRTIME(06.56.19) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.OMS.OPT.INBOUNDASN.OUT') +
*  ALTDATE(2023-06-15) +
*  ALTTIME(06.56.47) +
*  CRDATE(2023-06-15) +
*  CRTIME(06.56.47) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.OMS.OPT.RETURN.CANCEL.ERROR') +
*  ALTDATE(2023-06-20) +
*  ALTTIME(04.16.05) +
*  CRDATE(2023-06-20) +
*  CRTIME(04.16.05) +
*  CURDEPTH(25) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.OMS.OPT.RETURN.CANCEL.ERROR.DETAILS') +
*  ALTDATE(2023-06-20) +
*  ALTTIME(04.16.38) +
*  CRDATE(2023-06-20) +
*  CRTIME(04.16.38) +
*  CURDEPTH(25) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.OMS.OPT.RETURN.CANCEL.IN') +
*  ALTDATE(2023-06-20) +
*  ALTTIME(04.12.36) +
*  CRDATE(2023-06-20) +
*  CRTIME(04.12.36) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.OMS.OPT.RETURN.CANCEL.LOG.DETAILS') +
*  ALTDATE(2023-06-21) +
*  ALTTIME(04.53.43) +
*  CRDATE(2023-06-21) +
*  CRTIME(04.53.43) +
*  CURDEPTH(3) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.OMS.OPT.RETURN.CANCEL.OUT') +
*  ALTDATE(2023-06-20) +
*  ALTTIME(04.13.20) +
*  CRDATE(2023-06-20) +
*  CRTIME(04.13.20) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.OPT.ACE.INVENTORYRECEIPT.IN') +
*  ALTDATE(2023-07-18) +
*  ALTTIME(07.52.56) +
*  CRDATE(2023-07-18) +
*  CRTIME(07.52.56) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.OPT.IR.INVENTORYRECEIPT.ERROR') +
*  ALTDATE(2023-08-01) +
*  ALTTIME(06.43.59) +
*  CRDATE(2023-08-01) +
*  CRTIME(06.43.59) +
*  CURDEPTH(48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.OPT.IR.INVENTORYRECEIPT.ERROR.DETAILS') +
*  ALTDATE(2023-08-01) +
*  ALTTIME(06.44.28) +
*  CRDATE(2023-08-01) +
*  CRTIME(06.44.28) +
*  CURDEPTH(48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.OPT.IR.INVENTORYRECEIPT.IN') +
*  ALTDATE(2023-08-14) +
*  ALTTIME(07.58.20) +
*  CRDATE(2023-08-01) +
*  CRTIME(06.42.44) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   MAXMSGL(5194304) +
   REPLACE
DEFINE QLOCAL('OPTORO.OPT.IR.INVENTORYRECEIPT.LOG.DETAILS') +
*  ALTDATE(2023-08-01) +
*  ALTTIME(06.45.06) +
*  CRDATE(2023-08-01) +
*  CRTIME(06.45.06) +
*  CURDEPTH(32) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.OPT.IR.INVENTORYRECEIPT.OUT') +
*  ALTDATE(2023-08-01) +
*  ALTTIME(06.43.32) +
*  CRDATE(2023-08-01) +
*  CRTIME(06.43.32) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.OPT.OMS.INVENTORYRECEIPT.ERROR') +
*  ALTDATE(2023-06-21) +
*  ALTTIME(12.30.57) +
*  CRDATE(2023-06-21) +
*  CRTIME(12.30.57) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.OPT.OMS.INVENTORYRECEIPT.ERROR.DETAILS') +
*  ALTDATE(2023-06-21) +
*  ALTTIME(12.30.25) +
*  CRDATE(2023-06-21) +
*  CRTIME(12.30.25) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.OPT.OMS.INVENTORYRECEIPT.IN') +
*  ALTDATE(2023-07-17) +
*  ALTTIME(09.37.14) +
*  CRDATE(2023-07-17) +
*  CRTIME(09.37.14) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.OPT.OMS.INVENTORYRECEIPT.LOG.DETAILS') +
*  ALTDATE(2023-06-21) +
*  ALTTIME(05.31.20) +
*  CRDATE(2023-06-21) +
*  CRTIME(05.31.20) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.OPT.OMS.INVENTORYRECEIPT.LOG.DETAILS1') +
*  ALTDATE(2023-07-12) +
*  ALTTIME(05.15.08) +
*  CRDATE(2023-07-12) +
*  CRTIME(05.15.08) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.OPT.OMS.INVENTORYRECEIPT.OUT') +
*  ALTDATE(2023-06-20) +
*  ALTTIME(03.51.32) +
*  CRDATE(2023-06-20) +
*  CRTIME(03.51.32) +
*  CURDEPTH(2) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.OPT.SAP.INVENTORYRECEIPT.ERROR') +
*  ALTDATE(2023-07-11) +
*  ALTTIME(08.31.02) +
*  CRDATE(2023-07-11) +
*  CRTIME(08.31.02) +
*  CURDEPTH(25) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.OPT.SAP.INVENTORYRECEIPT.ERROR.DETAILS') +
*  ALTDATE(2023-07-11) +
*  ALTTIME(08.30.29) +
*  CRDATE(2023-07-11) +
*  CRTIME(08.30.29) +
*  CURDEPTH(25) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.OPT.SAP.INVENTORYRECEIPT.IN') +
*  ALTDATE(2024-02-14) +
*  ALTTIME(08.08.51) +
*  CRDATE(2023-07-03) +
*  CRTIME(09.44.15) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   MAXMSGL(43194304) +
   REPLACE
DEFINE QLOCAL('OPTORO.OPT.SAP.INVENTORYRECEIPT.LOG.DETAILS') +
*  ALTDATE(2023-07-13) +
*  ALTTIME(07.45.37) +
*  CRDATE(2023-07-13) +
*  CRTIME(07.45.37) +
*  CURDEPTH(803) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.OPT.SAP.INVENTORYRECEIPT.OUT') +
*  ALTDATE(2023-07-11) +
*  ALTTIME(05.33.54) +
*  CRDATE(2023-07-11) +
*  CRTIME(05.33.54) +
*  CURDEPTH(148) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.OPT.SAP.INVENTORYRECEIPT.TRIGGER') +
*  ALTDATE(2023-07-07) +
*  ALTTIME(03.22.10) +
*  CRDATE(2023-07-07) +
*  CRTIME(03.22.10) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.OPT.SAP.INVRECON.ERROR') +
*  ALTDATE(2023-08-24) +
*  ALTTIME(05.56.04) +
*  CRDATE(2023-08-24) +
*  CRTIME(05.56.04) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.OPT.SAP.INVRECON.ERROR.DETAILS') +
*  ALTDATE(2023-08-24) +
*  ALTTIME(05.56.35) +
*  CRDATE(2023-08-24) +
*  CRTIME(05.56.35) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.OPT.SAP.INVRECON.IN') +
*  ALTDATE(2024-02-14) +
*  ALTTIME(11.28.05) +
*  CRDATE(2023-09-16) +
*  CRTIME(05.27.40) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   MAXMSGL(41943040) +
   REPLACE
DEFINE QLOCAL('OPTORO.OPT.SAP.INVRECON.OUT') +
*  ALTDATE(2023-09-17) +
*  ALTTIME(02.18.03) +
*  CRDATE(2023-09-17) +
*  CRTIME(02.18.03) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.OPT.SAP.INVRECON.OUT.LOG') +
*  ALTDATE(2023-08-24) +
*  ALTTIME(05.57.06) +
*  CRDATE(2023-08-24) +
*  CRTIME(05.57.06) +
*  CURDEPTH(7) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.OPT.SAP.OUTBOUNDASN.ERROR') +
*  ALTDATE(2023-06-30) +
*  ALTTIME(08.08.01) +
*  CRDATE(2023-06-30) +
*  CRTIME(08.08.01) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.OPT.SAP.OUTBOUNDASN.ERROR.DETAILS') +
*  ALTDATE(2023-06-30) +
*  ALTTIME(08.07.43) +
*  CRDATE(2023-06-30) +
*  CRTIME(08.07.43) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.OPT.SAP.OUTBOUNDASN.IN') +
*  ALTDATE(2023-06-30) +
*  ALTTIME(08.07.05) +
*  CRDATE(2023-06-30) +
*  CRTIME(08.07.05) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.OPT.SAP.OUTBOUNDASN.OUT') +
*  ALTDATE(2023-06-30) +
*  ALTTIME(08.07.26) +
*  CRDATE(2023-06-30) +
*  CRTIME(08.07.26) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.TMP.TEST.OUT') +
*  ALTDATE(2023-06-26) +
*  ALTTIME(09.08.05) +
*  CRDATE(2023-06-26) +
*  CRTIME(09.08.05) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OutputQ') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.12) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.12) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   MONQ(HIGH) +
   REPLACE
DEFINE QLOCAL('RL.PMC.IIB.MATERIAL.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.12) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.12) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   REPLACE
DEFINE QLOCAL('RL.PMC.REPROCESS.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.13) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.13) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.ASN.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.13) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.13) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.ASN.ERRORDETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.13) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.13) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.ASN.INPUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.13) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.13) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.EVRYTHNG.ASN.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.13) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.13) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.EVRYTHNG.ASN.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.13) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.13) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.EVRYTHNG.ASN.LOG1') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.13) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.13) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.EVRYTHNG.ASN.LOG2') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.13) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.13) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.EVRYTHNG.CREMAS05') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.13) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.13) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.EVRYTHNG.MATMAS05') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.13) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.13) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.EVRYTHNG.ORDERS05') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.13) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.13) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.EVRYTHNG.ORDERS05.LOG1') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.13) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.13) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.EVRYTHNG.ORDERS05.LOG2') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.13) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.13) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.EVRYTHNG.SAMPLE.CREMAS05') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.13) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.13) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.EVRYTHNG.SAMPLE.CREMAS05.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.13) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.13) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.EVRYTHNG.SAMPLE.CREMAS05.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.13) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.13) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.EVRYTHNG.SAMPLE.MATMAS05') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.13) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.13) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.EVRYTHNG.SAMPLE.MATMAS05.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.13) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.13) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.EVRYTHNG.SAMPLE.MATMAS05.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.13) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.13) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.EVRYTHNG.SAMPLE.ORDERS05') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.13) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.13) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.EVRYTHNG.SAMPLE.ORDERS05.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.13) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.13) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.EVRYTHNG.SAMPLE.ORDERS05.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.13) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.13) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.ORDERS05NONEDI.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.13) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.13) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.ORDERS05NONEDI.ERRORDETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.13) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.13) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLAPAC.SFCC.AWS.ORDERCREATE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.13) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.13) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLAPAC.SFCC.BI.ORDERCREATE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.13) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.13) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLAPAC.SFCC.MULTI.ORDERCREATE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.13) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.13) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLAPAC.SFCC.MULTI.ORDERCREATE.IN.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.13) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.13) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLAPAC.SFCC.OMS.ORDERCREATE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.13) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.13) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLAPAC.SFCC.OMS.ORDERCREATE.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.13) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.13) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLAPAC.SFCC.OMS.ORDERCREATE.OUT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.14) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.14) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLAQVPFTE.RLEU.TEST.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.14) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.14) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('RLAQVPFTE.RLEU.TEST.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.14) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.14) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('RLAQVPFTE.RLEU.TEST.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.14) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.14) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('RLAQVPFTE.RLEU.TEST.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.14) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.14) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('RLM.ESB.FILEINERRORPROCESSING.INPUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.14) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.14) +
*  CURDEPTH(6) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(10000) +
   REPLACE
DEFINE QLOCAL('RLM.ESB.SENDMAIL.INPUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.14) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.14) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.ESB.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.14) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.14) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.IIB.PKMS.INBOUNDASN.DATASTORE') +
*  ALTDATE(2023-08-03) +
*  ALTTIME(08.19.44) +
*  CRDATE(2023-08-03) +
*  CRTIME(08.19.44) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.IIB.PKMS.INBOUNDASN.DATASTORE.LOG') +
*  ALTDATE(2023-08-03) +
*  ALTTIME(08.21.16) +
*  CRDATE(2023-08-03) +
*  CRTIME(08.21.16) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.IIB.PKMS.INBOUNDASN.ERROR.DETAILS') +
*  ALTDATE(2023-08-03) +
*  ALTTIME(08.14.14) +
*  CRDATE(2023-08-03) +
*  CRTIME(08.14.14) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.IIB.PKMS.INBOUNDASN.TRIGGER') +
*  ALTDATE(2023-08-03) +
*  ALTTIME(08.20.47) +
*  CRDATE(2023-08-03) +
*  CRTIME(08.20.47) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.SAP.IIB.INBOUNDASN.RLE.ERROR') +
*  ALTDATE(2023-08-03) +
*  ALTTIME(08.12.07) +
*  CRDATE(2023-08-03) +
*  CRTIME(08.12.07) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.SAP.IIB.INBOUNDASN.RLE.ERROR.DETAILS') +
*  ALTDATE(2023-08-03) +
*  ALTTIME(08.11.40) +
*  CRDATE(2023-08-03) +
*  CRTIME(08.11.40) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.SAP.IIB.INBOUNDASN.RLE.TRIGGER') +
*  ALTDATE(2023-08-03) +
*  ALTTIME(08.17.05) +
*  CRDATE(2023-08-03) +
*  CRTIME(08.17.05) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL2.VBS.RLT.RLTCUSTID.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.14) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.14) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('RTL2.VBS.RLT.RLTCUSTID.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.14) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.14) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('RTL2.VBS.RLT.RLTCUSTID.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.14) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.14) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('RTL2.VBS.RLT.RLTCUSTID.OUT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.14) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.14) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('RTL2.VBS.RLT.RTCUSTDT.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.14) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.14) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('RTL2.VBS.RLT.RTCUSTDT.IN.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.14) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.14) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('RTL2.VBS.RLT.RTCUSTDT.IN.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.14) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.14) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('RTL2.VBS.RLT.RTCUSTDT.IN.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.14) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.14) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('RTL2.VBS.RLT.RTCUSTDT.OUT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.14) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.14) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('RTL2.VBS.RLT.RTCUSTDT.RESP.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.14) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.14) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('RTL2.VBS.RLT.RTCUSTDT.RESP.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.14) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.14) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('SAMPLE.FINPOST.IN') +
*  ALTDATE(2023-06-16) +
*  ALTTIME(13.05.39) +
*  CRDATE(2023-06-16) +
*  CRTIME(13.05.39) +
*  CURDEPTH(4) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAMPLE.OUTPUT.SHPREQ.OUT') +
*  ALTDATE(2023-05-16) +
*  ALTTIME(09.44.22) +
*  CRDATE(2023-05-16) +
*  CRTIME(09.44.22) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAMPLE.ZETA') +
*  ALTDATE(2023-12-05) +
*  ALTTIME(06.21.13) +
*  CRDATE(2023-12-05) +
*  CRTIME(06.21.13) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAMPLE1.Q') +
*  ALTDATE(2023-12-11) +
*  ALTTIME(06.30.48) +
*  CRDATE(2023-12-08) +
*  CRTIME(04.42.14) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   MAXMSGL(5948000) +
   REPLACE
DEFINE QLOCAL('SAMPLE1.QUEUE') +
*  ALTDATE(2023-12-08) +
*  ALTTIME(04.45.07) +
*  CRDATE(2023-12-08) +
*  CRTIME(04.45.07) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAMPLEINPUT') +
*  ALTDATE(2023-12-05) +
*  ALTTIME(06.18.16) +
*  CRDATE(2023-11-09) +
*  CRTIME(08.23.18) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAMPLETEST.IN') +
*  ALTDATE(2023-12-08) +
*  ALTTIME(04.58.23) +
*  CRDATE(2023-12-08) +
*  CRTIME(04.58.23) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAP.AR.IIB.ARSUPPLIER.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.14) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.14) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('SAP.AR.IIB.ARSUPPLIER.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.14) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.14) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('SAP.AR.IIB.ARSUPPLIER.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.14) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.14) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('SAP.AR.IIB.ARSUPPLIER.IN.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.14) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.14) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('SAP.IIB.AR.ARUPDATEVENDOR.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.14) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.14) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('SAP.IIB.AR.ARUPDATEVENDOR.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.14) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.14) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('SAP.IIB.AR.ARUPDATEVENDOR.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.14) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.14) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('SAP.IIB.AR.ARUPDATEVENDOR.OUT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.14) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.14) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('SAP.IIB.D365.ARCREATEVENDOR.ERROR') +
*  ALTDATE(2023-08-17) +
*  ALTTIME(04.40.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.14) +
*  CURDEPTH(12) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('SAP.IIB.D365.ARCREATEVENDOR.ERROR.DETAILS') +
*  ALTDATE(2023-08-17) +
*  ALTTIME(04.41.03) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.14) +
*  CURDEPTH(12) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('SAP.IIB.D365.ARCREATEVENDOR.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.14) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.14) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('SAP.IIB.D365.ARCREATEVENDOR.OUT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.15) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('SAP.IIB.D365.ARCREATEVENDOR.SPLIT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.15) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('SAP.LETSFLO.ACE.ASSETMGMNT.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.15) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAP.LETSFLO.ACE.ASSETMGMNT.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.15) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAP.LETSFLO.ACE.ASSETMGMNT.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.15) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAP.LETSFLO.ACE.ASSETMGMNT.IN.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.15) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAP.SAP.ARIBA.REQUI.EU.IN') +
*  ALTDATE(2024-02-14) +
*  ALTTIME(00.27.03) +
*  CRDATE(2024-02-14) +
*  CRTIME(00.27.03) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAP.SAP.ARIBA.REQUI.EU.INTER') +
*  ALTDATE(2024-02-14) +
*  ALTTIME(00.27.46) +
*  CRDATE(2024-02-14) +
*  CRTIME(00.27.46) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAP.SAP.ARIBA.REQUI.EU.INTER.LOG') +
*  ALTDATE(2024-02-14) +
*  ALTTIME(00.28.39) +
*  CRDATE(2024-02-14) +
*  CRTIME(00.28.39) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAP.SAP.ARIBA.REQUI.US.ERROR') +
*  ALTDATE(2024-02-06) +
*  ALTTIME(10.18.47) +
*  CRDATE(2024-02-06) +
*  CRTIME(10.18.47) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAP.SAP.ARIBA.REQUI.US.ERROR.DETAILS') +
*  ALTDATE(2024-02-06) +
*  ALTTIME(10.18.28) +
*  CRDATE(2024-02-06) +
*  CRTIME(10.18.28) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAP.SAP.ARIBA.REQUI.US.IN') +
*  ALTDATE(2024-02-06) +
*  ALTTIME(10.17.20) +
*  CRDATE(2024-02-06) +
*  CRTIME(10.17.20) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAP.SAP.ARIBA.REQUI.US.INTER') +
*  ALTDATE(2024-02-06) +
*  ALTTIME(10.17.57) +
*  CRDATE(2024-02-06) +
*  CRTIME(10.17.57) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAP.SAP.ARIBA.REQUI.US.INTER.ERROR') +
*  ALTDATE(2024-02-06) +
*  ALTTIME(10.20.19) +
*  CRDATE(2024-02-06) +
*  CRTIME(10.20.19) +
*  CURDEPTH(5) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAP.SAP.ARIBA.REQUI.US.INTER.ERROR.DETAILS') +
*  ALTDATE(2024-02-06) +
*  ALTTIME(10.20.03) +
*  CRDATE(2024-02-06) +
*  CRTIME(10.20.03) +
*  CURDEPTH(5) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAP.SAP.ARIBA.REQUI.US.INTER.LOG') +
*  ALTDATE(2024-02-06) +
*  ALTTIME(10.19.38) +
*  CRDATE(2024-02-06) +
*  CRTIME(10.19.38) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAP.TMP.ND.WD.SAP.DATA.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.15) +
*  CURDEPTH(4) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAP.TMP.ND.WD.SAP.DATA.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.15) +
*  CURDEPTH(4) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAP.TMP.ND.WD.SAP.DATA.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.15) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAP.TMP.ND.WD.SAP.DATA.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.15) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SRM.PROVIDER.FACTORY.BENF.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.15) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('SRM.PROVIDER.FACTORY.BENF.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.15) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('SRM.PROVIDER.FACTORY.BENF.INPUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.15) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('SRM.PROVIDER.FACTORY.BENF.LOG1') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.15) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('SRM.PROVIDER.FACTORY.BENF.LOG2') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.15) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('SRM.PROVIDER.PARTNER.JSON.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.15) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.ACCOUNTING.QUEUE') +
   ACCTQ(OFF) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.03) +
   DESCR('IBM MQ Administration Accounting Queue') +
   DISTL(NO) +
   MAXDEPTH(3000) +
   STATQ(OFF) +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.ACTIVITY.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.03) +
   DESCR('IBM MQ Administration Activity Queue') +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.CHANNEL.EVENT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.03) +
   DEFSOPT(EXCL) +
   DESCR('IBM MQ Channel Related Event Queue') +
   DISTL(NO) +
   MAXDEPTH(3000) +
   MAXMSGL(9000) +
   NOSHARE +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.COMMAND.EVENT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.04) +
   DEFSOPT(EXCL) +
   DESCR('IBM MQ Command Event Queue') +
   DISTL(NO) +
   MAXDEPTH(5000) +
   NOSHARE +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.COMMAND.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.02) +
   DEFSOPT(EXCL) +
   DESCR('IBM MQ Administration Command Queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(3000) +
   MAXMSGL(32762) +
*  OPPROCS(10) +
   NOSHARE +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.CONFIG.EVENT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.04) +
   DEFSOPT(EXCL) +
   DESCR('IBM MQ Configuration Event Queue') +
   DISTL(NO) +
   MAXDEPTH(5000) +
   NOSHARE +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.LOGGER.EVENT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.03) +
   DEFSOPT(EXCL) +
   DESCR('IBM MQ Logger Event Queue') +
   DISTL(NO) +
   MAXDEPTH(3000) +
   MAXMSGL(9000) +
   NOSHARE +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.PERFM.EVENT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.03) +
   DEFSOPT(EXCL) +
   DESCR('IBM MQ Performance Related Event Queue') +
   DISTL(NO) +
   MAXDEPTH(3000) +
   MAXMSGL(9000) +
   NOSHARE +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.PUBSUB.EVENT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.04) +
   DESCR('IBM MQ Publish/Subscribe Related Event Queue') +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.QMGR.EVENT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.02) +
*  CURDEPTH(1) +
   DEFSOPT(EXCL) +
   DESCR('IBM MQ Queue Manager Related Event Queue') +
   DISTL(NO) +
   MAXDEPTH(3000) +
   MAXMSGL(32762) +
   NOSHARE +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.STATISTICS.QUEUE') +
   ACCTQ(OFF) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.03) +
   DESCR('IBM MQ Administration Statistics Queue') +
   DISTL(NO) +
   MAXDEPTH(3000) +
   STATQ(OFF) +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.TRACE.ACTIVITY.QUEUE') +
   ACCTQ(OFF) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.04) +
   DESCR('IBM MQ Administration Trace Activity Queue') +
   DISTL(NO) +
   MAXDEPTH(3000) +
   STATQ(OFF) +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.TRACE.ROUTE.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.03) +
   DESCR('IBM MQ Administration Trace Route Queue') +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SYSTEM.AMQP.COMMAND.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.05) +
   DEFSOPT(EXCL) +
   DESCR('IBM MQ Administration Command Queue') +
   DISTL(NO) +
   MAXDEPTH(3000) +
   MAXMSGL(32762) +
   NOSHARE +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.AUTH.DATA.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.02) +
*  CURDEPTH(1681) +
   DESCR('IBM MQ Authority Data Queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
*  OPPROCS(1) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.ADMIN.STREAM') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.04) +
   DEFPSIST(YES) +
   DESCR('Admin stream for queued Pub/Sub interface') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   MSGDLVSQ(FIFO) +
*  OPPROCS(1) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.CONTROL.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.04) +
   DEFPSIST(YES) +
   DESCR('Control queue for queued Pub/Sub interface') +
   DISTL(NO) +
*  IPPROCS(3) +
   MAXDEPTH(5000) +
   MSGDLVSQ(FIFO) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.DEFAULT.STREAM') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.04) +
   DEFPSIST(YES) +
   DESCR('Default stream for queued Pub/Sub interface') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   MSGDLVSQ(FIFO) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.INTER.BROKER.COMMUNICATIONS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.12) +
   DEFPSIST(YES) +
   DESCR('MQSeries Publish/Subscribe internal reply queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
   MAXMSGL(104857600) +
   MSGDLVSQ(FIFO) +
   NOSHARE +
   REPLACE
DEFINE QLOCAL('SYSTEM.CHANNEL.INITQ') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.02) +
   DEFSOPT(EXCL) +
   DESCR('IBM MQ Channel Initiation Queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(1000) +
   MAXMSGL(2000) +
   NOSHARE +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.CHANNEL.SYNCQ') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.02) +
*  CURDEPTH(7) +
   DEFPSIST(YES) +
   DESCR('IBM MQ Channel Sync Queue') +
   DISTL(NO) +
   MAXDEPTH(20000) +
   MAXMSGL(20000) +
   QDEPTHLO(40) +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.CHLAUTH.DATA.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.04) +
*  CURDEPTH(9) +
   DESCR('IBM MQ Channel Authentication Data Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('SYSTEM.CICS.INITIATION.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.02) +
   DESCR('IBM MQ Default CICS Initiation queue') +
   DISTL(NO) +
   MAXDEPTH(1000) +
   MAXMSGL(1000) +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.CLUSTER.COMMAND.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.03) +
   DESCR('IBM MQ Cluster Command Queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
   REPLACE
DEFINE QLOCAL('SYSTEM.CLUSTER.HISTORY.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.04) +
   DESCR('IBM MQ Cluster History Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   REPLACE
DEFINE QLOCAL('SYSTEM.CLUSTER.REPOSITORY.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.03) +
*  CURDEPTH(778) +
   DESCR('IBM MQ Cluster Repository Queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
*  OPPROCS(1) +
   REPLACE
DEFINE QMODEL('SYSTEM.CLUSTER.TRANSMIT.MODEL.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.04) +
   DEFTYPE(PERMDYN) +
   DESCR('IBM MQ Cluster Transmission Model Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   SHARE +
   USAGE(XMITQ) +
   REPLACE
DEFINE QLOCAL('SYSTEM.CLUSTER.TRANSMIT.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.03) +
   DESCR('IBM MQ Cluster Transmission Queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
   TRIGGER +
*  OPPROCS(1) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QLOCAL('SYSTEM.DDELAY.LOCAL.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.05) +
   DEFSOPT(EXCL) +
   DESCR('IBM MQ Deferred Delivery Queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
   MSGDLVSQ(FIFO) +
   QDPMAXEV(DISABLED) +
   NOSHARE +
   REPLACE
DEFINE QLOCAL('SYSTEM.DEAD.LETTER.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.02) +
   DESCR('IBM MQ Default Dead Letter Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QALIAS('SYSTEM.DEFAULT.ALIAS.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
   REPLACE
DEFINE QLOCAL('SYSTEM.DEFAULT.INITIATION.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.02) +
   DESCR('IBM MQ Default Initiation Queue') +
   DISTL(NO) +
   MAXDEPTH(1000) +
   MAXMSGL(1000) +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.DEFAULT.LOCAL.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.02) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QMODEL('SYSTEM.DEFAULT.MODEL.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.02) +
   DEFSOPT(EXCL) +
   DEFTYPE(TEMPDYN) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QREMOTE('SYSTEM.DEFAULT.REMOTE.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
   XMITQ(' ') +
   REPLACE
DEFINE QLOCAL('SYSTEM.DOTNET.XARECOVERY.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.04) +
   DEFPSIST(YES) +
   DESCR('IBM MQ .NET XA Recovery Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   REPLACE
DEFINE QMODEL('SYSTEM.DURABLE.MODEL.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.03) +
   DEFTYPE(PERMDYN) +
   DESCR('Model for managed queues for durable subscriptions') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   SHARE +
   REPLACE
DEFINE QLOCAL('SYSTEM.DURABLE.SUBSCRIBER.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.03) +
*  CURDEPTH(1) +
   DESCR('Store of information about durable subscribers') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('SYSTEM.HIERARCHY.STATE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.04) +
*  CURDEPTH(2) +
   DEFPSIST(YES) +
   DESCR('MQ Publish/Subscribe Distributed Pub/sub hierarchy relationship') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   REPLACE
DEFINE QLOCAL('SYSTEM.INTER.QMGR.CONTROL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.04) +
   DEFPSIST(YES) +
   DESCR('MQ Publish/Subscribe Distributed Pub/sub Control Queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
   REPLACE
DEFINE QLOCAL('SYSTEM.INTER.QMGR.FANREQ') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.04) +
   DEFPSIST(YES) +
   DESCR('MQ Publish/Subscribe Distributed Pub/sub proxy-sub request queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
*  OPPROCS(1) +
   REPLACE
DEFINE QLOCAL('SYSTEM.INTER.QMGR.PUBS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.04) +
   DEFPSIST(YES) +
   DESCR('MQ Publish/Subscribe Distributed Pub/sub Publications') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
   REPLACE
DEFINE QLOCAL('SYSTEM.INTERNAL.REPLY.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.04) +
   DESCR('IBM MQ Internal Reply Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   MAXMSGL(32762) +
   REPLACE
DEFINE QLOCAL('SYSTEM.INTERNAL.REQUEST.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.05) +
   DESCR('IBM MQ Internal Request Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   MAXMSGL(32762) +
   REPLACE
DEFINE QMODEL('SYSTEM.JMS.TEMPQ.MODEL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.04) +
   DEFTYPE(TEMPDYN) +
   DESCR('Model for JMS temporary queues') +
   DISTL(NO) +
   MAXDEPTH(5000) +
   MAXMSGL(104857600) +
   SHARE +
   REPLACE
DEFINE QLOCAL('SYSTEM.MESSAGE.ASSOCIATION.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.15) +
   DESCR('IBM MQ Message Association Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   REPLACE
DEFINE QMODEL('SYSTEM.MQEXPLORER.REPLY.MODEL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.03) +
   DEFREADA(YES) +
   DEFSOPT(EXCL) +
   DEFTYPE(TEMPDYN) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QMODEL('SYSTEM.MQSC.REPLY.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.02) +
   DEFSOPT(EXCL) +
   DEFTYPE(TEMPDYN) +
   DESCR('IBM MQ MQSC Reply Queue') +
   DISTL(NO) +
   MAXDEPTH(3000) +
   MAXMSGL(32762) +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QMODEL('SYSTEM.NDURABLE.MODEL.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.03) +
   DEFREADA(YES) +
   DEFTYPE(TEMPDYN) +
   DESCR('Model for managed queues for non durable subscriptions') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   SHARE +
   REPLACE
DEFINE QLOCAL('SYSTEM.PENDING.DATA.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.03) +
   DEFSOPT(EXCL) +
   DESCR('IBM MQ Deferred Message Queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
   MSGDLVSQ(FIFO) +
*  OPPROCS(1) +
   QDPMAXEV(DISABLED) +
   NOSHARE +
   REPLACE
DEFINE QLOCAL('SYSTEM.PROTECTION.ERROR.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.04) +
   DEFPSIST(YES) +
   DESCR('IBM MQ Message Protection Error Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   REPLACE
DEFINE QLOCAL('SYSTEM.PROTECTION.POLICY.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.05) +
   DEFPSIST(YES) +
   DESCR('IBM MQ Message Protection Policy Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   REPLACE
DEFINE QLOCAL('SYSTEM.REST.REPLY.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.05) +
   DESCR('IBM MQ REST Reply Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   QDPMAXEV(DISABLED) +
   REPLACE
DEFINE QLOCAL('SYSTEM.RETAINED.PUB.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.03) +
*  CURDEPTH(3045) +
   DESCR('Store of retained publications') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   MAXMSGL(104857600) +
   MSGDLVSQ(FIFO) +
   REPLACE
DEFINE QLOCAL('SYSTEM.SELECTION.EVALUATION.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.04) +
   DESCR('IBM MQ Selection Evaluation Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('SYSTEM.SELECTION.VALIDATION.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.53.04) +
   DESCR('IBM MQ Selection Validation Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   REPLACE
DEFINE QLOCAL('Sample.out') +
*  ALTDATE(2023-05-17) +
*  ALTTIME(10.30.41) +
*  CRDATE(2023-05-17) +
*  CRTIME(10.30.41) +
*  CURDEPTH(6) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SampleError.Q') +
*  ALTDATE(2023-05-29) +
*  ALTTIME(23.44.43) +
*  CRDATE(2023-05-29) +
*  CRTIME(23.44.43) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SampleMsgId.IN') +
*  ALTDATE(2023-07-05) +
*  ALTTIME(06.54.48) +
*  CRDATE(2023-07-05) +
*  CRTIME(06.54.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SampleMsgId.OUT') +
*  ALTDATE(2023-07-05) +
*  ALTTIME(06.56.01) +
*  CRDATE(2023-07-05) +
*  CRTIME(06.56.01) +
*  CURDEPTH(28) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST') +
*  ALTDATE(2023-06-06) +
*  ALTTIME(05.54.04) +
*  CRDATE(2023-06-06) +
*  CRTIME(05.54.04) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.ARAVO.SAP.INP') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.15) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.ARAVO.SAP.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.15) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.15) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.ARAVO.SAP.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.16) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.16) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.BIEVENTS') +
*  ALTDATE(2023-06-09) +
*  ALTTIME(06.00.17) +
*  CRDATE(2023-06-09) +
*  CRTIME(06.00.17) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.FINPOST.IN') +
*  ALTDATE(2023-05-09) +
*  ALTTIME(08.23.57) +
*  CRDATE(2023-05-09) +
*  CRTIME(08.23.57) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.IN') +
*  ALTDATE(2023-07-27) +
*  ALTTIME(10.32.58) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.16) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('TEST.IN.SSB') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.16) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.16) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.INTER') +
*  ALTDATE(2023-05-09) +
*  ALTTIME(08.06.09) +
*  CRDATE(2023-05-09) +
*  CRTIME(08.06.09) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.JWT') +
*  ALTDATE(2023-11-24) +
*  ALTTIME(03.13.53) +
*  CRDATE(2023-11-24) +
*  CRTIME(03.13.53) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.JWT.OUT') +
*  ALTDATE(2023-11-24) +
*  ALTTIME(03.14.05) +
*  CRDATE(2023-11-24) +
*  CRTIME(03.14.05) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.OMSEU') +
*  ALTDATE(2024-01-09) +
*  ALTTIME(01.25.11) +
*  CRDATE(2024-01-09) +
*  CRTIME(01.25.11) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.OUT') +
*  ALTDATE(2023-09-19) +
*  ALTTIME(10.49.07) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.16) +
*  CURDEPTH(9) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('TEST.OUT.PMC') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.16) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.16) +
   DISTL(NO) +
   MAXDEPTH(1000000) +
   REPLACE
DEFINE QLOCAL('TEST.OUT.SSB') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.16) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.16) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QALIAS('TEST.QA') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.16) +
   TARGET('OMSRLEU.OMS.SFCC.RTAM.DEL.EU.OUT') +
   REPLACE
DEFINE QLOCAL('TEST.RS.QA.IN.ND') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.16) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.16) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.RS.QA.OUT.ND') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.16) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.16) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TESTIN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.16) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.16) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST_IN') +
*  ALTDATE(2023-07-11) +
*  ALTTIME(10.57.54) +
*  CRDATE(2023-07-11) +
*  CRTIME(10.57.54) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST_JSON') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.16) +
   BOQNAME('TEST_JSON_BOQ') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.16) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST_JSON_BOQ') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.16) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.16) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST_JSON_OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.16) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.16) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST_MQ_IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.16) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.51.16) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST_OMS_OUT') +
*  ALTDATE(2023-07-28) +
*  ALTTIME(09.39.28) +
*  CRDATE(2023-07-27) +
*  CRTIME(13.34.23) +
   DISTL(NO) +
   MAXDEPTH(600000) +
   MAXMSGL(104857599) +
   REPLACE
DEFINE QLOCAL('TEST_OUT') +
*  ALTDATE(2023-07-27) +
*  ALTTIME(10.33.20) +
*  CRDATE(2023-07-11) +
*  CRTIME(10.57.11) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('TEST_OUT_1') +
*  ALTDATE(2023-07-27) +
*  ALTTIME(10.33.35) +
*  CRDATE(2023-07-27) +
*  CRTIME(10.29.53) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('Test_IN.Queue') +
*  ALTDATE(2023-12-18) +
*  ALTTIME(07.48.37) +
*  CRDATE(2023-12-18) +
*  CRTIME(07.48.37) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('Test_OUT.Queue') +
*  ALTDATE(2023-12-18) +
*  ALTTIME(07.49.17) +
*  CRDATE(2023-12-18) +
*  CRTIME(07.49.17) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('WORKDAYTEST') +
*  ALTDATE(2024-01-24) +
*  ALTTIME(04.16.07) +
*  CRDATE(2024-01-24) +
*  CRTIME(04.16.07) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('sample.get') +
*  ALTDATE(2023-12-11) +
*  ALTTIME(06.30.17) +
*  CRDATE(2023-10-11) +
*  CRTIME(07.55.29) +
*  CURDEPTH(3) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   MAXMSGL(5948000) +
   REPLACE
DEFINE NAMELIST('SYSTEM.DEFAULT.NAMELIST') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.16) +
   REPLACE
DEFINE NAMELIST('SYSTEM.QPUBSUB.QUEUE.NAMELIST') +
*  NAMCOUNT(2) +
   NAMES('SYSTEM.BROKER.DEFAULT.STREAM' +
        ,'SYSTEM.BROKER.ADMIN.STREAM') +
   DESCR('A list of queues for the queued Pub/Sub interface to monitor') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.16) +
   REPLACE
DEFINE NAMELIST('SYSTEM.QPUBSUB.SUBPOINT.NAMELIST') +
*  NAMCOUNT(1) +
   NAMES('SYSTEM.BROKER.DEFAULT.SUBPOINT') +
   DESCR('Topic objects list used to match to RFH2 subscription points') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.16) +
   REPLACE
DEFINE PROCESS('SYSTEM.DEFAULT.PROCESS') +
   APPLTYPE(UNIX) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.16) +
   REPLACE
DEFINE CHANNEL('ADMIN.SVRCONN') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.16) +
   DESCR('Admin channel') +
   MCAUSER('mqm') +
   SHARECNV(1) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('DEVOPS.IIBA2HD01') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.16) +
   SHARECNV(1) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('DP.OMSRLCA.SVRCONN') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2023-04-19) +
*  ALTTIME(13.51.32) +
   SHARECNV(1) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('IIB10.DEV.CLNTCONN') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.16) +
   SHARECNV(1) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('LGS.ADMIN.SVRCONN') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.16) +
   SHARECNV(1) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('MFT.ADMIN.SVRCONN') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.16) +
   MAXMSGL(104857600) +
   MCAUSER('xmftd1pb') +
   SHARECNV(1) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('SYSTEM.ADMIN.SVRCONN') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.16) +
   MAXMSGL(104857600) +
   SHARECNV(1) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('SYSTEM.AUTO.RECEIVER') +
   CHLTYPE(RCVR) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.16) +
   DESCR('Auto-defined by') +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('SYSTEM.AUTO.SVRCONN') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.16) +
   DESCR('Auto-defined by') +
   SHARECNV(1) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.AMQP') +
   CHLTYPE(AMQP) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.16) +
   PORT(5672) +
   TPROOT('SYSTEM.BASE.TOPIC') +
   TMPMODEL('SYSTEM.DEFAULT.MODEL.QUEUE') +
   TMPQPRFX('AMQP.*') +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.CLUSRCVR') +
   CHLTYPE(CLUSRCVR) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.16) +
   MCATYPE(THREAD) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.CLUSSDR') +
   CHLTYPE(CLUSSDR) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.16) +
   MCATYPE(THREAD) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.RECEIVER') +
   CHLTYPE(RCVR) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.16) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.REQUESTER') +
   CHLTYPE(RQSTR) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.16) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.SENDER') +
   CHLTYPE(SDR) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.16) +
   TRPTYPE(TCP) +
   XMITQ(' ') +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.SERVER') +
   CHLTYPE(SVR) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.16) +
   TRPTYPE(TCP) +
   XMITQ(' ') +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.SVRCONN') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.16) +
   SHARECNV(1) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('TIVOLI.SVRCONN') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.16) +
   DESCR('for monitoring through tivoli') +
   MCAUSER('xmftd1pb') +
   SHARECNV(1) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('TO.IIBA2HD01') +
   CHLTYPE(CLUSRCVR) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.16) +
   CLUSTER('MQCLUS_DEV') +
   CONNAME('iiba2hd01.poloralphlauren.com(3040)') +
   MAXMSGL(104857600) +
   MCATYPE(THREAD) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('TO.REPA2HD01') +
   CHLTYPE(CLUSSDR) +
*  ALTDATE(2023-02-27) +
*  ALTTIME(06.59.43) +
   CLUSTER('MQCLUS_DEV') +
   CONNAME('repa2hd01.poloralphlauren.com(3025)') +
   MCATYPE(THREAD) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('IIB10.DEV.CLNTCONN') +
   CHLTYPE(CLNTCONN) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.16) +
   CONNAME('iiba2hd01.poloralphlauren.com(3040)') +
   DESCR('Client-connection to for Integration Node') +
   QMNAME('IIBA1QM01') +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('LGS.ADMIN.SVRCONN') +
   CHLTYPE(CLNTCONN) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.16) +
   CONNAME('10.10.250.217(3040)') +
   DESCR('Client-connection to for OMS Digital') +
   QMNAME('IIBA1QM01') +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.CLNTCONN') +
   CHLTYPE(CLNTCONN) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.17) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE AUTHINFO('SYSTEM.DEFAULT.AUTHINFO.IDPWLDAP') +
   AUTHTYPE(IDPWLDAP) +
   ADOPTCTX(YES) +
   CONNAME(' ') +
   CHCKCLNT(REQUIRED) +
   SHORTUSR(' ') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.17) +
   REPLACE
DEFINE AUTHINFO('SYSTEM.DEFAULT.AUTHINFO.IDPWOS') +
   AUTHTYPE(IDPWOS) +
   ADOPTCTX(YES) +
   CHCKCLNT(NONE) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.17) +
   REPLACE
DEFINE AUTHINFO('SYSTEM.DEFAULT.AUTHINFO.OCSP') +
   AUTHTYPE(OCSP) +
   OCSPURL(' ') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.17) +
   REPLACE
DEFINE AUTHINFO('SYSTEM.DEFAULT.AUTHINFO.CRLLDAP') +
   AUTHTYPE(CRLLDAP) +
   CONNAME(' ') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.17) +
   REPLACE
DEFINE LISTENER('DEVOPS.LISTENER.TCP.1') +
   TRPTYPE(TCP) +
   CONTROL(QMGR) +
   PORT(1340) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.17) +
   REPLACE
DEFINE LISTENER('DEVOPSTESTING') +
   TRPTYPE(TCP) +
   CONTROL(QMGR) +
   PORT(3040) +
   DESCR('DEVOPS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.17) +
   REPLACE
DEFINE LISTENER('SYSTEM.DEFAULT.LISTENER.TCP') +
   TRPTYPE(TCP) +
   CONTROL(MANUAL) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.17) +
   REPLACE
DEFINE LISTENER('SYSTEM.LISTENER.TCP.1') +
   TRPTYPE(TCP) +
   CONTROL(QMGR) +
   PORT(3040) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.17) +
   REPLACE
DEFINE SERVICE('SYSTEM.AMQP.SERVICE') +
   CONTROL(QMGR) +
   SERVTYPE(SERVER) +
   STARTCMD('+MQ_INSTALL_PATH+/bin/amqp.sh') +
   STARTARG('start -m +QMNAME+ -d "+MQ_Q_MGR_DATA_PATH+/." -g "+MQ_DATA_PATH+/."') +
   STOPCMD('+MQ_INSTALL_PATH+/bin/endmqsde') +
   STOPARG('-m +QMNAME+ -n "+MQ_SERVICE_NAME+" -t AMQP') +
   STDOUT('+MQ_Q_MGR_DATA_PATH+/amqp.stdout') +
   STDERR('+MQ_Q_MGR_DATA_PATH+/amqp.stderr') +
   DESCR('Manages clients that use the AMQP protocol') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.17) +
   REPLACE
DEFINE SERVICE('SYSTEM.DEFAULT.SERVICE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.17) +
   REPLACE
DEFINE COMMINFO('SYSTEM.DEFAULT.COMMINFO.MULTICAST') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.17) +
   GRPADDR('239.0.0.0') +
   PORT(1414) +
   REPLACE
DEFINE TOPIC('DEVOPSTESTING') +
   TOPICSTR('devops testing') +
   DESCR('devops') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.17) +
   REPLACE
DEFINE TOPIC('GTMTEST') +
   TOPICSTR('$SYS/Broker/+/Monitoring/#') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.17) +
   REPLACE
DEFINE TOPIC('SYSTEM.ADMIN.TOPIC') +
   TOPICSTR('$SYS/MQ') +
   DESCR('Root topic for MQ administrative topics') +
   DURSUB(YES) +
   PUB(ENABLED) +
   SUB(ENABLED) +
   DEFPSIST(NO) +
   DEFPRTY(0) +
   DEFPRESP(SYNC) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.17) +
   PMSGDLV(ALLDUR) +
   NPMSGDLV(ALLAVAIL) +
   PUBSCOPE(QMGR) +
   SUBSCOPE(QMGR) +
   WILDCARD(BLOCK) +
   MDURMDL('SYSTEM.DURABLE.MODEL.QUEUE') +
   MNDURMDL('SYSTEM.NDURABLE.MODEL.QUEUE') +
   MCAST(DISABLED) +
   USEDLQ(YES) +
   REPLACE
DEFINE TOPIC('SYSTEM.BASE.TOPIC') +
   TOPICSTR('') +
   DESCR('Base topic for resolving attributes') +
   DURSUB(YES) +
   PUB(ENABLED) +
   SUB(ENABLED) +
   DEFPSIST(NO) +
   DEFPRTY(0) +
   DEFPRESP(SYNC) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.17) +
   PMSGDLV(ALLDUR) +
   NPMSGDLV(ALLAVAIL) +
   PUBSCOPE(ALL) +
   SUBSCOPE(ALL) +
   MDURMDL('SYSTEM.DURABLE.MODEL.QUEUE') +
   MNDURMDL('SYSTEM.NDURABLE.MODEL.QUEUE') +
   MCAST(DISABLED) +
   COMMINFO('SYSTEM.DEFAULT.COMMINFO.MULTICAST') +
   USEDLQ(YES) +
   REPLACE
DEFINE TOPIC('SYSTEM.BROKER.ADMIN.STREAM') +
   TOPICSTR('SYSTEM.BROKER.ADMIN.STREAM') +
   DESCR('Admin stream for queued Pub/Sub interface') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.17) +
   WILDCARD(BLOCK) +
   MCAST(DISABLED) +
   REPLACE
DEFINE TOPIC('SYSTEM.BROKER.DEFAULT.STREAM') +
   TOPICSTR('') +
   DESCR('Default stream for queued Pub/Sub interface') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.17) +
   WILDCARD(BLOCK) +
   MCAST(DISABLED) +
   REPLACE
DEFINE TOPIC('SYSTEM.BROKER.DEFAULT.SUBPOINT') +
   TOPICSTR('') +
   DESCR('Default RFH2 subscription point for queued Pub/Sub interface') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.17) +
   WILDCARD(BLOCK) +
   MCAST(DISABLED) +
   REPLACE
DEFINE TOPIC('SYSTEM.DEFAULT.TOPIC') +
   TOPICSTR('') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.17) +
   REPLACE
DEFINE SUB('ISDV_DEBUG2') +
   TOPICSTR('$SYS/Broker/+/Monitoring/ISDV_DEBUG2/#') +
*  DISTYPE(DEFINED) +
   DEST('GTM.ACE.LOG') +
   DESTQMGR('IIBA2HD01') +
*  SUBTYPE(ADMIN) +
   SUBUSER('xmftd1pb') +
*  CRDATE(2023-11-06) +
*  CRTIME(04:40:25) +
*  ALTDATE(2023-11-06) +
*  ALTTIME(06:41:02) +
   REPLACE
DEFINE SUB('ISDV_OPTORO') +
   TOPICSTR('$SYS/Broker/+/Monitoring/ISDV_OPTORO/#') +
*  DISTYPE(DEFINED) +
   DEST('EAI.RL.AUDITEVENT.IN') +
*  SUBTYPE(ADMIN) +
   SUBUSER('xmftd1pb') +
*  CRDATE(2023-06-21) +
*  CRTIME(05:31:15) +
*  ALTDATE(2023-06-21) +
*  ALTTIME(06:42:32) +
   REPLACE
DEFINE SUB('SYSTEM.DEFAULT.SUB') +
   TOPICSTR('') +
*  DISTYPE(DEFINED) +
*  SUBTYPE(ADMIN) +
*  CRDATE( ) +
*  CRTIME( ) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01:51:17) +
   REPLACE
DEFINE SUB('IS.OMSRLEU') +
   TOPICSTR('$SYS/Broker/+/Monitoring/IS.OMSRLEU/#') +
   TOPICOBJ('SYSTEM.DEFAULT.TOPIC') +
*  DISTYPE(DEFINED) +
   DEST('EAI.RL.AUDITEVENT.IN') +
   PUBACCT(0331303100000000000000000000000000000000000000000000000000000006) +
   DESTCORL(414D51204949424132484430312020203550635D03F20A22) +
*  SUBTYPE(ADMIN) +
   SUBUSER('mqsystem') +
*  CRDATE(2023-02-25) +
*  CRTIME(01:51:17) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01:51:17) +
   REPLACE
DEFINE SUB('IS.OMSRLEU1') +
   TOPICSTR('$SYS/Broker/IIBD02HA1/Monitoring/IS.OMSRLEU/#') +
   TOPICOBJ('SYSTEM.DEFAULT.TOPIC') +
*  DISTYPE(DEFINED) +
   DEST('EAI.RL.AUDITEVENT.IN') +
   PUBACCT(0335303400000000000000000000000000000000000000000000000000000006) +
   DESTCORL(414D5120494942413248443031202020545A045E65BDE822) +
*  SUBTYPE(ADMIN) +
   SUBUSER('xmftd1pb') +
*  CRDATE(2023-02-25) +
*  CRTIME(01:51:17) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01:51:17) +
   REPLACE
SET CHLAUTH('ADMIN.SVRCONN') +
   TYPE(ADDRESSMAP) +
   ADDRESS('10.98.220.235') +
   USERSRC(CHANNEL) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.17) +
   ACTION(REPLACE)
SET CHLAUTH('ADMIN.SVRCONN') +
   TYPE(BLOCKUSER) +
   USERLIST('nobody') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.17) +
   ACTION(REPLACE)
SET CHLAUTH('DEVOPS.IIBA2HD01') +
   TYPE(ADDRESSMAP) +
   ADDRESS('10.203.10.69') +
   MCAUSER('azureadmin') +
   USERSRC(MAP) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.17) +
   ACTION(REPLACE)
SET CHLAUTH('DEVOPS.IIBA2HD01') +
   TYPE(BLOCKUSER) +
   USERLIST('NOBODY') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.17) +
   ACTION(REPLACE)
SET CHLAUTH('IIB10.DEV.CLNTCONN') +
   TYPE(USERMAP) +
   DESCR('Allow iibadm admin') +
   ADDRESS('*.*.*.*') +
   CLNTUSER('iibadm') +
   MCAUSER('iibadm') +
   USERSRC(MAP) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.17) +
   ACTION(REPLACE)
SET CHLAUTH('IIB10.DEV.CLNTCONN') +
   TYPE(BLOCKUSER) +
   DESCR('Rule to override *MQADMIN blockuser on this channel') +
   USERLIST('nobody') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.17) +
   ACTION(REPLACE)
SET CHLAUTH('LGS.ADMIN.SVRCONN') +
   TYPE(USERMAP) +
   ADDRESS('*.*.*.*') +
   CLNTUSER('xmqq1lg') +
   MCAUSER('xmqq1lg') +
   USERSRC(MAP) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.17) +
   ACTION(REPLACE)
SET CHLAUTH('LGS.ADMIN.SVRCONN') +
   TYPE(BLOCKUSER) +
   USERLIST('*whatever') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.17) +
   ACTION(REPLACE)
SET CHLAUTH('MFT.ADMIN.SVRCONN') +
   TYPE(ADDRESSMAP) +
   DESCR('Allow xmftd1pb admin') +
   ADDRESS('*.*.*.*') +
   MCAUSER('xmftd1pb') +
   USERSRC(MAP) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.17) +
   ACTION(REPLACE)
SET CHLAUTH('MFT.ADMIN.SVRCONN') +
   TYPE(BLOCKUSER) +
   DESCR('Rule to override *MQADMIN blockuser on this channel') +
   USERLIST('nobody') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.17) +
   ACTION(REPLACE)
SET CHLAUTH('SYSTEM.ADMIN.SVRCONN') +
   TYPE(ADDRESSMAP) +
   ADDRESS('10.98.*.*') +
   MCAUSER('xmftd1pb') +
   USERSRC(MAP) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.17) +
   ACTION(REPLACE)
SET CHLAUTH('SYSTEM.ADMIN.SVRCONN') +
   TYPE(ADDRESSMAP) +
   ADDRESS('*.*.*.*') +
   MCAUSER('xmftd1mq') +
   USERSRC(MAP) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.17) +
   ACTION(REPLACE)
SET CHLAUTH('SYSTEM.ADMIN.SVRCONN') +
   TYPE(ADDRESSMAP) +
   DESCR('Default rule to allow MQ Explorer access') +
   ADDRESS('*') +
   USERSRC(CHANNEL) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.17) +
   ACTION(REPLACE)
SET CHLAUTH('SYSTEM.ADMIN.SVRCONN') +
   TYPE(BLOCKUSER) +
   USERLIST('*whatever') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.17) +
   ACTION(REPLACE)
SET CHLAUTH('TIVOLI.SVRCONN') +
   TYPE(ADDRESSMAP) +
   ADDRESS('10.98.22.232') +
   USERSRC(CHANNEL) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.17) +
   ACTION(REPLACE)
SET CHLAUTH('TIVOLI.SVRCONN') +
   TYPE(BLOCKUSER) +
   USERLIST('nobody') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.17) +
   ACTION(REPLACE)
SET CHLAUTH('SYSTEM.*') +
   TYPE(ADDRESSMAP) +
   DESCR('Default rule to disable all SYSTEM channels') +
   ADDRESS('*') +
   USERSRC(NOACCESS) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.17) +
   ACTION(REPLACE)
SET CHLAUTH('*') +
   TYPE(BLOCKUSER) +
   DESCR('Default rule to disallow privileged users') +
   USERLIST('*MQADMIN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.51.17) +
   ACTION(REPLACE)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD011SKU.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.WMS.SHIPREQUEST.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.CODE.ORDERFEED.ORDER.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.CHUBINVPURCH.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SSHEET.SHIPUPD.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.LGS.RTV.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.OPP.ORDERCREATE.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.PMC.RS.TMPTBD030.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.FF.OMS.RETURNORDER.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.ORDACK.REQ.CM.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IA.IP.ALLOCRSLT.NA.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.VMS.O9.SUPPL.CORP.ASS.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.UPS.OMS.EDISHPTRACK.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OPT.SAP.OUTBOUNDASN.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.PLM.RS.TMPTBD023.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.FF.FEEDRTV.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.INTER.BROKER.COMMUNICATIONS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.GCD.ORDCRTUPD.NXTDAY.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAMPLE.FINPOST.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.GFE.NUO.BASECURRENCY.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.INVDSTS.RL.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.ADMIN.STREAM') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAMPLE1.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.IA.DELTAINV.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SFCC.SDSTRINV.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.INVFSTS.RL.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.SAP.IIB.TMPTBD010.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.HDC.GESHIPREQ.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.CHUBINVPURCH.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SRM.PROVIDER.FACTORY.BENF.LOG2') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SFCC.RTAM.EOD.NONEU.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.ORDERUPDATE.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.OMS.TMPTBD014.OUT_TEMP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.GLC.RS.TMPTBD022.OUT_DEV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.O9.STYLEVARIANT.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.EVRYTHNG.MATMAS05') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.BI.OPT.ITEMFEED.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.GFE.O9.PROJ.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.DD.SDORDREQ.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.GCD.ORDCRTUPD.BUYER.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BI.ORDERUPDATE.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RRF.SNOW.ITIM') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SRM.PROVIDER.FACTORY.BENF.INPUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.WRKLST.CYCLIC.NA.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SRM.PROVIDER.FACTORY.BENF.LOG1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.GFE.TMPTBD026.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.CHUB.OMS.VNDRUNITCST.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SFCC.PRICEBOOK.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.UNMADE.ORDERRET.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.INVF.RL.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.OMS.ORDERCREATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.ZETA.ORDNOTIFYEMAIL.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL2.VBS.RLT.RLTCUSTID.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSSAP.IIB.OMS.WHDEMFULL.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSSAP.IIB.OMS.EUDCINV.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SFCC.RTAM.DEL.UK.INTER.DATA') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPHOLDORD.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FF.FINPOST.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.FINPOST.NXTDAY') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.INVFSTS.RL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.ANA.TMPTBD020.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IN2') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TIVOLI.SVRCONN') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('OMSRLNA.WMS.OMS.SHIPCONFIRM.SAMPLE.GET') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADAPT.IIB.SAP.ARCREATEVENDOR.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAP.IIB.AR.ARUPDATEVENDOR.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.CLUSRCVR') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.IP.TMPTBD003EU.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLCA.SFCC.OMS.ORDCREDUP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL2.VBS.RLT.RTCUSTDT.RESP.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.DD.OMS.SDDLVNOTIF.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.WRKLST.FULL.NA.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.GCD.ORDCRTUPD.NXTDAY.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.INVD.CM.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.DD.SDORDREQ.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.PMC.OMS.CBSPRICESHEET.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.MQSC.REPLY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.INVF.CM.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD021.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.OQ4.ORDERCREATE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.HDC.OMS.GEDCINVFULL.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.FF.OMS.ORDERCREATE.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.CHUBINVPURCH.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLCA.WMS.OMS.SHIPCONFIRM.TRIGGER.DUP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.GEFINPOST.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPCAPCTYSTS.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPRCPTSTATUS.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IIB.ORDEVTDUP.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.FF.OMS.ORDERCANCEL.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL2.VBS.RLT.RLTCUSTID.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.OMS.ORDCREDUP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.WMS.OMS.SHIPCONFIRM.TRIGGER.DUP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.INVD.RL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADMIN.SVRCONN') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.ONORDR.NA.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.FORTER.ORDUPDATE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.GEFINPOSTME.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.IA.DELTAINV.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FINPOST.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.UNMADE.ORDERCRT.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.RS.IIB.ROUTING.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.ORDACK.REQ.CM.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.ZETA.ORDERNOTIFY.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.RELATE.FINPOST.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.WMS.RETURNASN.SAMPLE.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.CODE.ORDERFEED.CONTROL.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.CSR.ORDERNOTIFY.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FINPOST.LOG.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.GCD.ORDCRTUPD.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.AFTERSHIP.RETURNSHIPMT.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.CSR.ORDERNOTIFY.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.AWS.ORDERCREATE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BLUJ.PO.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.SAP.OMS.CBSMARGIN.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.OMS.IA.DELTAINV.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSSAP.IIB.OMS.WHDEMDELTA.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.OPP.ORDERCREATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.HDC.OMS.GESHIPCANC.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.FINPOST.EA.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('DEVOPS.TESTING.SAMPLE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CLUSTER.COMMAND.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPMNGDSTRULE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD011MFG.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.EVRYTHNG.ORDERS05.LOG2') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OPT.OMS.INVENTORYRECEIPT.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.ADMIN.STREAM') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('OMSRLEU.SAP.OMS.CURCONV.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.ORDRETURN.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FF.FINANCIALPOST.NXTDAY.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.NARVAR.ORDCRTUPD.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OPT.SAP.INVRECON.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.LGS.SAP.SHIPCANCEL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.EVRYTHNG.ORDERS05') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPINVNDCTL.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.INVFSTS.CM.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.MICROS.OMS.POSINVFULL.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.FF.EOD.RTAM.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.OMS.SAP.RLEDEM.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.IIB.NUO.NOORDCANCEL.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.BI.ORDERUPDATE.NXTDAY.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SFCC.RTAM.EOD.NONEU.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SFCC.RTAM.EOD.NONEU.TEMPIN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SFCC.RTAM.DEL.UK.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SRM.PROVIDER.FACTORY.BENF.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.EVRYTHNG.ORDERS05.LOG1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SSHEET.SHIPUPD.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSTesting1.queue') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.WRKLST.FULL.NA.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.OMSEU') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.YEXT.SFCC.STRINF.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.ORDERUPDATE.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.VMS.O9.SUPPL.FACT.ATT.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.CHUB.OMS.VNDRUNITCST.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.CHUB.SFCC.VNDRINVFULL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.OQ4.ORDERCREATEOUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.YEXT.SFCC.STRINF.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.ORDERUPDATE.OUT.TMP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.MICROS.OMS.POSINVFULL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.BLUJ.CONVEY.REGSHIP.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPORD.PK.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.IIB.NUO.NOORDACK.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.BI.ORDERCREATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.FINPOST.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.QMGR.EVENT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.MICROS.OMS.POSINVDAILY.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.PROTECTION.POLICY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.FINPOST.EA.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLAQVPFTE.RLEU.TEST.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.IP.SKU.EMEA.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.ESB.FILEINERRORPROCESSING.INPUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.ZETA.ORDERNOTIFY.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.SERVER') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.INVD.RL.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.IA.OMS.DEMALLOC.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OMS.OPT.INBOUNDASN.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FF.FINANCIALPOST.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SRM.PROVIDER.FACTORY.BENF.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.AUTHINFO.CRLLDAP') +
   GROUP('mqm') +
   OBJTYPE(AUTHINFO) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('OMSRLEU.LGS.OMS.SHIPCONFIRM.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2B.NUO.SAP.NOPBKORDCNA.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.MICROS.OMS.POSINVDAILY.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.IIB.PKMS.INBOUNDASN.DATASTORE.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.DD.OMS.SDDLVNOTIFDUP.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.INVDSTS.RL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.BI.OPT.ITEMFEED.INTER.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.SAP.NUO.NOORDLCKEOM.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ESB.COMMON.HEARTBEAT.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FINPOST.LOG.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAVVY.ACTGC.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.MICROS.OMS.POSINVFULL.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MONGODB.DAILY.DATA') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.GFE.NUO.NOMATMSTR.IN.BACKOUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.BI.ORDERUPDATE.NXTDAY') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.LGS.SHIPREQUEST.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADAPT.ACE.SAP.CREATEASSET.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.BI.OPT.ITEMFEED.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.GCD.ORDCRTUPD.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLCA.OMS.SFCC.RTAM.EOD.CA.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.INVD.CM.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.OQ4.ORDERCREATE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FINPOSTDUP.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.ZETA.ORDERNOTIFY.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.OMS.IA.DELTAINV.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SFCC.RTAM.DEL.UK.TEMPIN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQHA.WMQFTEDATA.MDM.TMPTBD004.IP.BOQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SFCC.RTAM.EOD.NONEU.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPINVNDCTL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.HDC.GESHIPREQ.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.IIB.OMS.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.INVD.CM.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.OPP.ORDERCREATE.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('DEVOPS.IIBA2HD01') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.AWS.ORDERCREATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.RS.TMPTBD016.IN_TMP2') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.GEFINPOSTME.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.JDA.OMS.DEMALLOC.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.CHUB.OMS.VNDRINVADJ.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SAP.OMS.CURCONV.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SFCC.RTAM.DEL.CA.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.BI.SKU.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.OMS.BI.PROTECTSTOCK.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPSHIPMTSTS.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.RETAINED.PUB.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLCA.OMS.SFCC.RTAM.DELTA.CA.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.FINPOSTDUP.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADAPT.SAP.IIB.EUDCINV.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.RS.TMPTBD016.IN.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.FF.OMS.CREATEORDER.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.OMS.IA.FULLINV.OUT.TEST') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.ORDACK.RL.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SFCC.RTAM.EOD.CA.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FINPOST.NXTDAY.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.WEBSTYLE.NA.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ESB.COMMON.HEARTBEAT.SEC.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.FINPOST.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.FB.OMS.TAXUPDATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SFCC.RTAM.EOD.US.INTER.DATA') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.VMS.O9.SUPPL.CORP.ASS.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.INVD.RL.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAMPLETEST.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAVVY.ACTGC.VGC.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.AWS.ORDERCREATE.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.EVRYTHNG.ASN.LOG1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OPT.SAP.INVENTORYRECEIPT.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.ARAVO.SAP.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.TRACE.ROUTE.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.EVRYTHNG.CREMAS05') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.BI.ORDERCREATE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.IIB.NUO.NOTWAYORD.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2B.NUO.SAP.NOPBKORDACKNA.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLCA.OMS.SFCC.RTAM.DEL.CA.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.CHUB.OMS.VNDRINVADJ.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPDONUNMDRLS.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.HDC.GERETURNREQ.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.WRKLST.CYCLIC.NA.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.INVDSTS.CM.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.INVDSTS.CM.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.NARVAR.ORDSTATUS.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.BI.REPORD.PK.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.TEST') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.SHIPUPD.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.ORDERUPDATE.NXTDAY.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.IIB.NUO.NOORDENDOFMARKET.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD011MFG.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.CHUB.PODUP.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.YEXT.SFCC.STRINF.OUT.DUP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.HDC.GERETURNREQ.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SFCC.RTAM.DEL.NONEU.INTER.DATA') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.GEFINPOSTME.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.BI.ORDERUPDATE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.SAP.IIB.NOORDCANCEL.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.ARAVO.SAP.INP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.UPS.ZETA.STOREHRS.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.IP.SKUIPM.NA.PREPACK.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.INTER.QMGR.CONTROL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.GIVEX.VGCACT.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.IA.FULLINV.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OPT.IR.INVENTORYRECEIPT.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSSAP.IIB.OMS.EUDCINVFULL.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.IP.SKU.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.FF.RTAM.EOD.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.IIB.RS.ROUTETORS.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.SAP.OMS.CBSMARGIN.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IIB.ORDEREVENT.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.WMS.SHIPREQUEST.SAMPLE.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IIBA2HD01.DEAD.LETTER.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.TOPIC') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.BI.ORDERUPDATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.SAP.IIB.2WAYORDER.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OPT.OMS.INVENTORYRECEIPT.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SAP.TMPTBD005.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.AFTERSHIP.CREATEORDER.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.BI.ORDERCREATE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DURABLE.SUBSCRIBER.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2B.SAP.IIB.NOORDERACKNA.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPORD.AP.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.PMC.RS.TMPTBD030.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.SHIPUPD.OMSREQ.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.IA.FULLINV.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.MSOFT.ORDERNOTIFY.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.NARVAR.ORDCUDUP.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPCAPCTYSTS.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.ORDCANCEL.FBREQ.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FORTER.ORDUPDATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.IIB.NUO.NOORDACK.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.CHUB.PO.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SFCC.RTAM.DEL.EU.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPSTORERLS.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.INTER.QMGR.FANREQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.NARVAR.ORDCUDUP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SAP.TMPTBD008.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.NARVAR.ORDSTATUS.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLCA.WMS.OMS.SHIPCONFIRM.GET.TEST.DUP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.FF.OMS.CONFIRMSHIP.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.GEFINPOST.NXTDAY') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.FF.RTAM.DEL.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAP.AR.IIB.ARSUPPLIER.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MCOM.IIB.SAP.ADVTPROJ.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SFCC.RTAM.EOD.ME.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.SAP.IIB.NOORDCANCEL.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SFCC.RTAM.DEL.UK.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.WMS.OMS.SHIPCONFIRM.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SFCC.ORDERACK.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPSHIPMTSTS.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.RS.TMPTBD001B.OUT_DEV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FF.FINPOST.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPBACKORD.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.MICROS.OMS.POSINVDAILY.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAMPLEINPUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.SAP.IIB.NOSHIPMENT.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPMNGDSTRULE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SFCC.RTAM.EOD.EU.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.GE.GECANCEL.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.WMS.OMS.SHIPCONFIRM.ESBERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.PROCESS') +
   GROUP('mqm') +
   OBJTYPE(PROCESS) +
   AUTHADD(CHG,DLT,DSP,INQ,SET)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.BI.STYLEVARIANT.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DURABLE.MODEL.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FF.FINANCIALPOST.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAP.IIB.D365.ARCREATEVENDOR.SPLIT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('DEVOPS.SAMPLE.PIPELINE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPSCHDLORD.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.HIERARCHY.STATE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.INVDSTS.RL.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.ORDRETURN.OMSREQ.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.IIB.NUO.NOORDCANCEL.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.OMS.ORDERCREATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLCA.OMS.SFCC.RTAM.EOD.CA.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SFCC.RTAM.EOD.CA.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.FB.OMS.ORDACK.RESP.CM.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.INVF.CM.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPORD.PK.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OPT.IR.INVENTORYRECEIPT.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IP.IIB.TMPTBD004IPM.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IIB.ORDEREVENT.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.YEXT.ZETA.STRINF.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPORDSHPREC.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.OQA.ORDERCREATE.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.ORDERS05NONEDI.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.NA.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.CHUB.PO.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.INVF.RL.INTER.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.OQA.ORDERCREATE.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.FINPOST.TEST.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.PLM.O9.TMPTBD024COSB.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPPMTCOLL.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SFCC.SDSTRINV.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SAP.MASTERDATA.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD012.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.WRKLST.CYCLIC.NA.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SFCC.PRICEBOOK.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.OMS.IA.FULLINV.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.OPP.ORDERCREATE.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD013.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.FF.RTAM.EOD.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.PMC.OMS.CBSPRICESHEET.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.IP.SKU.EMEA.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.CHUB.OMS.VNDRINVADJ.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.FF.OMS.ORDERCREATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.FF.RTAM.EOD.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.WMS.OMS.SHIPCONFIRM.ESBERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.JWT.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.FF.OMS.CONFIRMSHIP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SFCC.RTAM.DEL.CA.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.RS.TMPTBD016.IN_BOQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.INVF.RL.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.RS.TMPTBD001B.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.INVF.CM.INTER.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLCA.SFCC.OMS.ORDERCREATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.OQ4.ORDERCREATE.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SFCC.RTAM.EOD.CA.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.TOPIC') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD013.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL2.VBS.RLT.RTCUSTDT.RESP.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.MM.SDSLAALERT.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OPT.SAP.OUTBOUNDASN.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADAPT.SAP.IIB.EUDCINV.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD012.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SFCC.RTAM.DEL.US.TEMPIN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SAP.OMS.CURCONV.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.CHUB.OMS.VNDRINVFULL.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.INVFSTS.CM.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD035.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.O9.TMPTBD017.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.MSOFT.ORDERNOTIFY.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.FB.OMS.ORDCREATE.RL.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BI.ORDERUPDATE.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IA.IP.ALLOCRSLT.NA.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.IA.OMS.DEMALLOC.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.ORDACK.CM.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.GEFINPOST.INTER1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2B.IIB.NUO.NOORDERACKNA.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FIRSTDATA.ACTGC.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.GIVEX.VGCACT.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.OQA.ORDERCREATEOUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.INTRNST.NA.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SFCC.RTAM.EOD.EU.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.HDC.OMS.HDCINVFULL.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.MICROS.OMS.POSINVDAILY.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FINANCIALPOSTDUP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.YEXT.ZETA.STRINF.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IP.IIB.TMPTBD004IPM.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.PLM.O9.TMPTBD024COSB.TRIGGER_BOQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.MICROS.OMS.POSINVDELTA.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.VMS.PLM.RM.SUPPL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.BI.ORDERCREATE.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.COMMAND.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.ESB.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.ZETA.ORDERNOTIFY.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TO.REPA2HD01') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.OMS.ORDERCREATE.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL2.VBS.RLT.RLTCUSTID.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.IIB.NUO.2WAYORDER.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OMS.OPT.RETURN.CANCEL.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.OMS.SAP.RLEDEM.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.OMS.TMPTBD014.IN_BOQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQHA.WMQFTEDATA.MDM.TMPTBD004.IP.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL2.VBS.RLT.RTCUSTDT.IN.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.UPS.ZETA.STOREHRS.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.ZETA.ORDNTFYMS.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.AWS.ORDERCREATE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MONGODB.DAILY.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.CONTROL.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.GCD.ORDCRTUPD.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLCA.WMS.OMS.SHIPCONFIRM.OUT.DUP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPORD.AP.PK.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.AEM.RS.TMPTBD018.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.BI.STYLEVARIANT.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OPT.SAP.OUTBOUNDASN.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SFCC.RTAM.EOD.UK.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.EVRYTHNG.ASN.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OPT.SAP.INVENTORYRECEIPT.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPRDYSHIPSTS.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLCA.OMS.WMS.SHIPREQUEST.OUT.ACE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SSHEET.SHIPUPD.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLCA.OMS.SFCC.RTAM.EOD.CA.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.ORDERUPDATE.NXTDAY.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MCOM.SAP.MON.DATAFEED.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.FINPOSTDUP.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GTM.ACE.COMMAND') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OMS.OPT.RETURN.CANCEL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.WMS.OMS.SHIPCONFIRM.OUT.DUP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.SERVICE') +
   GROUP('mqm') +
   OBJTYPE(SERVICE) +
   AUTHADD(CHG,DLT,DSP,CTRL)
SET AUTHREC +
   PROFILE('OMSSAP.IIB.OMS.EUDCINVDAILY.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SFCC.RTAM.DEL.US.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPPUBINVCE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SFCC.RTAM.DEL.EU.INTER.DATA') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.GEFINPOST.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.DEFAULT.STREAM') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.SFCC.RELATE.UPDATECUST.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.QPUBSUB.SUBPOINT.NAMELIST') +
   GROUP('mqm') +
   OBJTYPE(NAMELIST) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.TEST.FINPOST.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPORD.AP.PK.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.OMS.JDA.FULLINV.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('DEFAULT.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.LGS.OMS.SHIPCANCEL.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.OMS.SAP.RLEDEM.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.IP.TMPTBD003NA.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SFCC.RTAM.DEL.UK.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.IIB.NUO.NOORDACK.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('CM.OMS.ZETA.ORDERNOTIFY.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.INVFSTS.RL.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.OMS.ORDCREDUP.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADAPT.ACE.SAP.XFERASSET.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADAPT.ACE.SAP.CREATEASSET.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('DP.OMSRLCA.SVRCONN') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.GCD.ORDCRTUPD.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.GCD.ORDCRTUPD.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BI.REPORD.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAP.LETSFLO.ACE.ASSETMGMNT.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.QPUBSUB.QUEUE.NAMELIST') +
   GROUP('mqm') +
   OBJTYPE(NAMELIST) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.IP.SKUIPM.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLCA.SFCC.OMS.ORDERCREATE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.WMS.SHIPREQUEST.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.RTVFEED.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.CONVEY.INVUPD.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.IP.TMPTBD003IPMNA.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST_JSON_BOQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.IIB.NUO.NOTWAYORD.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.FB.OMS.ORDCREATE.CM.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FINPOST.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.IP.SKU.NA.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.FF.DEL.RTAM.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MFT.ADMIN.SVRCONN') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.OQA.ORDERCREATE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.GE.GECANCEL.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.OMS.ORDCREDUP.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLCA.SFCC.OMS.ORDCREDUP.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.BI.SKU.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.UNMADE.ORDERCRT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.INVD.RL.INTER.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.LGS.RTV.TESTOUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SAP.SKU.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAP.SAP.ARIBA.REQUI.EU.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAP.SAP.ARIBA.REQUI.US.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.OMS.ORDERCREATE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OMS.OPT.RETURN.CANCEL.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.YEXT.SFCC.STRINF.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.OMS.ORDERCREATEOUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.BI.ORDERUPDATE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.INVD.CM.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.SAP.OMS.CBSVAT.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADAPT.ACE.SAP.UPDATEASSET.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IIB10.DEV.CLNTCONN') +
   GROUP('mqm') +
   OBJTYPE(CLNTCONN) +
   AUTHADD(CHG,DLT,DSP)
SET AUTHREC +
   PROFILE('OMSRL.OMS.JDA.FLINVDUP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.INVD.RL.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.TRACE.ACTIVITY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.INVD.CM.INTER.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.FF.EOD.RTAM.TEMPIN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.GE.OMS.GERETURN.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.SAP.IIB.INBOUNDASN.RLE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TESTIN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADAPT.SAP.IIB.WHDEM.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.GCD.ORDCRTUPD.NXTDAY') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.IP.STYLEVARIPM.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('Test_OUT.Queue') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.INVF.CM.INTER.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.FF.OMS.CREATEORDER.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.GE.GECANCEL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.YEXT.ZETA.STRINF.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.CONVEY.PO.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.O9.TMPTBD015.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPRMVSHIPMT.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLCA.WMS.OMS.SHIPCONFIRM.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAP.SAP.ARIBA.REQUI.EU.INTER.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAP.SAP.ARIBA.REQUI.US.INTER.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.FF.OMS.ORDERCANCEL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPSCHDLORD.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADAPT.IIB.SAP.ARCREATEVENDOR.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.LGS.RTV.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.GCD.ORDCRTUPD.ORDER.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPSCHDLORD.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.FF.RTAM.EOD.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.INVF.RL.INTER.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IIB.ORDEVTDUP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.AWS.ORDERCREATE.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD011SKU.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.VMS.BI.SUPPL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.FB.OMS.ORDCREATE.RL.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.BI.SKU.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD021.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.TNKFUL.OMS.ORDINF.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.FINPOST.TEST.OUT.TMP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.WMS.OMS.SHIPCONFIRM.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.OQA.ORDERCREATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.YEXT.IIB.STRINFDUP.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.LGS.OMS.SHIPCONFIRM.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.PUBSUB.EVENT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FINPOSTDUP.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.SAP.OMS.CBSMARGIN.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.DEFAULT.STREAM') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.HDC.GESHIPREQ.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAP.IIB.AR.ARUPDATEVENDOR.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.OMS.TMPTBD014.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.SENDER') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('OMSSAP.IIB.OMS.EUDCINVDELTA.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FF.FINPOST.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.FB.OMS.ORDCREATE.CM.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.OQ4.ORDERCREATE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.LGS.CANCORDER.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.NARVAR.ORDCRTUPD.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OPT.ACE.INVENTORYRECEIPT.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.RTVFEED.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.OPP.ORDERCREATE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.OPP.ORDERCREATE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.FF.OMS.CANCELORDER.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.JDA.OMS.DEMALLOC.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.UNMADE.ORDERRET.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('Sample.out') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.IP.STYLEVARIPM.NA.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CICS.INITIATION.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.DD.MM.SDDLVNOTIF.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.DD.OMS.SDDLVNOTIFDUP.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.OMS.JDA.FULLINV.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SFCC.RTAM.DEL.US.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.BI.ORDERCREATE.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.FF.OMS.RETURNORDER.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SFCC.RTAM.EOD.UK.TEMPIN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GTM.ACE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SFCC.RTAM.DEL.NONEU.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OMS.OPT.RETURN.CANCEL.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.BI.ORDERCREATE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.FF.OMS.ORDERRETURN.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.OQA.ORDERCREATE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FIRSTDATA.ACTGC.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.GCD.ORDCRTUPD.NXTDAY.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD011MFG.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.LGS.RTV.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.FF.OMS.CREATEORDER.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.IIB.NUO.NOORDACK.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.CHUB.OMS.POFNCTNLACK.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.CHUB.OMS.VNDRINVADJ.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IP.IIB.TMPTBD004.SFCC.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.OQ4.ORDERCREATE.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.ANA.TMPTBD020.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPCAPCTYSTS.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.WMS.SHIPREQDUP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SampleMsgId.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.SAP.IIB.NOSHIPMENT.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD035.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SFCC.RTAM.DEL.US.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLAPAC.SFCC.OMS.ORDERCREATE.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.FF.RTVFEED.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.VMS.O9.SUPPL.FACT.DLRY.OUT2') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADAPT.SAP.IIB.WHDEM.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.NDURABLE.MODEL.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.IP.SKU.NA.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPBACKORD.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.GFE.TMPTBD026.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.GE.OMS.GERETURNME.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.IIB.NUO.NOORDENDOFMARKET.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CHANNEL.INITQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.UPS.OMS.EDISHPTRACK.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPDONUNMDRLS.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.CHUB.OMS.RETURNNTFCN.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADAPT.SAP.IIB.OMSEU.RLS.SHIPMENTCNF.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ESB.COMMON.HEARTBEAT.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.SDSTRINV.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.SAP.OMS.DEMALLOC.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAVVY.AGCDUP.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.FINPOST_CA.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.GE.GESHIPCONF.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.ARAVO.SAP.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.FINPOST.CA.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.TNKFUL.OMS.ORDINF.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.FF.OMS.RETURNORDER.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.IIB.NUO.NOORDCANCEL.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLCA.SFCC.BI.ORDERCREATE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.FINPOST.NXTDAY.CA.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FINPOSTDUP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.OMS.TMPTBD014.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.IN.SSB') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.HDC.OMS.GEDCINVDELTA.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADAPT.ACE.SAP.XFERASSET.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GTM.REPLY') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.INVF.CM.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPORD.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADAPT.SAP.IIB.ARUPDATEVENDOR.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.ANA.TMPTBD019.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.UPS.ZETA.STOREHRS.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.LRD.RTVFEED.NXTDAY') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.RS.IIB.ROUTING.E2E.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.WMS.RETURNASN.LOG.DUP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IIB10.DEV.CLNTCONN') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('OMSRLNA.CHUB.OMS.VNDRINVFULL.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.INVF.RL.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLCA.OMS.WMS.SHIPREQDUP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.FF.OMS.CANCELORDER.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLAPAC.SFCC.BI.ORDERCREATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.HDC.OMS.GESHIPCANC.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.DD.OMS.SDDLVNOTIF.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.BI.OPT.ITEMFEED.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.ONORDR.NA.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLCA.OMS.BI.REPORD.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.SAP.NUO.NOORDLCKEOM.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.VMS.O9.SUPPL.FACT.DLRY.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPRDYSHIPSTS.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.NAMELIST') +
   GROUP('mqm') +
   OBJTYPE(NAMELIST) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('EAI.RL.AUDITEVENT.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.GE.GESHIPCONF.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.CHUB.OMS.RETURNNTFCN.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPRMVSHIPMT.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SFCC.RTAM.DEL.NONEU.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.WMS.SHIPREQUEST.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.IIB.PKMS.INBOUNDASN.DATASTORE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.LGS.SAP.SHIPCONFIRM.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.FF.OMS.SHIPCONFIRM.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSSAP.IIB.BI.EUDCINV.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.SVRCONN') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPDONUNMDRLS.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('InputQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.ZETA.ORDNOTIFYEMAIL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.MICROS.OMS.POSINVFULL.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.CHUB.OMS.RETURNNTFCN.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OPT.SAP.INVENTORYRECEIPT.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.FF.OMS.ORDERRETURN.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.DD.OMS.SDDLVNOTIF.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.RS.TMPTBD001A.OUT_DEV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.ONORDR.NA.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.WMS.SHIPREQDUP.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BLUJ.PO.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.ADN.RCNET.PAYMENT.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL2.VBS.RLT.RLTCUSTID.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.UPS.ZETA.STOREHRS.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IA.IP.ALLOCRSLT.NA.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.IA.DELTAINV.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.GFE.NUO.NOMATMSTR.OUT.BOQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPORD.OUT1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.OMS.IA.FULLINV.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.BI.STYLEVARIANT.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FF.FINANCIALPOST.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD021.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADAPT.ACE.SAP.XFERASSET.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.SAP.IIB.NOSHIPMENT.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.VMS.O9.SUPPL.FACT.DLRY.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.WMS.RETURNASN.TRIGGER.DUP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.INITIATION.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.WEBSTYLE.NA.ASSET.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.MICROS.OMS.POSINVFULL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.MICROS.OMS.POSINVDAILY.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.WRKLST.CYCLIC.NA.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.TMP.TEST.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAMPLE1.Q') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OPT.OMS.INVENTORYRECEIPT.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLAPAC.SFCC.MULTI.ORDERCREATE.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OPT.OMS.INVENTORYRECEIPT.LOG.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SFCC.RTAM.DEL.EU.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.CHUBINVPURCH.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.LGS.CANCORDER.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.AWS.ORDERCREATE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.FINPOST.TEST.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.ZETA.ORDNFYVAT.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.CHUB.PO.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SFCC.ORDERACK.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD011MFG.T.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.RTVFEED.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.CONVEY.PO.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.VMS.O9.SUPPL.FACT.ASS.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.FB.OMS.TAXUPDATE.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.O9.TMPTBD015.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD011MFG.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAP.TMP.ND.WD.SAP.DATA.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.REST.REPLY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADAPT.IIB.SAP.ARCREATEVENDOR.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAP.TMP.ND.WD.SAP.DATA.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.OQA.ORDERCREATEOUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPRDYSHIPSTS.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.MICROS.OMS.POSINVDAILY.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.LGS.RETORDER.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPSCHDLORD.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.INTERNAL.REQUEST.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FINPOST.NXTDAY') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.HDC.OMS.GESHIPCONF.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FIRSTDATA.ACTGC.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.ORDACK.OMSREQ.CM.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.BI.ORDERCREATE.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CLUSTER.REPOSITORY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.WMS.RETURNASN.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.OQ4.ORDERCREATE.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.LGS.OMS.SHIPCANCEL.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.ZETA.ORDNTFYDUP.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.VMS.BI.SUPPLIER.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPRDYSHIPSTS.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.JDA.OMS.DEMALLOC.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPRCPTSTATUS.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.GLC.RS.TMPTBD022.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.ORDCANCEL.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.AUTHINFO.IDPWOS') +
   GROUP('mqm') +
   OBJTYPE(AUTHINFO) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.MODEL.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAP.TMP.ND.WD.SAP.DATA.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST_MQ_IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.ZETA.ORDNTFYDUP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OMS.OPT.RETURN.CANCEL.LOG.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SFCC.RTAM.DEL.EU.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.FEEDRTV.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.HDC.OMS.GESHIPCANC.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ESB.COMMON.IDTRACKING.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.OMS.JDA.DELTAINV.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.AEM.RS.TMPTBD018.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL2.VBS.RLT.RTCUSTDT.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.LGS.OMS.SHIPCANCEL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.AMQP') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.RTVFEED.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAP.AR.IIB.ARSUPPLIER.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.CODE.ORDERFEED.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.GCD.ORDCRTUPD.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLCA.SFCC.BI.ORDERCREATE.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('Errorlog.Q') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.INVDSTS.CM.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.TNKFUL.OMS.ORDINF.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.IA.DELTAINV.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FIRSTDATA.ACTGC.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.CHUB.OMS.RETURNNTFCN.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.WMS.OMS.SHIPCONFIRM.ESBOUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADAPT.ACE.SAP.UPDATEASSET.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FIRSTDATA.ACTGC.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.IA.FULLINV.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.FF.DEL.RTAM.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.GCD.ORDCRTUPD.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.WMS.SHIPREQUEST.TRIGGER.DUP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.FB.OMS.TAXUPDATE.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.FF.RTAM.EOD.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST_JSON') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.GCD.ORDCRTUPD.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.IA.DELTAINV.IN1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.CHUB.OMS.VNDRUNITCST.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.HDC.OMS.GEDCINVDELTA.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.LOGGER.EVENT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPORDAPMT.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.ACCOUNTING.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPORDAPMT.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.CHUB.SFCC.VNDRINVFULL.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.GIVEX.VGCACT.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.GE.OMS.GERETURN.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.FINPOST.OUT.DUP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.OMS.JDA.DAINVDUP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.FINPOST.CA.NXTDAY') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST_JSON_OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.FF.RTAM.EOD.TEMPIN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.EVRYTHNG.SAMPLE.MATMAS05.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADAPT.SAP.IIB.EUDCINV.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SFCC.PRICEBOOK.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.OMS.ORDERCREATE.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLCA.OMS.WMS.SHIPREQUEST.LOG.DUP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.WMS.RETURNASN.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.LRD.RTVFEED.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.GCD.ORDCRTUPD.NXTDAY.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OPT.SAP.INVENTORYRECEIPT.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.IIB.NUO.NOORDACK.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAVVY.AGCDUP.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SFCC.RTAM.DEL.NONEU.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.SAP.OMS.CBSVAT.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.GE.GESHIPCONF.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.GE.GEREFUND.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADAPT.SAP.IIB.ARUPDATEVENDOR.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SFCC.RTAM.EOD.US.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLCA.OMS.SFCC.RTAM.EOD.CA.TEMPIN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEAD.LETTER.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.IP.SKU.EMEA.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.WMS.SHIPREQUEST.LOG.DUP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.FF.OMS.CANCELORDER.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.MICROS.OMS.POSINVDELTA.PFS.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.FF.RTAM.DEL.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.PENDING.DATA.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLCA.OMS.WMS.SHIPREQUEST.TRIGGER.DUP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.OMS.ORDCREDUP.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.MICROS.FULLINV.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.OMS.IA.DELTAINV.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IP.IIB.TMPTBD004.SFCC.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.JDA.FULLINV.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.GCD.ORDCRTUPD.ORDER.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SFCC.RTAM.EOD.CA.TEMPIN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.LOCAL.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SFCC.RTAM.EOD.ME.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.ADN.RCNET.PAYMENT.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2B.IIB.NUO.NOORDERACKNA.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.O9.TMPTBD017.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.HDC.GERETURNREQ.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.SDSTRINV.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.FINPOST.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADAPT.SAP.IIB.OMSEU.RLS.ORDERCAN.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPORDSHPREC.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLAQVPFTE.RLEU.TEST.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.BI.ORDERUPDATE.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQHA.WMQFTEDATA.MDM.TMPTBD004.IP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.AUTHINFO.IDPWLDAP') +
   GROUP('mqm') +
   OBJTYPE(AUTHINFO) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.FF.DEL.RTAM.TEMPIN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.ANA.MASTERDATA.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.BI.WEBSTYLE.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.GCD.ORDCRTUPD.BUYER.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADAPT.SAP.IIB.WHDEM.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.ORDRETURN.FBREQ.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.NARVAR.ORDCRTUPD.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SFCC.SDSTRINV.DEFAULT.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.FEEDRTV.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLAPAC.SFCC.OMS.ORDERCREATE.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.SAP.OMS.CBSMARGIN.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.PMC.IIB.MATERIAL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FF.FINANCIALPOST.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IIB.ORDEREVENT.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SFCC.RTAM.EOD.UK.INTER.DATA') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.HDC.OMS.GERETURNRCV.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.EVRYTHNG.SAMPLE.ORDERS05') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SSHEET.SHIPUPD.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.ESB.SENDMAIL.INPUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.ASN.INPUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.SAP.OMS.CBSVAT.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.SAP.IIB.INBOUNDASN.RLE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.PMC.OMS.CBSPRICESHEET.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BLUJ.PO.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.FF.OMS.RETURNORDER.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.GCD.ORDCRTUPD.NXTDAY.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.SHIPUPD.FBREQ.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SampleError.Q') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.MADMB.ORDUPDATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLCA.OMS.SFCC.RTAM.EOD.CA.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAP.IIB.AR.ARUPDATEVENDOR.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.LISTENER.TCP.1') +
   GROUP('mqm') +
   OBJTYPE(LISTENER) +
   AUTHADD(CHG,DLT,DSP,CTRL)
SET AUTHREC +
   PROFILE('OMSRLEU.LGS.OMS.SHIPCONFIRM.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IIB.ORDEVTDUP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FF.FINPOST.NXTDAY.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IIB.ORDEVTDUP.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FORTER.ORDUPDATE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.INVFSTS.CM.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.GCD.ORDCRTUPD.NXTDAY.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAP.IIB.D365.ARCREATEVENDOR.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.LGS.RETORDER.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.FB.OMS.TAXUPDATE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.MICROS.OMS.POSINVDELTA.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.CODE.ORDERFEED.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPMNGDSTRULE.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.HDC.OMS.GEDCINVDELTA.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPCAPCTYSTS.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FINPOST.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAP.IIB.D365.ARCREATEVENDOR.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2B.NUO.SAP.NOPBKORDCNA.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FIRSTDATA.AGCDUP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SFCC.RTAM.DEL.US.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.O9.TMPTBD015.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.OMS.ORDCREDUP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD021.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.OQA.ORDERCREATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.IA.DELTAINV.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.PLM.RS.TMPTBD023.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.NARVAR.ORDCRTUPD.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.LGS.SHIPREQUEST.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.LGS.CANCORDER.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SFCC.RTAM.EOD.UK.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SFCC.RTAM.EOD.CA.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.AUTO.RECEIVER') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.RTVFEED.NXTDAY.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.OMS.JDA.FULLINV.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.GFE.NUO.MATERIALMASTER.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.RS.TMPTBD016.IN.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.OPP.ORDERCREATE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.CODE.ORDERFEED.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.NARVAR.ORDCRTUPD.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.FB.OMS.TAXUPDATE.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.REQUESTER') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SFCC.SDSTRINV.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OPT.OMS.INVENTORYRECEIPT.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADAPT.SAP.IIB.EUDCINV.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.ANA.TMPTBD020.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.IP.SKUIPM.NA.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.JDA.OMS.DEMALLOC.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.NA.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.OQA.ORDERCREATE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IP.IIB.TMPTBD004.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.OQ4.ORDERCREATE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.O9.SKU.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2B.IIB.NUO.NOORDERACKNA.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.RECEIVER') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('OMSEU.OMS.IA.DELTAINV.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.IIB.OMS.RLS.SHIPCNF.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IN1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.WMS.OMS.SHIPCONFIRM.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.FF.OMS.SHIPCONFIRM.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.IA.OMS.DEMALLOC.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SFCC.RTAM.EOD.US.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAVVY.ACTGC.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.LGS.RETORDER.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.GFE.TMPTBD026.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FINPOST.LOG.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SFCC.SDSTRINV.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL2.VBS.RLT.RTCUSTDT.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.CHUB.OMS.POFNCTNLACK.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.IIB.OMS.ORDERCAN.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.FEEDRTV.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPORDSHPREC.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.MQEXPLORER.REPLY.MODEL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLCA.WMS.OMS.SHIPCONFIRM.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.SAP.IIB.NOSHIPMENT.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.ASN.ERRORDETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('DEVOPS.LISTENER.TCP.1') +
   GROUP('mqm') +
   OBJTYPE(LISTENER) +
   AUTHADD(CHG,DLT,DSP,CTRL)
SET AUTHREC +
   PROFILE('OMSRLCA.OMS.SFCC.RTAM.EOD.CA.INTER.DATA') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SFCC.RTAM.EOD.CA.INTER.DATA') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.FF.OMS.ORDERRETURN.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.RS.TMPTBD001B.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.HDC.OMS.GESHIPCONF.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPORDSHPREC.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.INTRNST.NA.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OPT.IR.INVENTORYRECEIPT.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.ANA.TMPTBD019.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.WRKLST.FULL.NA.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.SAP.NUO.NOORDLCKEOM.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OPT.IR.INVENTORYRECEIPT.LOG.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SFCC.RTAM.DEL.NONEU.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.FF.FEEDRTV.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.GE.OMS.GERETURN.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.LGS.FEEDRTV.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.LGS.SHIPREQDUP.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.ASN.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.OMS.JDA.FULLINV.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.JDA.OMS.DEMALLOC.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.FF.OMS.ORDERCREATE.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FINPOST.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.HDC.GESHIPREQ.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SFCC.RTAM.EOD.US.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.PMC.OMS.CBSPRICESHEET.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.NA.IN1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SFCC.RTAM.EOD.ME.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.IA.DELTAINV.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.CHUB.PODUP.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSSAP.IIB.OMS.WHDEM.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.BI.OPT.ITEMFEED.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL2.VBS.RLT.RTCUSTDT.IN.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPHOLDORD.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAP.SAP.ARIBA.REQUI.US.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPPUBINVCE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAVVY.ACTGC.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQHA.WMQFTEDATA.MDM.TMPTBD004.IP.IN_BOQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.LGS.SHIPREQUEST.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.HDC.OMS.GERETURNRCV.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.PLM.RS.TMPTBD023.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.LGS.RTV.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.WMS.SHIPREQUEST.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.SAP.OMS.CBSVAT.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.OQ4.ORDERCREATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAP.LETSFLO.ACE.ASSETMGMNT.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.BI.REPORD.PK.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLAPAC.SFCC.MULTI.ORDERCREATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.RS.TMPTBD001A.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.ORDERUPDATE.NXTDAY') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FORTER.ORDUPDATE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DDELAY.LOCAL.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OPT.SAP.INVENTORYRECEIPT.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.ZETA.ORDNFYVAT.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.GCD.ORDCRTUPD.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.FINPOST.CA.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.SAP.IIB.2WAYORDER.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.OMS.IA.FULLINV.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.MICROS.OMS.POSINVDELTA.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.SHIPUPD.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAP.IIB.AR.ARUPDATEVENDOR.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.ANA.TMPTBD019.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.GFE.STYLEVARIANT.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SFCC.RTAM.EOD.ME.INTER.DATA') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.COMMINFO.MULTICAST') +
   GROUP('mqm') +
   OBJTYPE(COMMINFO) +
   AUTHADD(CHG,DLT,DSP)
SET AUTHREC +
   PROFILE('self') +
   GROUP('root') +
   OBJTYPE(QMGR) +
   AUTHADD(ALTUSR,CHG,CONNECT,DLT,DSP,INQ,SET,SETALL,SETID,CTRL,SYSTEM)
SET AUTHREC +
   PROFILE('self') +
   GROUP('mqm') +
   OBJTYPE(QMGR) +
   AUTHADD(ALTUSR,CHG,CONNECT,DLT,DSP,INQ,SET,SETALL,SETID,CTRL,SYSTEM)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.PMC.RS.TMPTBD030.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.ORDERUPDATE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPHOLDORD.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OMS.OPT.INBOUNDASN.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPBACKORD.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.ZETA.ORDERNOTIFY.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SFCC.RTAM.EOD.UK.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.RS.TMPTBD016.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.OMS.SKU.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLCA.OMS.SFCC.RTAM.DEL.CA.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.NARVAR.ORDSTATUS.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD035.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.GLADLY.OMS.ORDINF.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.UPS.OMS.EDISHPTRACK.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.FINPOST.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.UPS.ZETA.STOREHRS.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SSHEET.SHIPUPD.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.BI.ORDERUPDATE.NXTDAY.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.AWS.ORDERCREATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.GEFINPOSTME.NXTDAY') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPPUBINVCE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.YEXT.SFCC.STRINF.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.NA.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.RS.IIB.ROUTEFROMRS.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD013.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.COMMAND.EVENT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FIRSTDATA.AGCDUP.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAP.SAP.ARIBA.REQUI.US.INTER.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.BI.ORDERUPDATE.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.IA.FULLINV.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.ZETA.DUPORDNTFY.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.OPP.ORDERCREATE.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLCA.OMS.WMS.SHIPREQUEST.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.IP.SKUIPM.NA.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAMPLE.ZETA') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.RS.TMPTBD001A.IN_BOQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.IA.FULLINV.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.RTVFEED.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.PKMS.OMS.FULLINV.OUT.DUP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.ZETA.ORDERNOTIFY.IN1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.ZETA.ORDNFYVAT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD035.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPRCPTSTATUS.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.BIEVENTS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD012.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SFCC.RTAM.DEL.NONEU.TEMPIN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SFCC.RTAM.EOD.UK.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST_OMS_OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.NUO.SAP.NOPBKORDC.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.FF.EOD.RTAM.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.FF.OMS.ORDERRETURN.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLCA.OMS.IP.FINPOST.CA.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.GIVEX.VGCACT.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.IA.DELTAINV.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAP.LETSFLO.ACE.ASSETMGMNT.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SFCC.RTAM.EOD.NONEU.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SFCC.RTAM.DEL.CA.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.GEFINPOSTME.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.GEFINPOST.OUT1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.HDC.OMS.GEDCINVFULL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.HDC.OMS.GEDCINVFULL.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.YEXT.IIB.STRINFDUP.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD013.IN_BOQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IIB.ORDEVTDUP.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.FF.RTAM.DEL.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.NXTDAY') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IA.IP.ALLOCRSLT.NA.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.FF.OMS.RETURNORDER.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.IA.FULLINV.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.NARVAR.ORDSTATUS.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.AEM.RS.TMPTBD018.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SFCC.RTAM.EOD.EU.TEMPIN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADAPT.ACE.SAP.CREATEASSET.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SampleMsgId.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.MM.SDSLAALERT.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.CHUB.OMS.ORDFFLMCONF.TEST.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SFCC.RTAM.EOD.EU.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.ONORDR.NA.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.OUT.SSB') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.FF.OMS.CONFIRMSHIP.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IIB.ORDEREVENT.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.FF.DEL.RTAM.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FF.FINPOST.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.VMS.O9.SUPPL.FACT.ATT.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.YEXT.ZETA.STRINF.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD012.IN_BOQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.BLUJ.CONVEY.REGSHIP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.LGS.RTV.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.QA') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.SELECTION.VALIDATION.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.UNMADE.ORDERCRT.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAP.SAP.ARIBA.REQUI.US.INTER.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('DPTEST.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CHLAUTH.DATA.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SFCC.RTAM.DEL.EU.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLCA.SFCC.BI.ORDERCREATE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('root') +
   OBJTYPE(CLNTCONN) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(CLNTCONN) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.IP.SKU.EMEA.PRICE.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SFCC.RTAM.DEL.UK.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST_OUT_1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.OPP.ORDERCREATEOUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.INTER.QMGR.PUBS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.CHUB.OMS.ORDFFLMCONF.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.OMS.ORDERCREATE.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SFCC.RTAM.EOD.NONEU.INTER.DATA') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.FF.RTVFEED.NXTDAY') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLCA.SFCC.OMS.ORDERCREATE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.LGS.OMS.SHIPCONFIRM.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.DEFAULT.SUBPOINT') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SFCC.RTAM.EOD.EU.INTER.DATA') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.FORTER.ORDUPDATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.LGS.CANCORDER.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BNA.ANA.NUO.EXTNDMATMSTR.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.MICROS.FULLINV.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPINVNDCTL.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.OMS.JDA.FLINVDUP.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.PLM.RS.TMPTBD025.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.MESSAGE.ASSOCIATION.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.FF.OMS.CANCELORDER.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.FF.EOD.RTAM.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAVVY.ACTGC.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.IP.SKUIPM.NA.ITEM.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.VMS.SAP.ALL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.FF.OMS.CREATEORDER.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAP.AR.IIB.ARSUPPLIER.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.FF.EOD.RTAM.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SFCC.RTAM.EOD.UK.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.INTRNST.NA.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.GEFINPOST.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.MICROS.OMS.POSINVDELTA.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SFCC.RTAM.EOD.US.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.ZETA.ORDERNOTIFY.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.JDA.OMS.DEMALLOC.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.AMQP.SERVICE') +
   GROUP('mqm') +
   OBJTYPE(SERVICE) +
   AUTHADD(CHG,DLT,DSP,CTRL)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.OMS.ORDERCREATE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPSHIPMTSTS.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.OMS.BI.PROTECTSTOCK.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.BI.ORDERCREATE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SAP.STYLEVARIANT.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.DD.SDORDREQ.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('root') +
   OBJTYPE(RQMNAME) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('MCOM.IIB.SAP.ADVTPROJ.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.IP.SKUIPM.NA.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2B.IIB.SAP.NOORDERACKNA.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.MICROS.OMS.POSINVFULL.PFS.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.JDA.FULLINV.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.ACTIVITY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPRCPTSTATUS.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.SAP.IIB.NOORDACK.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.BI.ORDERUPDATE.NXTDAY.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ESB.COMMON.IDTRACKING.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IP.IIB.TMPTBD004.OUT_DEV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.WMS.SHIPREQDUP.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.RTVFEED.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.FF.EOD.RTAM.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DOTNET.XARECOVERY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.BI.WEBSTYLE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.MSOFT.ORDERNOTIFY.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.LGS.FEEDRTV.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SFCC.RTAM.EOD.CA.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('root') +
   OBJTYPE(QUEUE) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('TEST.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('DEVOPSTESTING') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.OMS.ORDERCREATE.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.SVRCONN') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.PMC.RS.TMPTBD030.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLCA.OMS.SFCC.RTAM.EOD.CA.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SFCC.RTAM.EOD.US.TEMPIN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.WMS.OMS.SHIPCONFIRM.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.UPS.ZETA.STOREHRS.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.CHUB.SFCC.VNDRINVFULL.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.GESAP.FINPOST.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('root') +
   OBJTYPE(NAMELIST) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(NAMELIST) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPMNGDSTRULE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.SKU.NA.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.UNMADE.ORDERRET.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.JDA.FULLINV.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TO.IIBA2HD01') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('OMSRLEU.LGS.OMS.SHIPCONFIRM.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.OQA.ORDERCREATE.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.CHUB.PO.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.DD.OMS.SDDLVNOTIFDUP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.VMS.PLM.RM.SUPPL.IN_BOQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SFCC.RTAM.EOD.ME.TEMPIN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST_OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CHANNEL.SYNCQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLCA.SFCC.OMS.ORDCREDUP.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.OMS.ORDCREDUP.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.UNMADE.ORDERCRT.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.ORDRETURN.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.FB.OMS.ORDCREATE.CM.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.LGS.RETORDER.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.LGS.OMS.SHIPCANCEL.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.IIB.NUO.NOSHIPMENT.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.FB.OMS.ORDCREATE.OMSREQ.RL.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('root') +
   OBJTYPE(PROCESS) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(PROCESS) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.GLC.RS.TMPTBD022.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OPT.SAP.INVRECON.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.ZETA.ORDNFYVAT.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAP.IIB.D365.ARCREATEVENDOR.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.HDC.OMS.GESHIPCANC.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.FB.OMS.TAXUPDATE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSSAP.IIB.OMS.WHDEM.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLCA.SFCC.OMS.ORDERCREATE.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLAQVPFTE.RLEU.TEST.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.DD.SDORDREQ.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.IA.DELTAINV.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SSHEET.SHIPUPD.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST_IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSSAP.IIB.OMS.EUDCINV.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.AEM.RS.TMPTBD018.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SAP.OMS.CURCONV.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OPT.SAP.INVRECON.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.CHUBINVPURCH.TESTQUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.ZETA.ORDERNOTIFY.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.FEEDRTV.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAP.IIB.D365.ARCREATEVENDOR.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.NARVAR.ORDCRTUPD.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.FEEDRTV.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IIB.ORDEREVENT.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.FB.OMS.ORDCREATE.OMSREQ.CM.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.OMS.SAP.RLEDEM.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.FINPOST.OUT.TMP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.FINPOSTDUP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.CHUB.OMS.ORDFFLMCONF.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.GCD.ORDCRTUPD.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.RS.TMPTBD016.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.LGS.SAP.SHIPCONFIRM.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OutputQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.ANA.TMPTBD020.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('root') +
   OBJTYPE(QMGR) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(QMGR) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.OMS.EDDORDERCREATE.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.RS.QA.IN.ND') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.TNKFUL.OMS.ORDINF.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.BI.REPORD.PK.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.FINPOST.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.FEEDRTV.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.LGS.RETORDER.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.EVRYTHNG.SAMPLE.MATMAS05.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OPT.SAP.OUTBOUNDASN.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.WMS.SHIPREQUEST.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SAP.TMPTBD007.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.NARVAR.ORDCRTUPD.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.LGS.SHIPREQUEST.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.FINPOST.NXTDAY.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.GFE.TMPTBD026.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('root') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.FEEDRTV.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.FF.OMS.ORDERRETURN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.GEFINPOST.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.HDC.GERETURNREQ.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPSHIPMTSTS.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.ORDCANCEL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.OMS.SAP.RLEDEM.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.YEXT.IIB.STRINFDUP.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.ORDCANCEL.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.CONVEY.INVUPD.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.FF.OMS.ORDERCREATE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.HDC.OMS.GESHIPCONF.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.FF.OMS.SHIPCONFIRM.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SFCC.ORDERACK.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('root') +
   OBJTYPE(AUTHINFO) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(AUTHINFO) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD021.T.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IIB.ORDEREVENT.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.YEXT.IIB.STRINFDUP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLCA.OMS.SFCC.RTAM.DEL.CA.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SFCC.RTAM.DEL.CA.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL2.VBS.RLT.RTCUSTDT.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ESB.COMMON.HEARTBEAT.SEC.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.FB.OMS.ORDACK.RESP.RL.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SFCC.RTAM.EOD.ME.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPDONUNMDRLS.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.ORDACK.REQ.RL.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.EVRYTHNG.ASN.LOG2') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.CODE.ORDERFEED.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.MICROS.OMS.POSINVFULL.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.BI.WEBSTYLE.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.JDA.OMS.DEMALLOC.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.SAP.NUO.NOORDLCKEOM.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLAQVPFTE.RLEU.TEST.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD011SKU.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.PMC.REPROCESS.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.FINPOST.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FF.FINANCIALPOST.NXTDAY') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.GE.GEREFUND.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADAPT.ACE.SAP.CREATEASSET.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.FB.OMS.ORDCREATE.RL.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.GEFINPOST.NXTDAY.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('root') +
   OBJTYPE(TOPIC) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('OMSRLNA.CHUB.OMS.ORDFFLMCONF.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('DEVOPSTESTING') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('B2BEMEA.SAP.IIB.NOORDCANCEL.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.NARVAR.ORDCUDUP.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OPT.IR.INVENTORYRECEIPT.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FINPOST.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.STATISTICS.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.OMS.IA.FULLINV.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPRMVSHIPMT.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IIB.ORDEREVENT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.PROTECTION.ERROR.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.CHUB.PO.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAVVY.AGCDUP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.IIB.NUO.INVDELTAFEED.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('root') +
   OBJTYPE(COMMINFO) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(COMMINFO) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('TEST.JWT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.ZETA.ORDNTFYDUP.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.SDSTRINV.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.CLNTCONN') +
   GROUP('mqm') +
   OBJTYPE(CLNTCONN) +
   AUTHADD(CHG,DLT,DSP)
SET AUTHREC +
   PROFILE('ESB.COMMON.IDTRACKING.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.MICROS.OMS.POSINVDELTA.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADAPT.ACE.SAP.UPDATEASSET.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.CONVEY.INVUPD.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.IIB.NUO.NOSHIPMENT.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.OMS.ORDCREDUP.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.CLUSSDR') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('OMSRLNA.YEXT.SFCC.STRINF.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SFCC.RTAM.DEL.UK.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.CHUBINVPURCH.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.FF.RTAM.DEL.TEMPIN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.FINPOST.CA.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPPMTCOLL.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADAPT.SAP.IIB.ARUPDATEVENDOR.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSSAP.IIB.OMS.WHDEM.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.SAP.IIB.TMPTBD010.OUT_DEV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.IIB.BI.BIPRODUCT.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.FB.OMS.ORDCREATE.RL.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.IIB.NUO.NOSHIPMENT.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.WMS.SHIPREQUEST.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.CHUB.OMS.VNDRINVFULL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.NA.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.WMS.RETURNASN.IN.ACE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.REMOTE.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAP.SAP.ARIBA.REQUI.US.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.SFCC.RELATE.RETRYCUST.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BI.ORDERUPDATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GTM.ACE.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('root') +
   OBJTYPE(LISTENER) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(LISTENER) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('OPTORO.BI.OPT.ITEMFEED.INTER.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SAP.OMS.CURCONV.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('DEVOPSTESTING') +
   GROUP('mqm') +
   OBJTYPE(LISTENER) +
   AUTHADD(CHG,DLT,DSP,CTRL)
SET AUTHREC +
   PROFILE('OMSRLNA.DD.OMS.SDDLVNOTIF.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLCA.OMS.WMS.SHIPREQUEST.IN.ACE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.WRKLST.FULL.NA.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.IIB.NUO.NOTWAYORD.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.CHUB.OMS.VNDRINVFULL.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.RTVFEED.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.RS.TMPTBD001B.OUT.RS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.ORDERUPDATE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAP.SAP.ARIBA.REQUI.EU.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.FORTER.SHIPUPDATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.FORTER.ORDUPDATE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SFCC.RTAM.DEL.US.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLCA.OMS.SFCC.RTAM.DEL.CA.TEMPIN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPPUBINVCE.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('root') +
   OBJTYPE(SERVICE) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(SERVICE) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.OMS.ORDERCREATE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.OMS.EDDORDERCREATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.GE.GEREFUND.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.WMS.SHIPREQUEST.IN.ACE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.ADN.RCNET.PAYMENT.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SFCC.RTAM.EOD.US.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.OPP.ORDERCREATE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAP.TMP.ND.WD.SAP.DATA.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSSAP.IIB.OMS.WHDEMDAILY.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.AEM.RS.TMPTBD018.OUT_DEV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ESB.COMMON.HEARTBEAT.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.FINPOST.EA.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.ORDACK.REQ.CM.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SFCC.RTAM.DEL.CA.TEMPIN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADAPT.ACE.SAP.XFERASSET.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.INVD.RL.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SSHEET.SHIPUPD.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.ADN.RCNET.PAYMENT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.NUO.SAP.NOPBKORDC.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.IP.SKU.NA.ITEM.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.ALIAS.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD021.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.OQA.ORDERCREATE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.HDC.OMS.GESHIPCONF.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.INVD.RL.INTER.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.JDA.FLINVDUP.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.GLC.RS.TMPTBD022.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IP.IIB.TMPTBD004.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.LGS.CANCORDER.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FF.FINANCIALPOST.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.IA.OMS.DEMALLOC.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.SAP.IIB.INBOUNDASN.RLE.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.AUTO.SVRCONN') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('OMSRLEU.LGS.OMS.SHIPCANCEL.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MCOM.SAP.MON.DATAFEED.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.BLUJ.CONVEY.REGSHIP.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.FINPOST.EA.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPORD.AP.PK.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.IIB.PKMS.INBOUNDASN.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.OPP.ORDERCREATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.OQ4.ORDERCREATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLAPAC.SFCC.AWS.ORDERCREATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.INVD.CM.INTER.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.INVD.CM.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.IP.SKU.EMEA.ITEM.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SSHEET.SHIPUPD.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.AEM.RS.TMPTBD018.OUT_TEMP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.WMS.OMS.SHIPCONFIRM.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.GLC.RS.TMPTBD022.OUT_TEMP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.AUTH.DATA.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.PMC.RS.TMPTBD030.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.FINPOST.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.ORDERS05NONEDI.ERRORDETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.INVF.CM.TEMPIN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.CONVEY.PO.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.ANA.STYLEVARIANT.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.EVRYTHNG.SAMPLE.MATMAS05') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MCOM.IIB.SAP.REPROCESS.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('LGS.ADMIN.SVRCONN') +
   GROUP('mqm') +
   OBJTYPE(CLNTCONN) +
   AUTHADD(CHG,DLT,DSP)
SET AUTHREC +
   PROFILE('OMSRLEU.FF.OMS.CONFIRMSHIP.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BLUJ.PO.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLAPAC.SFCC.OMS.ORDERCREATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.GEFINPOSTME.NXTDAY.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.UPS.ZETA.STOREHRS.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('Error.Q') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.GCD.ORDCRTUPD.NXTDAY') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPBACKORD.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAP.LETSFLO.ACE.ASSETMGMNT.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OPT.SAP.INVRECON.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.AUTHINFO.OCSP') +
   GROUP('mqm') +
   OBJTYPE(AUTHINFO) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('B2BNA.ANA.NUO.EXTNDMATMSTR.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.WMS.RETURNASN.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.EVRYTHNG.ASN.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FINPOST.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD011MFG.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAP.AR.IIB.ARSUPPLIER.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.OUT.PMC') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.HDC.OMS.GEDCINVFULL.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.INVF.RL.TEMPIN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OMS.OPT.INBOUNDASN.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('DPTEST.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAP.SAP.ARIBA.REQUI.US.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FIRSTDATA.ACTGC.PGC.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FIRSTDATA.ACTGC.VGC.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.SELECTION.EVALUATION.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.ORDACK.REQ.RL.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.OQ4.ORDERCREATE.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSSAP.IIB.OMS.EUDCINV.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SFCC.RTAM.EOD.US.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('WORKDAYTEST') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FIRSTDATA.AGCDUP.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.LGS.SHIPREQDUP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CLUSTER.HISTORY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OPT.SAP.INVENTORYRECEIPT.LOG.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('CONVEYTEST') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SFCC.RTAM.DEL.NONEU.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.OPP.ORDERCREATEOUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.JMS.TEMPQ.MODEL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.SDSTRINV.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.GLADLY.OMS.ORDINF.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.IIB.NUO.NOTWAYORD.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FF.FINPOST.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.IP.SKUIPM.NA.PRICE.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.FF.OMS.ORDERCANCEL.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.CHUB.OMS.POFNCTNLACK.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.MICROS.OMS.POSINVDELTA.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD021.IN_BOQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.NARVAR.ORDSTATUS.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.ORDERUPDATE.NXTDAY.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.ANA.TMPTBD019.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.IP.SKU.NA.PRICE.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.OMS.ORDERCREATE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.CONFIG.EVENT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IIBA1QM01') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.WMS.RETURNASN.IN.DUP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.GE.OMS.GERETURN.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.INVFSTS.CM.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLCA.SFCC.BI.ORDERCREATE.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IIB.ORDEVTDUP.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('DEFAULT.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPRMVSHIPMT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.FF.RTAM.DEL.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.FF.DEL.RTAM.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.IIB.NUO.NOORDCANCEL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('Duplicate') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EAI.RL.AUDITEVENT.IN.BCKOUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.ZETA.ORDERNOTIFY.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.CHUB.OMS.ORDFFLMCONF.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.EVRYTHNG.SAMPLE.ORDERS05.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BI.ORDERUPDATE.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CLUSTER.TRANSMIT.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.SAP.IIB.TMPTBD010.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.LGS.SHIPREQDUP.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.BI.ORDERCREATE.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('Test_IN.Queue') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPPMTCOLL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.LGS.RTV.TESTIN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.FF.EOD.RTAM.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.CHUBINVPURCH.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.SAP.IIB.TMPTBD010.OUT_TEMP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAMPLE.OUTPUT.SHPREQ.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADAPT.SAP.IIB.WHDEM.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.OQ4.ORDERCREATEOUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.VMS.O9.SUPPL.FACT.ASS.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.FF.RTAM.DEL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.UPS.ZETA.STOREHRS.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.UPS.OMS.EDISHPTRACK.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.FF.DEL.RTAM.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.FB.OMS.ORDCREATE.CM.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SFCC.RTAM.DEL.US.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.PLM.O9.TMPTBD024COSB.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAVVY.ACTGC.VGC.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.INVF.RL.INTER.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.CHUB.PODUP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.ORDCANCEL.OMSREQ.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OPT.OMS.INVENTORYRECEIPT.LOG.DETAILS1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.NUO.SAP.NOPBKORDC.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.INTRNST.NA.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.INTERNAL.REPLY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.OMS.ORDCREDUP.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.BI.REPORD.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.MICROS.OMS.POSINVDAILY.PFS.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.BI.ORDERCREATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.PMC.OMS.CBSPRICESHEET.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.INVF.CM.INTER.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.JDA.TO.IPU.OUTPUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SFCC.RTAM.EOD.EU.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.FF.OMS.SHIPCONFIRM.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.RS.TMPTBD016.IN.LOG1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MCOM.MON.IIB.NOTIFY.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BASE.TOPIC') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.INVD.CM.TEMPIN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SFCC.RTAM.DEL.CA.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FF.FINANCIALPOST.OMSRL.NXTDAY') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.SHIPUPD.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('LGS.ADMIN.SVRCONN') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.LGS.FEEDRTV.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.HDC.OMS.GEDCINVDELTA.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.FINPOST.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.UPS.OMS.EDISHPTRACK.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BANKPRO.ORDERUPLOAD.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2B.SAP.IIB.NOSHIPMENTNA.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPINVNDCTL.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.OMS.JDA.FLINVDUP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.INVFSTS.RL.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPHOLDORD.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD012.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.EVRYTHNG.SAMPLE.ORDERS05.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLCA.SFCC.BI.ORDERCREATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.CHUB.SFCC.VNDRINVFULL.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.ZETA.ORDERNOTIFY.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.INVDSTS.RL.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.FINPOST.EA.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.ORDACK.OMSREQ.RL.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.PERFM.EVENT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.EVRYTHNG.SAMPLE.CREMAS05.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SFCC.RTAM.EOD.NONEU.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.INVD.RL.TEMPIN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPORD.PK.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.AWS.ORDERCREATE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.LISTENER.TCP') +
   GROUP('mqm') +
   OBJTYPE(LISTENER) +
   AUTHADD(CHG,DLT,DSP,CTRL)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.NARVAR.ORDCRTUPD.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.EVRYTHNG.SAMPLE.CREMAS05.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.FF.OMS.ORDERCREATE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CLUSTER.TRANSMIT.MODEL.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SFCC.RTAM.EOD.EU.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.O9.TMPTBD017.OUT_DEV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.ORDACK.FBREQ.RL.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.LGS.FEEDRTV.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SFCC.RTAM.DEL.EU.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.AMQP.COMMAND.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPSTORERLS.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD013.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OMS.OPT.INBOUNDASN.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SAP.TMPTBD006.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.GEFINPOSTME.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.FF.RTVFEED.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.CHUB.OMS.ORDFFLMCONF.TEST.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SFCC.SDSTRINV.DEFAULT.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.NARVAR.ORDSTATUS.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.GFE.NUO.INTLIDENTIFIER.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SFCC.ORDERACK.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.ORDACK.FBREQ.CM.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.IIB.PKMS.INBOUNDASN.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.GLADLY.OMS.ORDINF.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.IIB.NUO.INVDELTAFEED.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.CHUB.OMS.POFNCTNLACK.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FF.FINANCIALPOST.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.IIB.NUO.NOSHIPMENT.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.IP.SKU.NA.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.IP.STYLEVARIPM.NA.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.INVF.CM.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SAP.TMPTBD009.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SRM.PROVIDER.PARTNER.JSON.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.NUO.SAP.NOPBKORDC.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADAPT.IIB.SAP.ARCREATEVENDOR.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.EVRYTHNG.SAMPLE.CREMAS05') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.ZETA.ORDNTFYDUP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.CONVEY.INVUPD.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.FF.OMS.CREATEORDER.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.CODE.ORDERFEED.BUYER.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.VMS.O9.SUPPL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.INVDSTS.CM.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADAPT.ACE.SAP.UPDATEASSET.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SFCC.RTAM.DEL.EU.TEMPIN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.IIB.NUO.INVDELTAFEED.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.RS.TMPTBD001A.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.FF.OMS.ORDERCANCEL.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.OMS.JDA.DAINVDUP.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLCA.OMS.WMS.SHIPREQUEST.ERRORDETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.INVF.RL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('sample.get') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.O9.TMPTBD015.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2B.IIB.NUO.NOORDERACKNA.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OPT.SAP.INVRECON.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD011SKU.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.ORDERUPDATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.LGS.SHIPREQUEST.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.ZETA.ORDNTFYDUP.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.RTVFEED.NXTDAY') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.GCD.ORDCRTUPD.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GTMTEST') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.ORDACK.REQ.RL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.YEXT.IIB.STRINFDUP.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.ZETA.ORDNTFYDUP.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.MM.SDSLAALERT.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SFCC.RTAM.EOD.ME.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.OMS.TMPTBD014.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.LGS.FEEDRTV.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FF.FINPOST.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.CHANNEL.EVENT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPORDAPMT.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FB.ORDRETURN.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IIB.ORDEREVENT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.GLADLY.OMS.ORDINF.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.RS.QA.OUT.ND') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.VMS.PLM.RM.SUPPL.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.OQA.ORDERCREATE.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.SAP.OMS.DEMALLOC.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FF.FINPOST.NXTDAY') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
*******************************************************************************
* Script ended on 2024-03-08   at 11.13.43 
* Number of Inquiry commands issued: 14 
* Number of Inquiry commands completed: 14 
* Number of Inquiry responses processed: 3388 
* QueueManager count: 1 
* Queue count: 1624 
* NameList count: 3 
* Process count: 1 
* Channel count: 23 
* AuthInfo count: 4 
* Listener count: 4 
* Service count: 2 
* CommInfo count: 1 
* Topic count: 8 
* Subscription count: 5 
* ChlAuthRec count: 18 
* AuthRec count: 1692 
* Number of objects/records: 3386 
*******************************************************************************
